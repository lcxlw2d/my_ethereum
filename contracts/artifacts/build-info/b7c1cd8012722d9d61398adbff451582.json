{
	"id": "b7c1cd8012722d9d61398adbff451582",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/NftAuction.sol": {
				"content": "// SPDX-License-Identifier: SEE LICENSE IN LICENSE\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport {AggregatorV3Interface} from \"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\";\n\ncontract NftAuction is Initializable, UUPSUpgradeable {\n    struct Auction {\n        // NFT合约地址\n        address nftContract;\n        // NFT ID\n        uint256 tokenId;\n        // 卖家\n        address seller;\n        // 持续时间\n        uint256 duration;\n        // 起拍价\n        uint256 startPrice;\n        // 开始时间\n        uint256 startTime;\n        // 是否结束\n        bool ended;\n        // 最高出价者\n        address highestBidder;\n        // 最高价\n        uint256 highestBid;\n        // 参与竞价的资产类型， 0x地址表示ETH，其他地址表示ERC20代币\n        address tokenAddress;\n    }\n    // 状态\n    mapping(uint256 => Auction) public auctions;\n    // 下一个拍卖ID\n    uint256 public nextAuctionId;\n    // 管理员地址\n    address public admin;\n\n    AggregatorV3Interface internal priceETHFeed;\n\n    function initialize() public initializer {\n        admin = msg.sender;\n    }\n\n    function setPriceFeed(address _priceFeed) public {\n        priceETHFeed = AggregatorV3Interface(_priceFeed);\n    }\n\n    function getLatestPrice() public view returns (int) {\n        (\n            uint80 roundID,\n            int price,\n            uint startedAt,\n            uint timeStamp,\n            uint80 answeredInRound\n        ) = priceETHFeed.latestRoundData();\n        // emit PriceUpdated(price);\n        return price;\n    }\n\n    // 创建拍卖\n    function createAuction(\n        uint256 _duration,\n        uint256 _startPrice,\n        address _nftAddress,\n        uint256 tokenId\n    ) public {\n        require(msg.sender == admin, \"Only admin can create auction\");\n        require(_duration >= 10, \"Duration must be greater than 10\");\n        require(_startPrice > 0, \"Start price must be greater than 0\");\n\n        // 转移NFT到合约\n        IERC721(_nftAddress).approve(address(this), tokenId);\n        // IERC721(_nftAddress).safeTransferFrom(msg.sender, address(this), tokenId);\n\n        auctions[nextAuctionId] = Auction({\n            nftContract: _nftAddress,\n            tokenId: tokenId,\n            seller: msg.sender,\n            duration: _duration,\n            startPrice: _startPrice,\n            ended: false,\n            highestBidder: address(0),\n            highestBid: 0,\n            startTime: block.timestamp,\n            tokenAddress: address(0)\n        });\n        nextAuctionId++;\n    }\n\n    function placeBid(\n        uint256 _auctionId,\n        uint256 _amount,\n        address _tokenAddress\n    ) public payable {\n        Auction storage auction = auctions[_auctionId];\n        require(\n            auctions[_auctionId].ended == false &&\n                block.timestamp < (auction.startTime + auction.duration),\n            \"Auction has ended\"\n        );\n        require(\n            msg.value > auction.highestBid && msg.value > auction.startPrice,\n            \"Bid must be higher than current highest bid\"\n        );\n        // 退回 previously highest bid\n        if (auction.highestBidder != address(0)) {\n            payable(auction.highestBidder).transfer(auction.highestBid);\n        }\n        auction.highestBidder = msg.sender;\n        auction.highestBid = msg.value;\n    }\n\n    // 结束拍卖\n    function endAuction(uint256 _auctionId) public {\n        Auction storage auction = auctions[_auctionId];\n        require(auction.ended == false, \"Auction has ended\");\n        // 转移NFT到最高出价者\n        IERC721(auction.nftContract).transferFrom(\n            admin,\n            auction.highestBidder,\n            auction.tokenId\n        );\n        // 转移剩余的资金到卖家\n        payable(address(this)).transfer(address(this).balance);\n        auction.ended = true;\n    }\n\n    receive() external payable {\n        // 接收NFT的支付\n    }\n\n    function _authorizeUpgrade(\n        address newImplementation\n    ) internal view override {\n        require(msg.sender == admin, \"Only admin can upgrade\");\n    }\n}\n"
			},
			"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.22;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC-1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.22;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            _revert(returndata);\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d39e11b1dc7b9b8ccdabbc9be442ab7cda4a81c748f57e316dcb1bcb4a28bf9\",\"dweb:/ipfs/QmaG6vz6W6iEUBsbHSBob5mdcitYxWjoygxREHpsJHfWrS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"UPGRADE_INTERFACE_VERSION": {
								"details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"proxiableUUID()": "52d1902d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"IERC1967": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220089058072fc6f42f8f62f38fcf5cfc02f77bb71f0e72f0efc0812efd2799168964736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220089058072fc6f42f8f62f38fcf5cfc02f77bb71f0e72f0efc0812efd2799168964736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD SWAP1 PC SMOD 0x2F 0xC6 DELEGATECALL 0x2F DUP16 PUSH3 0xF38FCF TLOAD 0xFC MUL 0xF7 PUSH28 0xB71F0E72F0EFC0812EFD2799168964736F6C634300081E0033000000 ",
							"sourceMap": "496:5741:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220089058072fc6f42f8f62f38fcf5cfc02f77bb71f0e72f0efc0812efd2799168964736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD SWAP1 PC SMOD 0x2F 0xC6 DELEGATECALL 0x2F DUP16 PUSH3 0xF38FCF TLOAD 0xFC MUL 0xF7 PUSH28 0xB71F0E72F0EFC0812EFD2799168964736F6C634300081E0033000000 ",
							"sourceMap": "496:5741:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220089058072fc6f42f8f62f38fcf5cfc02f77bb71f0e72f0efc0812efd2799168964736f6c634300081e0033",
									".code": [
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/NftAuction.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC-721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6048  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6048  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122016bd345b94ef3845ef4ed93445c8d5f14e5010d9c744bb2ec9847009404477d664736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122016bd345b94ef3845ef4ed93445c8d5f14e5010d9c744bb2ec9847009404477d664736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0xBD CALLVALUE JUMPDEST SWAP5 0xEF CODESIZE GASLIMIT 0xEF 0x4E 0xD9 CALLVALUE GASLIMIT 0xC8 0xD5 CALL 0x4E POP LT 0xD9 0xC7 PREVRANDAO 0xBB 0x2E 0xC9 DUP5 PUSH17 0x9404477D664736F6C634300081E003300 ",
							"sourceMap": "233:5815:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122016bd345b94ef3845ef4ed93445c8d5f14e5010d9c744bb2ec9847009404477d664736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0xBD CALLVALUE JUMPDEST SWAP5 0xEF CODESIZE GASLIMIT 0xEF 0x4E 0xD9 CALLVALUE GASLIMIT 0xC8 0xD5 CALL 0x4E POP LT 0xD9 0xC7 PREVRANDAO 0xBB 0x2E 0xC9 DUP5 PUSH17 0x9404477D664736F6C634300081E003300 ",
							"sourceMap": "233:5815:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122016bd345b94ef3845ef4ed93445c8d5f14e5010d9c744bb2ec9847009404477d664736f6c634300081e0033",
									".code": [
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/NftAuction.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122070b7bdd8bfafafcaf4815a18409339c23cd54fa7ea05f55990da1c7a945d265e64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122070b7bdd8bfafafcaf4815a18409339c23cd54fa7ea05f55990da1c7a945d265e64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0xB7BDD8BFAFAFCAF4815A18409339C23CD5 0x4F 0xA7 0xEA SDIV CREATE2 MSIZE SWAP1 0xDA SHR PUSH27 0x945D265E64736F6C634300081E0033000000000000000000000000 ",
							"sourceMap": "411:484:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122070b7bdd8bfafafcaf4815a18409339c23cd54fa7ea05f55990da1c7a945d265e64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0xB7BDD8BFAFAFCAF4815A18409339C23CD5 0x4F 0xA7 0xEA SDIV CREATE2 MSIZE SWAP1 0xDA SHR PUSH27 0x945D265E64736F6C634300081E0033000000000000000000000000 ",
							"sourceMap": "411:484:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122070b7bdd8bfafafcaf4815a18409339c23cd54fa7ea05f55990da1c7a945d265e64736f6c634300081e0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/NftAuction.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212204a25b37743574a9bd3df8f6a8c08ff91930e443dfdca74f77c843cbdc2cbeaf064736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212204a25b37743574a9bd3df8f6a8c08ff91930e443dfdca74f77c843cbdc2cbeaf064736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBBASEFEE 0x25 0xB3 PUSH24 0x43574A9BD3DF8F6A8C08FF91930E443DFDCA74F77C843CBD 0xC2 0xCB 0xEA CREATE PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "1407:2774:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212204a25b37743574a9bd3df8f6a8c08ff91930e443dfdca74f77c843cbdc2cbeaf064736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBBASEFEE 0x25 0xB3 PUSH24 0x43574A9BD3DF8F6A8C08FF91930E443DFDCA74F77C843CBD 0xC2 0xCB 0xEA CREATE PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "1407:2774:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getInt256Slot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204a25b37743574a9bd3df8f6a8c08ff91930e443dfdca74f77c843cbdc2cbeaf064736f6c634300081e0033",
									".code": [
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/NftAuction.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NftAuction.sol": {
				"NftAuction": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "auctions",
							"outputs": [
								{
									"internalType": "address",
									"name": "nftContract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "startPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "ended",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "highestBidder",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "highestBid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_duration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_startPrice",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_nftAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "createAuction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_auctionId",
									"type": "uint256"
								}
							],
							"name": "endAuction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLatestPrice",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nextAuctionId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_auctionId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								}
							],
							"name": "placeBid",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_priceFeed",
									"type": "address"
								}
							],
							"name": "setPriceFeed",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NftAuction.sol\":403:4341  contract NftAuction is Initializable, UUPSUpgradeable {... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1171:1175  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1128:1176  address private immutable __self = address(this) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  swap1\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n    /* \"contracts/NftAuction.sol\":403:4341  contract NftAuction is Initializable, UUPSUpgradeable {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xb8af24a884ce251f7b69c435d70b26b4d69041695ff24aab1b55d194a3fdd883\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/NftAuction.sol\":403:4341  contract NftAuction is Initializable, UUPSUpgradeable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xad3cb1cc\n      gt\n      tag_15\n      jumpi\n      dup1\n      0xad3cb1cc\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xad6561ec\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb1cb48ef\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xb9a2de3a\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf851a440\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xfc528482\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x4f1ef286\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x571a26a0\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x724e78da\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8129fc1c\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8e15f473\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_3:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      revert(0x00, 0x00)\n    tag_22:\n      pop\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NftAuction.sol\":1068:1111  mapping(uint256 => Auction) public auctions */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      revert(0x00, 0x00)\n    tag_27:\n      pop\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap11\n      swap10\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NftAuction.sol\":1358:1472  function setPriceFeed(address _priceFeed) public {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      revert(0x00, 0x00)\n    tag_34:\n      pop\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      stop\n        /* \"contracts/NftAuction.sol\":1276:1352  function initialize() public initializer {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      revert(0x00, 0x00)\n    tag_39:\n      pop\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      stop\n        /* \"contracts/NftAuction.sol\":1478:1792  function getLatestPrice() public view returns (int) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      revert(0x00, 0x00)\n    tag_42:\n      pop\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      revert(0x00, 0x00)\n    tag_47:\n      pop\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NftAuction.sol\":2790:3584  function placeBid(... */\n    tag_10:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      stop\n        /* \"contracts/NftAuction.sol\":1818:2784  function createAuction(... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      revert(0x00, 0x00)\n    tag_56:\n      pop\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      stop\n        /* \"contracts/NftAuction.sol\":3610:4101  function endAuction(uint256 _auctionId) public {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      revert(0x00, 0x00)\n    tag_61:\n      pop\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      stop\n        /* \"contracts/NftAuction.sol\":1199:1219  address public admin */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      revert(0x00, 0x00)\n    tag_65:\n      pop\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NftAuction.sol\":1142:1170  uint256 public nextAuctionId */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      revert(0x00, 0x00)\n    tag_70:\n      pop\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_21:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2668  _checkProxy() */\n      tag_76\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2666  _checkProxy */\n      tag_77\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2668  _checkProxy() */\n      jump\t// in\n    tag_76:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4312  _authorizeUpgrade(newImplementation) */\n      tag_79\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4294:4311  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4293  _authorizeUpgrade */\n      tag_80\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4312  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_79:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4368  _upgradeToAndCallUUPS(newImplementation, data) */\n      tag_81\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4344:4361  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4363:4367  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4343  _upgradeToAndCallUUPS */\n      tag_82\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4368  _upgradeToAndCallUUPS(newImplementation, data) */\n      jump\t// in\n    tag_81:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3777:3784  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2946  _checkNotDelegated() */\n      tag_84\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2944  _checkNotDelegated */\n      tag_85\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2946  _checkNotDelegated() */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3803:3835  ERC1967Utils.IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3796:3835  return ERC1967Utils.IMPLEMENTATION_SLOT */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/NftAuction.sol\":1068:1111  mapping(uint256 => Auction) public auctions */\n    tag_31:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      dup1\n      0x06\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x06\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x07\n      add\n      sload\n      swap1\n      dup1\n      0x08\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n      dup11\n      jump\t// out\n        /* \"contracts/NftAuction.sol\":1358:1472  function setPriceFeed(address _priceFeed) public {... */\n    tag_38:\n        /* \"contracts/NftAuction.sol\":1454:1464  _priceFeed */\n      dup1\n        /* \"contracts/NftAuction.sol\":1417:1429  priceETHFeed */\n      0x03\n      0x00\n        /* \"contracts/NftAuction.sol\":1417:1465  priceETHFeed = AggregatorV3Interface(_priceFeed) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NftAuction.sol\":1358:1472  function setPriceFeed(address _priceFeed) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/NftAuction.sol\":1276:1352  function initialize() public initializer {... */\n    tag_41:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_89\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_90\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4704:4721  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4739:4740  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4735  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4740  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4758  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_91\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4744:4758  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4758  initialized == 0 && isTopLevelCall */\n    tag_91:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4704:4758  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4768:4785  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4803:4804  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4799  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4804  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4838  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_92\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4837:4838  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4816:4820  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4808:4833  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4808:4838  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4838  initialized == 1 && address(this).code.length == 0 */\n    tag_92:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4768:4838  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4854:4866  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4866  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4883  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_93\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4871:4883  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4870:4883  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4883  !initialSetup && !construction */\n    tag_93:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4849:4940  if (!initialSetup && !construction) {... */\n      iszero\n      tag_94\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4906:4929  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4849:4940  if (!initialSetup && !construction) {... */\n    tag_94:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4966:4967  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4950  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4963  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4967  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4981:4995  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4977:5044  if (isTopLevelCall) {... */\n      iszero\n      tag_95\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5029:5033  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5012  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5026  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5033  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4977:5044  if (isTopLevelCall) {... */\n    tag_95:\n        /* \"contracts/NftAuction.sol\":1335:1345  msg.sender */\n      caller\n        /* \"contracts/NftAuction.sol\":1327:1332  admin */\n      0x02\n      0x00\n        /* \"contracts/NftAuction.sol\":1327:1345  admin = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5068:5082  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5064:5165  if (isTopLevelCall) {... */\n      iszero\n      tag_97\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5116:5121  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5099  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5113  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5121  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5152:5153  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5064:5165  if (isTopLevelCall) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5171  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NftAuction.sol\":1276:1352  function initialize() public initializer {... */\n      jump\t// out\n        /* \"contracts/NftAuction.sol\":1478:1792  function getLatestPrice() public view returns (int) {... */\n    tag_44:\n        /* \"contracts/NftAuction.sol\":1525:1528  int */\n      0x00\n        /* \"contracts/NftAuction.sol\":1554:1568  uint80 roundID */\n      0x00\n        /* \"contracts/NftAuction.sol\":1582:1591  int price */\n      0x00\n        /* \"contracts/NftAuction.sol\":1605:1619  uint startedAt */\n      0x00\n        /* \"contracts/NftAuction.sol\":1633:1647  uint timeStamp */\n      0x00\n        /* \"contracts/NftAuction.sol\":1661:1683  uint80 answeredInRound */\n      0x00\n        /* \"contracts/NftAuction.sol\":1696:1708  priceETHFeed */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NftAuction.sol\":1696:1724  priceETHFeed.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"contracts/NftAuction.sol\":1696:1726  priceETHFeed.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_102\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_102:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n        /* \"contracts/NftAuction.sol\":1540:1726  (... */\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n        /* \"contracts/NftAuction.sol\":1780:1785  price */\n      dup4\n        /* \"contracts/NftAuction.sol\":1773:1785  return price */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NftAuction.sol\":1478:1792  function getLatestPrice() public view returns (int) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_49:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      0x352e302e30000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/NftAuction.sol\":2790:3584  function placeBid(... */\n    tag_55:\n        /* \"contracts/NftAuction.sol\":2923:2946  Auction storage auction */\n      0x00\n        /* \"contracts/NftAuction.sol\":2949:2957  auctions */\n      0x00\n        /* \"contracts/NftAuction.sol\":2949:2969  auctions[_auctionId] */\n      0x00\n        /* \"contracts/NftAuction.sol\":2958:2968  _auctionId */\n      dup6\n        /* \"contracts/NftAuction.sol\":2949:2969  auctions[_auctionId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NftAuction.sol\":2923:2969  Auction storage auction = auctions[_auctionId] */\n      swap1\n      pop\n        /* \"contracts/NftAuction.sol\":3030:3035  false */\n      0x00\n        /* \"contracts/NftAuction.sol\":3000:3035  auctions[_auctionId].ended == false */\n      iszero\n      iszero\n        /* \"contracts/NftAuction.sol\":3000:3008  auctions */\n      0x00\n        /* \"contracts/NftAuction.sol\":3000:3020  auctions[_auctionId] */\n      0x00\n        /* \"contracts/NftAuction.sol\":3009:3019  _auctionId */\n      dup7\n        /* \"contracts/NftAuction.sol\":3000:3020  auctions[_auctionId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NftAuction.sol\":3000:3026  auctions[_auctionId].ended */\n      0x06\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/NftAuction.sol\":3000:3035  auctions[_auctionId].ended == false */\n      iszero\n      iszero\n      eq\n        /* \"contracts/NftAuction.sol\":3000:3111  auctions[_auctionId].ended == false &&... */\n      dup1\n      iszero\n      tag_106\n      jumpi\n      pop\n        /* \"contracts/NftAuction.sol\":3094:3101  auction */\n      dup1\n        /* \"contracts/NftAuction.sol\":3094:3110  auction.duration */\n      0x03\n      add\n      sload\n        /* \"contracts/NftAuction.sol\":3074:3081  auction */\n      dup2\n        /* \"contracts/NftAuction.sol\":3074:3091  auction.startTime */\n      0x05\n      add\n      sload\n        /* \"contracts/NftAuction.sol\":3074:3110  auction.startTime + auction.duration */\n      tag_107\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n        /* \"contracts/NftAuction.sol\":3055:3070  block.timestamp */\n      timestamp\n        /* \"contracts/NftAuction.sol\":3055:3111  block.timestamp < (auction.startTime + auction.duration) */\n      lt\n        /* \"contracts/NftAuction.sol\":3000:3111  auctions[_auctionId].ended == false &&... */\n    tag_106:\n        /* \"contracts/NftAuction.sol\":2979:3154  require(... */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"contracts/NftAuction.sol\":3197:3204  auction */\n      dup1\n        /* \"contracts/NftAuction.sol\":3197:3215  auction.highestBid */\n      0x07\n      add\n      sload\n        /* \"contracts/NftAuction.sol\":3185:3194  msg.value */\n      callvalue\n        /* \"contracts/NftAuction.sol\":3185:3215  msg.value > auction.highestBid */\n      gt\n        /* \"contracts/NftAuction.sol\":3185:3249  msg.value > auction.highestBid && msg.value > auction.startPrice */\n      dup1\n      iszero\n      tag_112\n      jumpi\n      pop\n        /* \"contracts/NftAuction.sol\":3231:3238  auction */\n      dup1\n        /* \"contracts/NftAuction.sol\":3231:3249  auction.startPrice */\n      0x04\n      add\n      sload\n        /* \"contracts/NftAuction.sol\":3219:3228  msg.value */\n      callvalue\n        /* \"contracts/NftAuction.sol\":3219:3249  msg.value > auction.startPrice */\n      gt\n        /* \"contracts/NftAuction.sol\":3185:3249  msg.value > auction.highestBid && msg.value > auction.startPrice */\n    tag_112:\n        /* \"contracts/NftAuction.sol\":3164:3318  require(... */\n      tag_113\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_113:\n        /* \"contracts/NftAuction.sol\":3406:3407  0 */\n      0x00\n        /* \"contracts/NftAuction.sol\":3373:3408  auction.highestBidder != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NftAuction.sol\":3373:3380  auction */\n      dup2\n        /* \"contracts/NftAuction.sol\":3373:3394  auction.highestBidder */\n      0x06\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NftAuction.sol\":3373:3408  auction.highestBidder != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NftAuction.sol\":3369:3494  if (auction.highestBidder != address(0)) {... */\n      tag_116\n      jumpi\n        /* \"contracts/NftAuction.sol\":3432:3439  auction */\n      dup1\n        /* \"contracts/NftAuction.sol\":3432:3453  auction.highestBidder */\n      0x06\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NftAuction.sol\":3424:3463  payable(auction.highestBidder).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NftAuction.sol\":3424:3483  payable(auction.highestBidder).transfer(auction.highestBid) */\n      0x08fc\n        /* \"contracts/NftAuction.sol\":3464:3471  auction */\n      dup3\n        /* \"contracts/NftAuction.sol\":3464:3482  auction.highestBid */\n      0x07\n      add\n      sload\n        /* \"contracts/NftAuction.sol\":3424:3483  payable(auction.highestBidder).transfer(auction.highestBid) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_118\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_118:\n      pop\n        /* \"contracts/NftAuction.sol\":3369:3494  if (auction.highestBidder != address(0)) {... */\n    tag_116:\n        /* \"contracts/NftAuction.sol\":3527:3537  msg.sender */\n      caller\n        /* \"contracts/NftAuction.sol\":3503:3510  auction */\n      dup2\n        /* \"contracts/NftAuction.sol\":3503:3524  auction.highestBidder */\n      0x06\n      add\n      0x01\n        /* \"contracts/NftAuction.sol\":3503:3537  auction.highestBidder = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NftAuction.sol\":3568:3577  msg.value */\n      callvalue\n        /* \"contracts/NftAuction.sol\":3547:3554  auction */\n      dup2\n        /* \"contracts/NftAuction.sol\":3547:3565  auction.highestBid */\n      0x07\n      add\n        /* \"contracts/NftAuction.sol\":3547:3577  auction.highestBid = msg.value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NftAuction.sol\":2913:3584  {... */\n      pop\n        /* \"contracts/NftAuction.sol\":2790:3584  function placeBid(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NftAuction.sol\":1818:2784  function createAuction(... */\n    tag_60:\n        /* \"contracts/NftAuction.sol\":1996:2001  admin */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NftAuction.sol\":1982:2001  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NftAuction.sol\":1982:1992  msg.sender */\n      caller\n        /* \"contracts/NftAuction.sol\":1982:2001  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NftAuction.sol\":1974:2035  require(msg.sender == admin, \"Only admin can create auction\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"contracts/NftAuction.sol\":2066:2068  10 */\n      0x0a\n        /* \"contracts/NftAuction.sol\":2053:2062  _duration */\n      dup5\n        /* \"contracts/NftAuction.sol\":2053:2068  _duration >= 10 */\n      lt\n      iszero\n        /* \"contracts/NftAuction.sol\":2045:2105  require(_duration >= 10, \"Duration must be greater than 10\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_123:\n        /* \"contracts/NftAuction.sol\":2137:2138  0 */\n      0x00\n        /* \"contracts/NftAuction.sol\":2123:2134  _startPrice */\n      dup4\n        /* \"contracts/NftAuction.sol\":2123:2138  _startPrice > 0 */\n      gt\n        /* \"contracts/NftAuction.sol\":2115:2177  require(_startPrice > 0, \"Start price must be greater than 0\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_126:\n        /* \"contracts/NftAuction.sol\":2226:2237  _nftAddress */\n      dup2\n        /* \"contracts/NftAuction.sol\":2218:2246  IERC721(_nftAddress).approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"contracts/NftAuction.sol\":2255:2259  this */\n      address\n        /* \"contracts/NftAuction.sol\":2262:2269  tokenId */\n      dup4\n        /* \"contracts/NftAuction.sol\":2218:2270  IERC721(_nftAddress).approve(address(this), tokenId) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap3\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_131\n      jumpi\n      revert(0x00, 0x00)\n    tag_131:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_133\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_133:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NftAuction.sol\":2393:2752  Auction({... */\n      mload(0x40)\n      dup1\n      0x0140\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/NftAuction.sol\":2428:2439  _nftAddress */\n      dup4\n        /* \"contracts/NftAuction.sol\":2393:2752  Auction({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NftAuction.sol\":2462:2469  tokenId */\n      dup3\n        /* \"contracts/NftAuction.sol\":2393:2752  Auction({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NftAuction.sol\":2491:2501  msg.sender */\n      caller\n        /* \"contracts/NftAuction.sol\":2393:2752  Auction({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NftAuction.sol\":2525:2534  _duration */\n      dup6\n        /* \"contracts/NftAuction.sol\":2393:2752  Auction({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NftAuction.sol\":2560:2571  _startPrice */\n      dup5\n        /* \"contracts/NftAuction.sol\":2393:2752  Auction({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NftAuction.sol\":2688:2703  block.timestamp */\n      timestamp\n        /* \"contracts/NftAuction.sol\":2393:2752  Auction({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NftAuction.sol\":2592:2597  false */\n      0x00\n        /* \"contracts/NftAuction.sol\":2393:2752  Auction({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NftAuction.sol\":2634:2635  0 */\n      0x00\n        /* \"contracts/NftAuction.sol\":2393:2752  Auction({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NftAuction.sol\":2662:2663  0 */\n      0x00\n        /* \"contracts/NftAuction.sol\":2393:2752  Auction({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NftAuction.sol\":2739:2740  0 */\n      0x00\n        /* \"contracts/NftAuction.sol\":2393:2752  Auction({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/NftAuction.sol\":2367:2375  auctions */\n      0x00\n        /* \"contracts/NftAuction.sol\":2367:2390  auctions[nextAuctionId] */\n      0x00\n        /* \"contracts/NftAuction.sol\":2376:2389  nextAuctionId */\n      sload(0x01)\n        /* \"contracts/NftAuction.sol\":2367:2390  auctions[nextAuctionId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NftAuction.sol\":2367:2752  auctions[nextAuctionId] = Auction({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      sstore\n      0xc0\n      dup3\n      add\n      mload\n      dup2\n      0x06\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xe0\n      dup3\n      add\n      mload\n      dup2\n      0x06\n      add\n      exp(0x0100, 0x01)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x0100\n      dup3\n      add\n      mload\n      dup2\n      0x07\n      add\n      sstore\n      0x0120\n      dup3\n      add\n      mload\n      dup2\n      0x08\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/NftAuction.sol\":2762:2775  nextAuctionId */\n      0x01\n      0x00\n        /* \"contracts/NftAuction.sol\":2762:2777  nextAuctionId++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_134\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/NftAuction.sol\":1818:2784  function createAuction(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NftAuction.sol\":3610:4101  function endAuction(uint256 _auctionId) public {... */\n    tag_64:\n        /* \"contracts/NftAuction.sol\":3667:3690  Auction storage auction */\n      0x00\n        /* \"contracts/NftAuction.sol\":3693:3701  auctions */\n      0x00\n        /* \"contracts/NftAuction.sol\":3693:3713  auctions[_auctionId] */\n      0x00\n        /* \"contracts/NftAuction.sol\":3702:3712  _auctionId */\n      dup4\n        /* \"contracts/NftAuction.sol\":3693:3713  auctions[_auctionId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NftAuction.sol\":3667:3713  Auction storage auction = auctions[_auctionId] */\n      swap1\n      pop\n        /* \"contracts/NftAuction.sol\":3748:3753  false */\n      0x00\n        /* \"contracts/NftAuction.sol\":3731:3753  auction.ended == false */\n      iszero\n      iszero\n        /* \"contracts/NftAuction.sol\":3731:3738  auction */\n      dup2\n        /* \"contracts/NftAuction.sol\":3731:3744  auction.ended */\n      0x06\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/NftAuction.sol\":3731:3753  auction.ended == false */\n      iszero\n      iszero\n      eq\n        /* \"contracts/NftAuction.sol\":3723:3775  require(auction.ended == false, \"Auction has ended\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap1\n      tag_111\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_137:\n        /* \"contracts/NftAuction.sol\":3832:3839  auction */\n      dup1\n        /* \"contracts/NftAuction.sol\":3832:3851  auction.nftContract */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NftAuction.sol\":3824:3865  IERC721(auction.nftContract).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/NftAuction.sol\":3879:3884  admin */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NftAuction.sol\":3898:3905  auction */\n      dup4\n        /* \"contracts/NftAuction.sol\":3898:3919  auction.highestBidder */\n      0x06\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NftAuction.sol\":3933:3940  auction */\n      dup5\n        /* \"contracts/NftAuction.sol\":3933:3948  auction.tokenId */\n      0x01\n      add\n      sload\n        /* \"contracts/NftAuction.sol\":3824:3958  IERC721(auction.nftContract).transferFrom(... */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_141\n      jumpi\n      revert(0x00, 0x00)\n    tag_141:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_143\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_143:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NftAuction.sol\":4026:4030  this */\n      address\n        /* \"contracts/NftAuction.sol\":4010:4041  payable(address(this)).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NftAuction.sol\":4010:4064  payable(address(this)).transfer(address(this).balance) */\n      0x08fc\n        /* \"contracts/NftAuction.sol\":4042:4063  address(this).balance */\n      selfbalance\n        /* \"contracts/NftAuction.sol\":4010:4064  payable(address(this)).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_145\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_145:\n      pop\n        /* \"contracts/NftAuction.sol\":4090:4094  true */\n      0x01\n        /* \"contracts/NftAuction.sol\":4074:4081  auction */\n      dup2\n        /* \"contracts/NftAuction.sol\":4074:4087  auction.ended */\n      0x06\n      add\n      0x00\n        /* \"contracts/NftAuction.sol\":4074:4094  auction.ended = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NftAuction.sol\":3657:4101  {... */\n      pop\n        /* \"contracts/NftAuction.sol\":3610:4101  function endAuction(uint256 _auctionId) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/NftAuction.sol\":1199:1219  address public admin */\n    tag_67:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/NftAuction.sol\":1142:1170  uint256 public nextAuctionId */\n    tag_72:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4578:4890  function _checkProxy() internal view virtual {... */\n    tag_77:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4667:4673  __self */\n      immutable(\"0xb8af24a884ce251f7b69c435d70b26b4d69041695ff24aab1b55d194a3fdd883\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4650:4673  address(this) == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4658:4662  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4650:4673  address(this) == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4650:4770  address(this) == __self || // Must be called through delegatecall... */\n      dup1\n      tag_147\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4764:4770  __self */\n      immutable(\"0xb8af24a884ce251f7b69c435d70b26b4d69041695ff24aab1b55d194a3fdd883\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4728:4770  ERC1967Utils.getImplementation() != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4728:4760  ERC1967Utils.getImplementation() */\n      tag_148\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4728:4758  ERC1967Utils.getImplementation */\n      tag_149\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4728:4760  ERC1967Utils.getImplementation() */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4728:4770  ERC1967Utils.getImplementation() != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4650:4770  address(this) == __self || // Must be called through delegatecall... */\n    tag_147:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4633:4884  if (... */\n      iszero\n      tag_150\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4844:4873  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      0xe07c8dba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4633:4884  if (... */\n    tag_150:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4578:4890  function _checkProxy() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/NftAuction.sol\":4177:4339  function _authorizeUpgrade(... */\n    tag_80:\n        /* \"contracts/NftAuction.sol\":4300:4305  admin */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NftAuction.sol\":4286:4305  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NftAuction.sol\":4286:4296  msg.sender */\n      caller\n        /* \"contracts/NftAuction.sol\":4286:4305  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NftAuction.sol\":4278:4332  require(msg.sender == admin, \"Only admin can upgrade\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"contracts/NftAuction.sol\":4177:4339  function _authorizeUpgrade(... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6032:6570  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n    tag_82:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6149:6166  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6131:6181  IERC1822Proxiable(newImplementation).proxiableUUID */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x52d1902d\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6131:6183  IERC1822Proxiable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_156\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_157\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n      0x01\n    tag_156:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6127:6564  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_159\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6535:6552  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6493:6553  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      0x4c9c8ce300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6127:6564  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6233:6265  ERC1967Utils.IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6225:6229  slot */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6225:6265  slot != ERC1967Utils.IMPLEMENTATION_SLOT */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6221:6341  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n      tag_165\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6321:6325  slot */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6292:6326  UUPSUnsupportedProxiableUUID(slot) */\n      mload(0x40)\n      0xaa1d49a400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6221:6341  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n    tag_165:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6354:6408  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      tag_167\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6384:6401  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6403:6407  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6354:6383  ERC1967Utils.upgradeToAndCall */\n      tag_168\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6354:6408  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6184:6419  returns (bytes32 slot) {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6032:6570  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5007:5220  function _checkNotDelegated() internal view virtual {... */\n    tag_85:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5090:5096  __self */\n      immutable(\"0xb8af24a884ce251f7b69c435d70b26b4d69041695ff24aab1b55d194a3fdd883\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5073:5096  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5081:5085  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5073:5096  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5069:5214  if (address(this) != __self) {... */\n      tag_170\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5174:5203  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      0xe07c8dba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5069:5214  if (address(this) != __self) {... */\n    tag_170:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5007:5220  function _checkNotDelegated() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9071:9276  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_90:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9129:9159  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9171:9183  bytes32 slot */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9213  _initializableStorageSlot() */\n      tag_172\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9211  _initializableStorageSlot */\n      tag_173\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9213  _initializableStorageSlot() */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9171:9213  bytes32 slot = _initializableStorageSlot() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9256:9260  slot */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9246:9260  $.slot := slot */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9232:9270  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9071:9276  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1441:1579  function getImplementation() internal view returns (address) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1493:1500  address */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1566  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      tag_175\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1546:1565  IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1545  StorageSlot.getAddressSlot */\n      tag_176\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1566  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1572  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1512:1572  return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1441:1579  function getImplementation() internal view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n      tag_178\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2374:2391  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2373  _setImplementation */\n      tag_179\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2425:2442  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2407:2443  IERC1967.Upgraded(newImplementation) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2472:2473  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2462  data */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2469  data.length */\n      mload\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2473  data.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n      iszero\n      tag_180\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n      tag_181\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2518:2535  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2537:2541  data */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2517  Address.functionDelegateCall */\n      tag_182\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n    tag_181:\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n      jump(tag_183)\n    tag_180:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n      tag_184\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2589  _checkNonPayable */\n      tag_185\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8819:8941  function _initializableStorageSlot() internal pure virtual returns (bytes32) {... */\n    tag_173:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8887:8894  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3147:3213  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00 */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8913:8934  INITIALIZABLE_STORAGE */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8906:8934  return INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8819:8941  function _initializableStorageSlot() internal pure virtual returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1899:2062  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1960:1981  AddressSlot storage r */\n      0x00\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":2042:2046  slot */\n      dup2\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":2032:2046  r.slot := slot */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1899:2062  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1781:1782  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1765  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1777  newImplementation.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1782  newImplementation.code.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n      tag_189\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1834:1851  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      0x4c9c8ce300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1928:1945  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1919  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      tag_191\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1899:1918  IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1898  StorageSlot.getAddressSlot */\n      tag_176\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1919  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1925  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1945  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3916:4169  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3999:4011  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4024:4036  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4038:4061  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4065:4071  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4065:4084  target.delegatecall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4085:4089  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4065:4090  target.delegatecall(data) */\n      mload(0x40)\n      tag_193\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_197\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_196)\n    tag_197:\n      0x60\n      swap2\n      pop\n    tag_196:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4023:4090  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4107:4162  verifyCallResultFromTarget(target, success, returndata) */\n      tag_198\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4134:4140  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4142:4149  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4151:4161  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4107:4133  verifyCallResultFromTarget */\n      tag_199\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4107:4162  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4100:4162  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3916:4169  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6175:6176  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6172  msg.value */\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6176  msg.value > 0 */\n      gt\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n      iszero\n      tag_201\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6199:6218  ERC1967NonPayable() */\n      mload(0x40)\n      0xb398979f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n    tag_201:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4437:5019  function verifyCallResultFromTarget(... */\n    tag_199:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4581:4593  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4610:4617  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\n      tag_203\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4633:4652  _revert(returndata) */\n      tag_204\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4641:4651  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4633:4640  _revert */\n      tag_205\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4633:4652  _revert(returndata) */\n      jump\t// in\n    tag_204:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\n      jump(tag_206)\n    tag_203:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4878:4879  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4867  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4874  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4879  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4906  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_207\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4905:4906  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4883:4889  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4883:4901  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4883:4906  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4906  returndata.length == 0 && target.code.length == 0 */\n    tag_207:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4853:4972  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_208\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4950:4956  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4933:4957  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4853:4972  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_208:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4992:5002  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4985:5002  return returndata */\n      swap1\n      pop\n      jump(tag_202)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4437:5019  function verifyCallResultFromTarget(... */\n    tag_202:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5559:6046  function _revert(bytes memory returndata) private pure {... */\n    tag_205:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5710:5711  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5700  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5707  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5711  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5686:6040  if (returndata.length > 0) {... */\n      iszero\n      tag_211\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5887:5897  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5881:5898  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5943:5958  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5930:5940  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5926:5928  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5922:5941  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5915:5959  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5686:6040  if (returndata.length > 0) {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6010:6029  Errors.FailedCall() */\n      mload(0x40)\n      0xd6bda27500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:82   */\n    tag_213:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_214:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_215:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_216:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_217:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_280\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_216\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_218:\n        /* \"#utility.yul\":641:665   */\n      tag_282\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_217\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_283\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_283:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_219:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_285\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_218\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:958   */\n    tag_220:\n        /* \"#utility.yul\":950:951   */\n      0x00\n        /* \"#utility.yul\":947:948   */\n      0x00\n        /* \"#utility.yul\":940:952   */\n      revert\n        /* \"#utility.yul\":964:1081   */\n    tag_221:\n        /* \"#utility.yul\":1073:1074   */\n      0x00\n        /* \"#utility.yul\":1070:1071   */\n      0x00\n        /* \"#utility.yul\":1063:1075   */\n      revert\n        /* \"#utility.yul\":1087:1189   */\n    tag_222:\n        /* \"#utility.yul\":1128:1134   */\n      0x00\n        /* \"#utility.yul\":1179:1181   */\n      0x1f\n        /* \"#utility.yul\":1175:1182   */\n      not\n        /* \"#utility.yul\":1170:1172   */\n      0x1f\n        /* \"#utility.yul\":1163:1168   */\n      dup4\n        /* \"#utility.yul\":1159:1173   */\n      add\n        /* \"#utility.yul\":1155:1183   */\n      and\n        /* \"#utility.yul\":1145:1183   */\n      swap1\n      pop\n        /* \"#utility.yul\":1087:1189   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1195:1375   */\n    tag_223:\n        /* \"#utility.yul\":1243:1320   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1240:1241   */\n      0x00\n        /* \"#utility.yul\":1233:1321   */\n      mstore\n        /* \"#utility.yul\":1340:1344   */\n      0x41\n        /* \"#utility.yul\":1337:1338   */\n      0x04\n        /* \"#utility.yul\":1330:1345   */\n      mstore\n        /* \"#utility.yul\":1364:1368   */\n      0x24\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1354:1369   */\n      revert\n        /* \"#utility.yul\":1381:1662   */\n    tag_224:\n        /* \"#utility.yul\":1464:1491   */\n      tag_291\n        /* \"#utility.yul\":1486:1490   */\n      dup3\n        /* \"#utility.yul\":1464:1491   */\n      tag_222\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":1456:1462   */\n      dup2\n        /* \"#utility.yul\":1452:1492   */\n      add\n        /* \"#utility.yul\":1594:1600   */\n      dup2\n        /* \"#utility.yul\":1582:1592   */\n      dup2\n        /* \"#utility.yul\":1579:1601   */\n      lt\n        /* \"#utility.yul\":1558:1576   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1546:1556   */\n      dup3\n        /* \"#utility.yul\":1543:1577   */\n      gt\n        /* \"#utility.yul\":1540:1602   */\n      or\n        /* \"#utility.yul\":1537:1625   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":1605:1623   */\n      tag_293\n      tag_223\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":1537:1625   */\n    tag_292:\n        /* \"#utility.yul\":1645:1655   */\n      dup1\n        /* \"#utility.yul\":1641:1643   */\n      0x40\n        /* \"#utility.yul\":1634:1656   */\n      mstore\n        /* \"#utility.yul\":1424:1662   */\n      pop\n        /* \"#utility.yul\":1381:1662   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1668:1797   */\n    tag_225:\n        /* \"#utility.yul\":1702:1708   */\n      0x00\n        /* \"#utility.yul\":1729:1749   */\n      tag_295\n      tag_213\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":1719:1749   */\n      swap1\n      pop\n        /* \"#utility.yul\":1758:1791   */\n      tag_296\n        /* \"#utility.yul\":1786:1790   */\n      dup3\n        /* \"#utility.yul\":1778:1784   */\n      dup3\n        /* \"#utility.yul\":1758:1791   */\n      tag_224\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":1668:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:2110   */\n    tag_226:\n        /* \"#utility.yul\":1864:1868   */\n      0x00\n        /* \"#utility.yul\":1954:1972   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1946:1952   */\n      dup3\n        /* \"#utility.yul\":1943:1973   */\n      gt\n        /* \"#utility.yul\":1940:1996   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":1976:1994   */\n      tag_299\n      tag_223\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":1940:1996   */\n    tag_298:\n        /* \"#utility.yul\":2014:2043   */\n      tag_300\n        /* \"#utility.yul\":2036:2042   */\n      dup3\n        /* \"#utility.yul\":2014:2043   */\n      tag_222\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":2006:2043   */\n      swap1\n      pop\n        /* \"#utility.yul\":2098:2102   */\n      0x20\n        /* \"#utility.yul\":2092:2096   */\n      dup2\n        /* \"#utility.yul\":2088:2103   */\n      add\n        /* \"#utility.yul\":2080:2103   */\n      swap1\n      pop\n        /* \"#utility.yul\":1803:2110   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2116:2264   */\n    tag_227:\n        /* \"#utility.yul\":2214:2220   */\n      dup3\n        /* \"#utility.yul\":2209:2212   */\n      dup2\n        /* \"#utility.yul\":2204:2207   */\n      dup4\n        /* \"#utility.yul\":2191:2221   */\n      calldatacopy\n        /* \"#utility.yul\":2255:2256   */\n      0x00\n        /* \"#utility.yul\":2246:2252   */\n      dup4\n        /* \"#utility.yul\":2241:2244   */\n      dup4\n        /* \"#utility.yul\":2237:2253   */\n      add\n        /* \"#utility.yul\":2230:2257   */\n      mstore\n        /* \"#utility.yul\":2116:2264   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2270:2693   */\n    tag_228:\n        /* \"#utility.yul\":2347:2352   */\n      0x00\n        /* \"#utility.yul\":2372:2437   */\n      tag_303\n        /* \"#utility.yul\":2388:2436   */\n      tag_304\n        /* \"#utility.yul\":2429:2435   */\n      dup5\n        /* \"#utility.yul\":2388:2436   */\n      tag_226\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":2372:2437   */\n      tag_225\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":2363:2437   */\n      swap1\n      pop\n        /* \"#utility.yul\":2460:2466   */\n      dup3\n        /* \"#utility.yul\":2453:2458   */\n      dup2\n        /* \"#utility.yul\":2446:2467   */\n      mstore\n        /* \"#utility.yul\":2498:2502   */\n      0x20\n        /* \"#utility.yul\":2491:2496   */\n      dup2\n        /* \"#utility.yul\":2487:2503   */\n      add\n        /* \"#utility.yul\":2536:2539   */\n      dup5\n        /* \"#utility.yul\":2527:2533   */\n      dup5\n        /* \"#utility.yul\":2522:2525   */\n      dup5\n        /* \"#utility.yul\":2518:2534   */\n      add\n        /* \"#utility.yul\":2515:2540   */\n      gt\n        /* \"#utility.yul\":2512:2624   */\n      iszero\n      tag_305\n      jumpi\n        /* \"#utility.yul\":2543:2622   */\n      tag_306\n      tag_221\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":2512:2624   */\n    tag_305:\n        /* \"#utility.yul\":2633:2687   */\n      tag_307\n        /* \"#utility.yul\":2680:2686   */\n      dup5\n        /* \"#utility.yul\":2675:2678   */\n      dup3\n        /* \"#utility.yul\":2670:2673   */\n      dup6\n        /* \"#utility.yul\":2633:2687   */\n      tag_227\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":2353:2693   */\n      pop\n        /* \"#utility.yul\":2270:2693   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2712:3050   */\n    tag_229:\n        /* \"#utility.yul\":2767:2772   */\n      0x00\n        /* \"#utility.yul\":2816:2819   */\n      dup3\n        /* \"#utility.yul\":2809:2813   */\n      0x1f\n        /* \"#utility.yul\":2801:2807   */\n      dup4\n        /* \"#utility.yul\":2797:2814   */\n      add\n        /* \"#utility.yul\":2793:2820   */\n      slt\n        /* \"#utility.yul\":2783:2905   */\n      tag_309\n      jumpi\n        /* \"#utility.yul\":2824:2903   */\n      tag_310\n      tag_220\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":2783:2905   */\n    tag_309:\n        /* \"#utility.yul\":2941:2947   */\n      dup2\n        /* \"#utility.yul\":2928:2948   */\n      calldataload\n        /* \"#utility.yul\":2966:3044   */\n      tag_311\n        /* \"#utility.yul\":3040:3043   */\n      dup5\n        /* \"#utility.yul\":3032:3038   */\n      dup3\n        /* \"#utility.yul\":3025:3029   */\n      0x20\n        /* \"#utility.yul\":3017:3023   */\n      dup7\n        /* \"#utility.yul\":3013:3030   */\n      add\n        /* \"#utility.yul\":2966:3044   */\n      tag_228\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":2957:3044   */\n      swap2\n      pop\n        /* \"#utility.yul\":2773:3050   */\n      pop\n        /* \"#utility.yul\":2712:3050   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3056:3708   */\n    tag_20:\n        /* \"#utility.yul\":3133:3139   */\n      0x00\n        /* \"#utility.yul\":3141:3147   */\n      0x00\n        /* \"#utility.yul\":3190:3192   */\n      0x40\n        /* \"#utility.yul\":3178:3187   */\n      dup4\n        /* \"#utility.yul\":3169:3176   */\n      dup6\n        /* \"#utility.yul\":3165:3188   */\n      sub\n        /* \"#utility.yul\":3161:3193   */\n      slt\n        /* \"#utility.yul\":3158:3277   */\n      iszero\n      tag_313\n      jumpi\n        /* \"#utility.yul\":3196:3275   */\n      tag_314\n      tag_214\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":3158:3277   */\n    tag_313:\n        /* \"#utility.yul\":3316:3317   */\n      0x00\n        /* \"#utility.yul\":3341:3394   */\n      tag_315\n        /* \"#utility.yul\":3386:3393   */\n      dup6\n        /* \"#utility.yul\":3377:3383   */\n      dup3\n        /* \"#utility.yul\":3366:3375   */\n      dup7\n        /* \"#utility.yul\":3362:3384   */\n      add\n        /* \"#utility.yul\":3341:3394   */\n      tag_219\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":3331:3394   */\n      swap3\n      pop\n        /* \"#utility.yul\":3287:3404   */\n      pop\n        /* \"#utility.yul\":3471:3473   */\n      0x20\n        /* \"#utility.yul\":3460:3469   */\n      dup4\n        /* \"#utility.yul\":3456:3474   */\n      add\n        /* \"#utility.yul\":3443:3475   */\n      calldataload\n        /* \"#utility.yul\":3502:3520   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3494:3500   */\n      dup2\n        /* \"#utility.yul\":3491:3521   */\n      gt\n        /* \"#utility.yul\":3488:3605   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":3524:3603   */\n      tag_317\n      tag_215\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":3488:3605   */\n    tag_316:\n        /* \"#utility.yul\":3629:3691   */\n      tag_318\n        /* \"#utility.yul\":3683:3690   */\n      dup6\n        /* \"#utility.yul\":3674:3680   */\n      dup3\n        /* \"#utility.yul\":3663:3672   */\n      dup7\n        /* \"#utility.yul\":3659:3681   */\n      add\n        /* \"#utility.yul\":3629:3691   */\n      tag_229\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":3619:3691   */\n      swap2\n      pop\n        /* \"#utility.yul\":3414:3701   */\n      pop\n        /* \"#utility.yul\":3056:3708   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3714:3791   */\n    tag_230:\n        /* \"#utility.yul\":3751:3758   */\n      0x00\n        /* \"#utility.yul\":3780:3785   */\n      dup2\n        /* \"#utility.yul\":3769:3785   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3791   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3797:3915   */\n    tag_231:\n        /* \"#utility.yul\":3884:3908   */\n      tag_321\n        /* \"#utility.yul\":3902:3907   */\n      dup2\n        /* \"#utility.yul\":3884:3908   */\n      tag_230\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":3879:3882   */\n      dup3\n        /* \"#utility.yul\":3872:3909   */\n      mstore\n        /* \"#utility.yul\":3797:3915   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3921:4143   */\n    tag_26:\n        /* \"#utility.yul\":4014:4018   */\n      0x00\n        /* \"#utility.yul\":4052:4054   */\n      0x20\n        /* \"#utility.yul\":4041:4050   */\n      dup3\n        /* \"#utility.yul\":4037:4055   */\n      add\n        /* \"#utility.yul\":4029:4055   */\n      swap1\n      pop\n        /* \"#utility.yul\":4065:4136   */\n      tag_323\n        /* \"#utility.yul\":4133:4134   */\n      0x00\n        /* \"#utility.yul\":4122:4131   */\n      dup4\n        /* \"#utility.yul\":4118:4135   */\n      add\n        /* \"#utility.yul\":4109:4115   */\n      dup5\n        /* \"#utility.yul\":4065:4136   */\n      tag_231\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":3921:4143   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4149:4226   */\n    tag_232:\n        /* \"#utility.yul\":4186:4193   */\n      0x00\n        /* \"#utility.yul\":4215:4220   */\n      dup2\n        /* \"#utility.yul\":4204:4220   */\n      swap1\n      pop\n        /* \"#utility.yul\":4149:4226   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4232:4354   */\n    tag_233:\n        /* \"#utility.yul\":4305:4329   */\n      tag_326\n        /* \"#utility.yul\":4323:4328   */\n      dup2\n        /* \"#utility.yul\":4305:4329   */\n      tag_232\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":4298:4303   */\n      dup2\n        /* \"#utility.yul\":4295:4330   */\n      eq\n        /* \"#utility.yul\":4285:4348   */\n      tag_327\n      jumpi\n        /* \"#utility.yul\":4344:4345   */\n      0x00\n        /* \"#utility.yul\":4341:4342   */\n      0x00\n        /* \"#utility.yul\":4334:4346   */\n      revert\n        /* \"#utility.yul\":4285:4348   */\n    tag_327:\n        /* \"#utility.yul\":4232:4354   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4360:4499   */\n    tag_234:\n        /* \"#utility.yul\":4406:4411   */\n      0x00\n        /* \"#utility.yul\":4444:4450   */\n      dup2\n        /* \"#utility.yul\":4431:4451   */\n      calldataload\n        /* \"#utility.yul\":4422:4451   */\n      swap1\n      pop\n        /* \"#utility.yul\":4460:4493   */\n      tag_329\n        /* \"#utility.yul\":4487:4492   */\n      dup2\n        /* \"#utility.yul\":4460:4493   */\n      tag_233\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":4360:4499   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4505:4834   */\n    tag_30:\n        /* \"#utility.yul\":4564:4570   */\n      0x00\n        /* \"#utility.yul\":4613:4615   */\n      0x20\n        /* \"#utility.yul\":4601:4610   */\n      dup3\n        /* \"#utility.yul\":4592:4599   */\n      dup5\n        /* \"#utility.yul\":4588:4611   */\n      sub\n        /* \"#utility.yul\":4584:4616   */\n      slt\n        /* \"#utility.yul\":4581:4700   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":4619:4698   */\n      tag_332\n      tag_214\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":4581:4700   */\n    tag_331:\n        /* \"#utility.yul\":4739:4740   */\n      0x00\n        /* \"#utility.yul\":4764:4817   */\n      tag_333\n        /* \"#utility.yul\":4809:4816   */\n      dup5\n        /* \"#utility.yul\":4800:4806   */\n      dup3\n        /* \"#utility.yul\":4789:4798   */\n      dup6\n        /* \"#utility.yul\":4785:4807   */\n      add\n        /* \"#utility.yul\":4764:4817   */\n      tag_234\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":4754:4817   */\n      swap2\n      pop\n        /* \"#utility.yul\":4710:4827   */\n      pop\n        /* \"#utility.yul\":4505:4834   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4840:4958   */\n    tag_235:\n        /* \"#utility.yul\":4927:4951   */\n      tag_335\n        /* \"#utility.yul\":4945:4950   */\n      dup2\n        /* \"#utility.yul\":4927:4951   */\n      tag_217\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":4922:4925   */\n      dup3\n        /* \"#utility.yul\":4915:4952   */\n      mstore\n        /* \"#utility.yul\":4840:4958   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4964:5082   */\n    tag_236:\n        /* \"#utility.yul\":5051:5075   */\n      tag_337\n        /* \"#utility.yul\":5069:5074   */\n      dup2\n        /* \"#utility.yul\":5051:5075   */\n      tag_232\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":5046:5049   */\n      dup3\n        /* \"#utility.yul\":5039:5076   */\n      mstore\n        /* \"#utility.yul\":4964:5082   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5088:5178   */\n    tag_237:\n        /* \"#utility.yul\":5122:5129   */\n      0x00\n        /* \"#utility.yul\":5165:5170   */\n      dup2\n        /* \"#utility.yul\":5158:5171   */\n      iszero\n        /* \"#utility.yul\":5151:5172   */\n      iszero\n        /* \"#utility.yul\":5140:5172   */\n      swap1\n      pop\n        /* \"#utility.yul\":5088:5178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5184:5293   */\n    tag_238:\n        /* \"#utility.yul\":5265:5286   */\n      tag_340\n        /* \"#utility.yul\":5280:5285   */\n      dup2\n        /* \"#utility.yul\":5265:5286   */\n      tag_237\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":5260:5263   */\n      dup3\n        /* \"#utility.yul\":5253:5287   */\n      mstore\n        /* \"#utility.yul\":5184:5293   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5299:6506   */\n    tag_33:\n        /* \"#utility.yul\":5638:5642   */\n      0x00\n        /* \"#utility.yul\":5676:5679   */\n      0x0140\n        /* \"#utility.yul\":5665:5674   */\n      dup3\n        /* \"#utility.yul\":5661:5680   */\n      add\n        /* \"#utility.yul\":5653:5680   */\n      swap1\n      pop\n        /* \"#utility.yul\":5690:5761   */\n      tag_342\n        /* \"#utility.yul\":5758:5759   */\n      0x00\n        /* \"#utility.yul\":5747:5756   */\n      dup4\n        /* \"#utility.yul\":5743:5760   */\n      add\n        /* \"#utility.yul\":5734:5740   */\n      dup14\n        /* \"#utility.yul\":5690:5761   */\n      tag_235\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":5771:5843   */\n      tag_343\n        /* \"#utility.yul\":5839:5841   */\n      0x20\n        /* \"#utility.yul\":5828:5837   */\n      dup4\n        /* \"#utility.yul\":5824:5842   */\n      add\n        /* \"#utility.yul\":5815:5821   */\n      dup13\n        /* \"#utility.yul\":5771:5843   */\n      tag_236\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":5853:5925   */\n      tag_344\n        /* \"#utility.yul\":5921:5923   */\n      0x40\n        /* \"#utility.yul\":5910:5919   */\n      dup4\n        /* \"#utility.yul\":5906:5924   */\n      add\n        /* \"#utility.yul\":5897:5903   */\n      dup12\n        /* \"#utility.yul\":5853:5925   */\n      tag_235\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":5935:6007   */\n      tag_345\n        /* \"#utility.yul\":6003:6005   */\n      0x60\n        /* \"#utility.yul\":5992:6001   */\n      dup4\n        /* \"#utility.yul\":5988:6006   */\n      add\n        /* \"#utility.yul\":5979:5985   */\n      dup11\n        /* \"#utility.yul\":5935:6007   */\n      tag_236\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":6017:6090   */\n      tag_346\n        /* \"#utility.yul\":6085:6088   */\n      0x80\n        /* \"#utility.yul\":6074:6083   */\n      dup4\n        /* \"#utility.yul\":6070:6089   */\n      add\n        /* \"#utility.yul\":6061:6067   */\n      dup10\n        /* \"#utility.yul\":6017:6090   */\n      tag_236\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":6100:6173   */\n      tag_347\n        /* \"#utility.yul\":6168:6171   */\n      0xa0\n        /* \"#utility.yul\":6157:6166   */\n      dup4\n        /* \"#utility.yul\":6153:6172   */\n      add\n        /* \"#utility.yul\":6144:6150   */\n      dup9\n        /* \"#utility.yul\":6100:6173   */\n      tag_236\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":6183:6250   */\n      tag_348\n        /* \"#utility.yul\":6245:6248   */\n      0xc0\n        /* \"#utility.yul\":6234:6243   */\n      dup4\n        /* \"#utility.yul\":6230:6249   */\n      add\n        /* \"#utility.yul\":6221:6227   */\n      dup8\n        /* \"#utility.yul\":6183:6250   */\n      tag_238\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":6260:6333   */\n      tag_349\n        /* \"#utility.yul\":6328:6331   */\n      0xe0\n        /* \"#utility.yul\":6317:6326   */\n      dup4\n        /* \"#utility.yul\":6313:6332   */\n      add\n        /* \"#utility.yul\":6304:6310   */\n      dup7\n        /* \"#utility.yul\":6260:6333   */\n      tag_235\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":6343:6416   */\n      tag_350\n        /* \"#utility.yul\":6411:6414   */\n      0x0100\n        /* \"#utility.yul\":6400:6409   */\n      dup4\n        /* \"#utility.yul\":6396:6415   */\n      add\n        /* \"#utility.yul\":6387:6393   */\n      dup6\n        /* \"#utility.yul\":6343:6416   */\n      tag_236\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":6426:6499   */\n      tag_351\n        /* \"#utility.yul\":6494:6497   */\n      0x0120\n        /* \"#utility.yul\":6483:6492   */\n      dup4\n        /* \"#utility.yul\":6479:6498   */\n      add\n        /* \"#utility.yul\":6470:6476   */\n      dup5\n        /* \"#utility.yul\":6426:6499   */\n      tag_235\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":5299:6506   */\n      swap12\n      swap11\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6512:6841   */\n    tag_37:\n        /* \"#utility.yul\":6571:6577   */\n      0x00\n        /* \"#utility.yul\":6620:6622   */\n      0x20\n        /* \"#utility.yul\":6608:6617   */\n      dup3\n        /* \"#utility.yul\":6599:6606   */\n      dup5\n        /* \"#utility.yul\":6595:6618   */\n      sub\n        /* \"#utility.yul\":6591:6623   */\n      slt\n        /* \"#utility.yul\":6588:6707   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":6626:6705   */\n      tag_354\n      tag_214\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":6588:6707   */\n    tag_353:\n        /* \"#utility.yul\":6746:6747   */\n      0x00\n        /* \"#utility.yul\":6771:6824   */\n      tag_355\n        /* \"#utility.yul\":6816:6823   */\n      dup5\n        /* \"#utility.yul\":6807:6813   */\n      dup3\n        /* \"#utility.yul\":6796:6805   */\n      dup6\n        /* \"#utility.yul\":6792:6814   */\n      add\n        /* \"#utility.yul\":6771:6824   */\n      tag_219\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":6761:6824   */\n      swap2\n      pop\n        /* \"#utility.yul\":6717:6834   */\n      pop\n        /* \"#utility.yul\":6512:6841   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6847:6923   */\n    tag_239:\n        /* \"#utility.yul\":6883:6890   */\n      0x00\n        /* \"#utility.yul\":6912:6917   */\n      dup2\n        /* \"#utility.yul\":6901:6917   */\n      swap1\n      pop\n        /* \"#utility.yul\":6847:6923   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6929:7044   */\n    tag_240:\n        /* \"#utility.yul\":7014:7037   */\n      tag_358\n        /* \"#utility.yul\":7031:7036   */\n      dup2\n        /* \"#utility.yul\":7014:7037   */\n      tag_239\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":7009:7012   */\n      dup3\n        /* \"#utility.yul\":7002:7038   */\n      mstore\n        /* \"#utility.yul\":6929:7044   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7050:7268   */\n    tag_46:\n        /* \"#utility.yul\":7141:7145   */\n      0x00\n        /* \"#utility.yul\":7179:7181   */\n      0x20\n        /* \"#utility.yul\":7168:7177   */\n      dup3\n        /* \"#utility.yul\":7164:7182   */\n      add\n        /* \"#utility.yul\":7156:7182   */\n      swap1\n      pop\n        /* \"#utility.yul\":7192:7261   */\n      tag_360\n        /* \"#utility.yul\":7258:7259   */\n      0x00\n        /* \"#utility.yul\":7247:7256   */\n      dup4\n        /* \"#utility.yul\":7243:7260   */\n      add\n        /* \"#utility.yul\":7234:7240   */\n      dup5\n        /* \"#utility.yul\":7192:7261   */\n      tag_240\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":7050:7268   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7274:7373   */\n    tag_241:\n        /* \"#utility.yul\":7326:7332   */\n      0x00\n        /* \"#utility.yul\":7360:7365   */\n      dup2\n        /* \"#utility.yul\":7354:7366   */\n      mload\n        /* \"#utility.yul\":7344:7366   */\n      swap1\n      pop\n        /* \"#utility.yul\":7274:7373   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7379:7548   */\n    tag_242:\n        /* \"#utility.yul\":7463:7474   */\n      0x00\n        /* \"#utility.yul\":7497:7503   */\n      dup3\n        /* \"#utility.yul\":7492:7495   */\n      dup3\n        /* \"#utility.yul\":7485:7504   */\n      mstore\n        /* \"#utility.yul\":7537:7541   */\n      0x20\n        /* \"#utility.yul\":7532:7535   */\n      dup3\n        /* \"#utility.yul\":7528:7542   */\n      add\n        /* \"#utility.yul\":7513:7542   */\n      swap1\n      pop\n        /* \"#utility.yul\":7379:7548   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7554:7693   */\n    tag_243:\n        /* \"#utility.yul\":7643:7649   */\n      dup3\n        /* \"#utility.yul\":7638:7641   */\n      dup2\n        /* \"#utility.yul\":7633:7636   */\n      dup4\n        /* \"#utility.yul\":7627:7650   */\n      mcopy\n        /* \"#utility.yul\":7684:7685   */\n      0x00\n        /* \"#utility.yul\":7675:7681   */\n      dup4\n        /* \"#utility.yul\":7670:7673   */\n      dup4\n        /* \"#utility.yul\":7666:7682   */\n      add\n        /* \"#utility.yul\":7659:7686   */\n      mstore\n        /* \"#utility.yul\":7554:7693   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7699:8076   */\n    tag_244:\n        /* \"#utility.yul\":7787:7790   */\n      0x00\n        /* \"#utility.yul\":7815:7854   */\n      tag_365\n        /* \"#utility.yul\":7848:7853   */\n      dup3\n        /* \"#utility.yul\":7815:7854   */\n      tag_241\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":7870:7941   */\n      tag_366\n        /* \"#utility.yul\":7934:7940   */\n      dup2\n        /* \"#utility.yul\":7929:7932   */\n      dup6\n        /* \"#utility.yul\":7870:7941   */\n      tag_242\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":7863:7941   */\n      swap4\n      pop\n        /* \"#utility.yul\":7950:8015   */\n      tag_367\n        /* \"#utility.yul\":8008:8014   */\n      dup2\n        /* \"#utility.yul\":8003:8006   */\n      dup6\n        /* \"#utility.yul\":7996:8000   */\n      0x20\n        /* \"#utility.yul\":7989:7994   */\n      dup7\n        /* \"#utility.yul\":7985:8001   */\n      add\n        /* \"#utility.yul\":7950:8015   */\n      tag_243\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":8040:8069   */\n      tag_368\n        /* \"#utility.yul\":8062:8068   */\n      dup2\n        /* \"#utility.yul\":8040:8069   */\n      tag_222\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":8035:8038   */\n      dup5\n        /* \"#utility.yul\":8031:8070   */\n      add\n        /* \"#utility.yul\":8024:8070   */\n      swap2\n      pop\n        /* \"#utility.yul\":7791:8076   */\n      pop\n        /* \"#utility.yul\":7699:8076   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8082:8395   */\n    tag_51:\n        /* \"#utility.yul\":8195:8199   */\n      0x00\n        /* \"#utility.yul\":8233:8235   */\n      0x20\n        /* \"#utility.yul\":8222:8231   */\n      dup3\n        /* \"#utility.yul\":8218:8236   */\n      add\n        /* \"#utility.yul\":8210:8236   */\n      swap1\n      pop\n        /* \"#utility.yul\":8282:8291   */\n      dup2\n        /* \"#utility.yul\":8276:8280   */\n      dup2\n        /* \"#utility.yul\":8272:8292   */\n      sub\n        /* \"#utility.yul\":8268:8269   */\n      0x00\n        /* \"#utility.yul\":8257:8266   */\n      dup4\n        /* \"#utility.yul\":8253:8270   */\n      add\n        /* \"#utility.yul\":8246:8293   */\n      mstore\n        /* \"#utility.yul\":8310:8388   */\n      tag_370\n        /* \"#utility.yul\":8383:8387   */\n      dup2\n        /* \"#utility.yul\":8374:8380   */\n      dup5\n        /* \"#utility.yul\":8310:8388   */\n      tag_244\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":8302:8388   */\n      swap1\n      pop\n        /* \"#utility.yul\":8082:8395   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8401:9020   */\n    tag_54:\n        /* \"#utility.yul\":8478:8484   */\n      0x00\n        /* \"#utility.yul\":8486:8492   */\n      0x00\n        /* \"#utility.yul\":8494:8500   */\n      0x00\n        /* \"#utility.yul\":8543:8545   */\n      0x60\n        /* \"#utility.yul\":8531:8540   */\n      dup5\n        /* \"#utility.yul\":8522:8529   */\n      dup7\n        /* \"#utility.yul\":8518:8541   */\n      sub\n        /* \"#utility.yul\":8514:8546   */\n      slt\n        /* \"#utility.yul\":8511:8630   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":8549:8628   */\n      tag_373\n      tag_214\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":8511:8630   */\n    tag_372:\n        /* \"#utility.yul\":8669:8670   */\n      0x00\n        /* \"#utility.yul\":8694:8747   */\n      tag_374\n        /* \"#utility.yul\":8739:8746   */\n      dup7\n        /* \"#utility.yul\":8730:8736   */\n      dup3\n        /* \"#utility.yul\":8719:8728   */\n      dup8\n        /* \"#utility.yul\":8715:8737   */\n      add\n        /* \"#utility.yul\":8694:8747   */\n      tag_234\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":8684:8747   */\n      swap4\n      pop\n        /* \"#utility.yul\":8640:8757   */\n      pop\n        /* \"#utility.yul\":8796:8798   */\n      0x20\n        /* \"#utility.yul\":8822:8875   */\n      tag_375\n        /* \"#utility.yul\":8867:8874   */\n      dup7\n        /* \"#utility.yul\":8858:8864   */\n      dup3\n        /* \"#utility.yul\":8847:8856   */\n      dup8\n        /* \"#utility.yul\":8843:8865   */\n      add\n        /* \"#utility.yul\":8822:8875   */\n      tag_234\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":8812:8875   */\n      swap3\n      pop\n        /* \"#utility.yul\":8767:8885   */\n      pop\n        /* \"#utility.yul\":8924:8926   */\n      0x40\n        /* \"#utility.yul\":8950:9003   */\n      tag_376\n        /* \"#utility.yul\":8995:9002   */\n      dup7\n        /* \"#utility.yul\":8986:8992   */\n      dup3\n        /* \"#utility.yul\":8975:8984   */\n      dup8\n        /* \"#utility.yul\":8971:8993   */\n      add\n        /* \"#utility.yul\":8950:9003   */\n      tag_219\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":8940:9003   */\n      swap2\n      pop\n        /* \"#utility.yul\":8895:9013   */\n      pop\n        /* \"#utility.yul\":8401:9020   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":9026:9791   */\n    tag_59:\n        /* \"#utility.yul\":9112:9118   */\n      0x00\n        /* \"#utility.yul\":9120:9126   */\n      0x00\n        /* \"#utility.yul\":9128:9134   */\n      0x00\n        /* \"#utility.yul\":9136:9142   */\n      0x00\n        /* \"#utility.yul\":9185:9188   */\n      0x80\n        /* \"#utility.yul\":9173:9182   */\n      dup6\n        /* \"#utility.yul\":9164:9171   */\n      dup8\n        /* \"#utility.yul\":9160:9183   */\n      sub\n        /* \"#utility.yul\":9156:9189   */\n      slt\n        /* \"#utility.yul\":9153:9273   */\n      iszero\n      tag_378\n      jumpi\n        /* \"#utility.yul\":9192:9271   */\n      tag_379\n      tag_214\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":9153:9273   */\n    tag_378:\n        /* \"#utility.yul\":9312:9313   */\n      0x00\n        /* \"#utility.yul\":9337:9390   */\n      tag_380\n        /* \"#utility.yul\":9382:9389   */\n      dup8\n        /* \"#utility.yul\":9373:9379   */\n      dup3\n        /* \"#utility.yul\":9362:9371   */\n      dup9\n        /* \"#utility.yul\":9358:9380   */\n      add\n        /* \"#utility.yul\":9337:9390   */\n      tag_234\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":9327:9390   */\n      swap5\n      pop\n        /* \"#utility.yul\":9283:9400   */\n      pop\n        /* \"#utility.yul\":9439:9441   */\n      0x20\n        /* \"#utility.yul\":9465:9518   */\n      tag_381\n        /* \"#utility.yul\":9510:9517   */\n      dup8\n        /* \"#utility.yul\":9501:9507   */\n      dup3\n        /* \"#utility.yul\":9490:9499   */\n      dup9\n        /* \"#utility.yul\":9486:9508   */\n      add\n        /* \"#utility.yul\":9465:9518   */\n      tag_234\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":9455:9518   */\n      swap4\n      pop\n        /* \"#utility.yul\":9410:9528   */\n      pop\n        /* \"#utility.yul\":9567:9569   */\n      0x40\n        /* \"#utility.yul\":9593:9646   */\n      tag_382\n        /* \"#utility.yul\":9638:9645   */\n      dup8\n        /* \"#utility.yul\":9629:9635   */\n      dup3\n        /* \"#utility.yul\":9618:9627   */\n      dup9\n        /* \"#utility.yul\":9614:9636   */\n      add\n        /* \"#utility.yul\":9593:9646   */\n      tag_219\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":9583:9646   */\n      swap3\n      pop\n        /* \"#utility.yul\":9538:9656   */\n      pop\n        /* \"#utility.yul\":9695:9697   */\n      0x60\n        /* \"#utility.yul\":9721:9774   */\n      tag_383\n        /* \"#utility.yul\":9766:9773   */\n      dup8\n        /* \"#utility.yul\":9757:9763   */\n      dup3\n        /* \"#utility.yul\":9746:9755   */\n      dup9\n        /* \"#utility.yul\":9742:9764   */\n      add\n        /* \"#utility.yul\":9721:9774   */\n      tag_234\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":9711:9774   */\n      swap2\n      pop\n        /* \"#utility.yul\":9666:9784   */\n      pop\n        /* \"#utility.yul\":9026:9791   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9797:10019   */\n    tag_69:\n        /* \"#utility.yul\":9890:9894   */\n      0x00\n        /* \"#utility.yul\":9928:9930   */\n      0x20\n        /* \"#utility.yul\":9917:9926   */\n      dup3\n        /* \"#utility.yul\":9913:9931   */\n      add\n        /* \"#utility.yul\":9905:9931   */\n      swap1\n      pop\n        /* \"#utility.yul\":9941:10012   */\n      tag_385\n        /* \"#utility.yul\":10009:10010   */\n      0x00\n        /* \"#utility.yul\":9998:10007   */\n      dup4\n        /* \"#utility.yul\":9994:10011   */\n      add\n        /* \"#utility.yul\":9985:9991   */\n      dup5\n        /* \"#utility.yul\":9941:10012   */\n      tag_235\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":9797:10019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10025:10247   */\n    tag_74:\n        /* \"#utility.yul\":10118:10122   */\n      0x00\n        /* \"#utility.yul\":10156:10158   */\n      0x20\n        /* \"#utility.yul\":10145:10154   */\n      dup3\n        /* \"#utility.yul\":10141:10159   */\n      add\n        /* \"#utility.yul\":10133:10159   */\n      swap1\n      pop\n        /* \"#utility.yul\":10169:10240   */\n      tag_387\n        /* \"#utility.yul\":10237:10238   */\n      0x00\n        /* \"#utility.yul\":10226:10235   */\n      dup4\n        /* \"#utility.yul\":10222:10239   */\n      add\n        /* \"#utility.yul\":10213:10219   */\n      dup5\n        /* \"#utility.yul\":10169:10240   */\n      tag_236\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":10025:10247   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10253:10338   */\n    tag_245:\n        /* \"#utility.yul\":10298:10305   */\n      0x00\n        /* \"#utility.yul\":10327:10332   */\n      dup2\n        /* \"#utility.yul\":10316:10332   */\n      swap1\n      pop\n        /* \"#utility.yul\":10253:10338   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10344:10445   */\n    tag_246:\n        /* \"#utility.yul\":10380:10387   */\n      0x00\n        /* \"#utility.yul\":10420:10438   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10413:10418   */\n      dup3\n        /* \"#utility.yul\":10409:10439   */\n      and\n        /* \"#utility.yul\":10398:10439   */\n      swap1\n      pop\n        /* \"#utility.yul\":10344:10445   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10451:10511   */\n    tag_247:\n        /* \"#utility.yul\":10479:10482   */\n      0x00\n        /* \"#utility.yul\":10500:10505   */\n      dup2\n        /* \"#utility.yul\":10493:10505   */\n      swap1\n      pop\n        /* \"#utility.yul\":10451:10511   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10517:10673   */\n    tag_248:\n        /* \"#utility.yul\":10574:10583   */\n      0x00\n        /* \"#utility.yul\":10607:10667   */\n      tag_392\n        /* \"#utility.yul\":10624:10666   */\n      tag_393\n        /* \"#utility.yul\":10633:10665   */\n      tag_394\n        /* \"#utility.yul\":10659:10664   */\n      dup5\n        /* \"#utility.yul\":10633:10665   */\n      tag_245\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":10624:10666   */\n      tag_247\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":10607:10667   */\n      tag_246\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":10594:10667   */\n      swap1\n      pop\n        /* \"#utility.yul\":10517:10673   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10679:10824   */\n    tag_249:\n        /* \"#utility.yul\":10773:10817   */\n      tag_396\n        /* \"#utility.yul\":10811:10816   */\n      dup2\n        /* \"#utility.yul\":10773:10817   */\n      tag_248\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":10768:10771   */\n      dup3\n        /* \"#utility.yul\":10761:10818   */\n      mstore\n        /* \"#utility.yul\":10679:10824   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10830:11066   */\n    tag_99:\n        /* \"#utility.yul\":10930:10934   */\n      0x00\n        /* \"#utility.yul\":10968:10970   */\n      0x20\n        /* \"#utility.yul\":10957:10966   */\n      dup3\n        /* \"#utility.yul\":10953:10971   */\n      add\n        /* \"#utility.yul\":10945:10971   */\n      swap1\n      pop\n        /* \"#utility.yul\":10981:11059   */\n      tag_398\n        /* \"#utility.yul\":11056:11057   */\n      0x00\n        /* \"#utility.yul\":11045:11054   */\n      dup4\n        /* \"#utility.yul\":11041:11058   */\n      add\n        /* \"#utility.yul\":11032:11038   */\n      dup5\n        /* \"#utility.yul\":10981:11059   */\n      tag_249\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":10830:11066   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11072:11177   */\n    tag_250:\n        /* \"#utility.yul\":11108:11115   */\n      0x00\n        /* \"#utility.yul\":11148:11170   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":11141:11146   */\n      dup3\n        /* \"#utility.yul\":11137:11171   */\n      and\n        /* \"#utility.yul\":11126:11171   */\n      swap1\n      pop\n        /* \"#utility.yul\":11072:11177   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11183:11303   */\n    tag_251:\n        /* \"#utility.yul\":11255:11278   */\n      tag_401\n        /* \"#utility.yul\":11272:11277   */\n      dup2\n        /* \"#utility.yul\":11255:11278   */\n      tag_250\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":11248:11253   */\n      dup2\n        /* \"#utility.yul\":11245:11279   */\n      eq\n        /* \"#utility.yul\":11235:11297   */\n      tag_402\n      jumpi\n        /* \"#utility.yul\":11293:11294   */\n      0x00\n        /* \"#utility.yul\":11290:11291   */\n      0x00\n        /* \"#utility.yul\":11283:11295   */\n      revert\n        /* \"#utility.yul\":11235:11297   */\n    tag_402:\n        /* \"#utility.yul\":11183:11303   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11309:11450   */\n    tag_252:\n        /* \"#utility.yul\":11365:11370   */\n      0x00\n        /* \"#utility.yul\":11396:11402   */\n      dup2\n        /* \"#utility.yul\":11390:11403   */\n      mload\n        /* \"#utility.yul\":11381:11403   */\n      swap1\n      pop\n        /* \"#utility.yul\":11412:11444   */\n      tag_404\n        /* \"#utility.yul\":11438:11443   */\n      dup2\n        /* \"#utility.yul\":11412:11444   */\n      tag_251\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":11309:11450   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11456:11576   */\n    tag_253:\n        /* \"#utility.yul\":11528:11551   */\n      tag_406\n        /* \"#utility.yul\":11545:11550   */\n      dup2\n        /* \"#utility.yul\":11528:11551   */\n      tag_239\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":11521:11526   */\n      dup2\n        /* \"#utility.yul\":11518:11552   */\n      eq\n        /* \"#utility.yul\":11508:11570   */\n      tag_407\n      jumpi\n        /* \"#utility.yul\":11566:11567   */\n      0x00\n        /* \"#utility.yul\":11563:11564   */\n      0x00\n        /* \"#utility.yul\":11556:11568   */\n      revert\n        /* \"#utility.yul\":11508:11570   */\n    tag_407:\n        /* \"#utility.yul\":11456:11576   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11582:11723   */\n    tag_254:\n        /* \"#utility.yul\":11638:11643   */\n      0x00\n        /* \"#utility.yul\":11669:11675   */\n      dup2\n        /* \"#utility.yul\":11663:11676   */\n      mload\n        /* \"#utility.yul\":11654:11676   */\n      swap1\n      pop\n        /* \"#utility.yul\":11685:11717   */\n      tag_409\n        /* \"#utility.yul\":11711:11716   */\n      dup2\n        /* \"#utility.yul\":11685:11717   */\n      tag_253\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":11582:11723   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11729:11872   */\n    tag_255:\n        /* \"#utility.yul\":11786:11791   */\n      0x00\n        /* \"#utility.yul\":11817:11823   */\n      dup2\n        /* \"#utility.yul\":11811:11824   */\n      mload\n        /* \"#utility.yul\":11802:11824   */\n      swap1\n      pop\n        /* \"#utility.yul\":11833:11866   */\n      tag_411\n        /* \"#utility.yul\":11860:11865   */\n      dup2\n        /* \"#utility.yul\":11833:11866   */\n      tag_233\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":11729:11872   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11878:12849   */\n    tag_104:\n        /* \"#utility.yul\":11981:11987   */\n      0x00\n        /* \"#utility.yul\":11989:11995   */\n      0x00\n        /* \"#utility.yul\":11997:12003   */\n      0x00\n        /* \"#utility.yul\":12005:12011   */\n      0x00\n        /* \"#utility.yul\":12013:12019   */\n      0x00\n        /* \"#utility.yul\":12062:12065   */\n      0xa0\n        /* \"#utility.yul\":12050:12059   */\n      dup7\n        /* \"#utility.yul\":12041:12048   */\n      dup9\n        /* \"#utility.yul\":12037:12060   */\n      sub\n        /* \"#utility.yul\":12033:12066   */\n      slt\n        /* \"#utility.yul\":12030:12150   */\n      iszero\n      tag_413\n      jumpi\n        /* \"#utility.yul\":12069:12148   */\n      tag_414\n      tag_214\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":12030:12150   */\n    tag_413:\n        /* \"#utility.yul\":12189:12190   */\n      0x00\n        /* \"#utility.yul\":12214:12277   */\n      tag_415\n        /* \"#utility.yul\":12269:12276   */\n      dup9\n        /* \"#utility.yul\":12260:12266   */\n      dup3\n        /* \"#utility.yul\":12249:12258   */\n      dup10\n        /* \"#utility.yul\":12245:12267   */\n      add\n        /* \"#utility.yul\":12214:12277   */\n      tag_252\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":12204:12277   */\n      swap6\n      pop\n        /* \"#utility.yul\":12160:12287   */\n      pop\n        /* \"#utility.yul\":12326:12328   */\n      0x20\n        /* \"#utility.yul\":12352:12415   */\n      tag_416\n        /* \"#utility.yul\":12407:12414   */\n      dup9\n        /* \"#utility.yul\":12398:12404   */\n      dup3\n        /* \"#utility.yul\":12387:12396   */\n      dup10\n        /* \"#utility.yul\":12383:12405   */\n      add\n        /* \"#utility.yul\":12352:12415   */\n      tag_254\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":12342:12415   */\n      swap5\n      pop\n        /* \"#utility.yul\":12297:12425   */\n      pop\n        /* \"#utility.yul\":12464:12466   */\n      0x40\n        /* \"#utility.yul\":12490:12554   */\n      tag_417\n        /* \"#utility.yul\":12546:12553   */\n      dup9\n        /* \"#utility.yul\":12537:12543   */\n      dup3\n        /* \"#utility.yul\":12526:12535   */\n      dup10\n        /* \"#utility.yul\":12522:12544   */\n      add\n        /* \"#utility.yul\":12490:12554   */\n      tag_255\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":12480:12554   */\n      swap4\n      pop\n        /* \"#utility.yul\":12435:12564   */\n      pop\n        /* \"#utility.yul\":12603:12605   */\n      0x60\n        /* \"#utility.yul\":12629:12693   */\n      tag_418\n        /* \"#utility.yul\":12685:12692   */\n      dup9\n        /* \"#utility.yul\":12676:12682   */\n      dup3\n        /* \"#utility.yul\":12665:12674   */\n      dup10\n        /* \"#utility.yul\":12661:12683   */\n      add\n        /* \"#utility.yul\":12629:12693   */\n      tag_255\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":12619:12693   */\n      swap3\n      pop\n        /* \"#utility.yul\":12574:12703   */\n      pop\n        /* \"#utility.yul\":12742:12745   */\n      0x80\n        /* \"#utility.yul\":12769:12832   */\n      tag_419\n        /* \"#utility.yul\":12824:12831   */\n      dup9\n        /* \"#utility.yul\":12815:12821   */\n      dup3\n        /* \"#utility.yul\":12804:12813   */\n      dup10\n        /* \"#utility.yul\":12800:12822   */\n      add\n        /* \"#utility.yul\":12769:12832   */\n      tag_252\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":12759:12832   */\n      swap2\n      pop\n        /* \"#utility.yul\":12713:12842   */\n      pop\n        /* \"#utility.yul\":11878:12849   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12855:13035   */\n    tag_256:\n        /* \"#utility.yul\":12903:12980   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12900:12901   */\n      0x00\n        /* \"#utility.yul\":12893:12981   */\n      mstore\n        /* \"#utility.yul\":13000:13004   */\n      0x11\n        /* \"#utility.yul\":12997:12998   */\n      0x04\n        /* \"#utility.yul\":12990:13005   */\n      mstore\n        /* \"#utility.yul\":13024:13028   */\n      0x24\n        /* \"#utility.yul\":13021:13022   */\n      0x00\n        /* \"#utility.yul\":13014:13029   */\n      revert\n        /* \"#utility.yul\":13041:13232   */\n    tag_108:\n        /* \"#utility.yul\":13081:13084   */\n      0x00\n        /* \"#utility.yul\":13100:13120   */\n      tag_422\n        /* \"#utility.yul\":13118:13119   */\n      dup3\n        /* \"#utility.yul\":13100:13120   */\n      tag_232\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":13095:13120   */\n      swap2\n      pop\n        /* \"#utility.yul\":13134:13154   */\n      tag_423\n        /* \"#utility.yul\":13152:13153   */\n      dup4\n        /* \"#utility.yul\":13134:13154   */\n      tag_232\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":13129:13154   */\n      swap3\n      pop\n        /* \"#utility.yul\":13177:13178   */\n      dup3\n        /* \"#utility.yul\":13174:13175   */\n      dup3\n        /* \"#utility.yul\":13170:13179   */\n      add\n        /* \"#utility.yul\":13163:13179   */\n      swap1\n      pop\n        /* \"#utility.yul\":13198:13201   */\n      dup1\n        /* \"#utility.yul\":13195:13196   */\n      dup3\n        /* \"#utility.yul\":13192:13202   */\n      gt\n        /* \"#utility.yul\":13189:13225   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":13205:13223   */\n      tag_425\n      tag_256\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":13189:13225   */\n    tag_424:\n        /* \"#utility.yul\":13041:13232   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13238:13405   */\n    tag_257:\n        /* \"#utility.yul\":13378:13397   */\n      0x41756374696f6e2068617320656e646564000000000000000000000000000000\n        /* \"#utility.yul\":13374:13375   */\n      0x00\n        /* \"#utility.yul\":13366:13372   */\n      dup3\n        /* \"#utility.yul\":13362:13376   */\n      add\n        /* \"#utility.yul\":13355:13398   */\n      mstore\n        /* \"#utility.yul\":13238:13405   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13411:13777   */\n    tag_258:\n        /* \"#utility.yul\":13553:13556   */\n      0x00\n        /* \"#utility.yul\":13574:13641   */\n      tag_428\n        /* \"#utility.yul\":13638:13640   */\n      0x11\n        /* \"#utility.yul\":13633:13636   */\n      dup4\n        /* \"#utility.yul\":13574:13641   */\n      tag_242\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":13567:13641   */\n      swap2\n      pop\n        /* \"#utility.yul\":13650:13743   */\n      tag_429\n        /* \"#utility.yul\":13739:13742   */\n      dup3\n        /* \"#utility.yul\":13650:13743   */\n      tag_257\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":13768:13770   */\n      0x20\n        /* \"#utility.yul\":13763:13766   */\n      dup3\n        /* \"#utility.yul\":13759:13771   */\n      add\n        /* \"#utility.yul\":13752:13771   */\n      swap1\n      pop\n        /* \"#utility.yul\":13411:13777   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13783:14202   */\n    tag_111:\n        /* \"#utility.yul\":13949:13953   */\n      0x00\n        /* \"#utility.yul\":13987:13989   */\n      0x20\n        /* \"#utility.yul\":13976:13985   */\n      dup3\n        /* \"#utility.yul\":13972:13990   */\n      add\n        /* \"#utility.yul\":13964:13990   */\n      swap1\n      pop\n        /* \"#utility.yul\":14036:14045   */\n      dup2\n        /* \"#utility.yul\":14030:14034   */\n      dup2\n        /* \"#utility.yul\":14026:14046   */\n      sub\n        /* \"#utility.yul\":14022:14023   */\n      0x00\n        /* \"#utility.yul\":14011:14020   */\n      dup4\n        /* \"#utility.yul\":14007:14024   */\n      add\n        /* \"#utility.yul\":14000:14047   */\n      mstore\n        /* \"#utility.yul\":14064:14195   */\n      tag_431\n        /* \"#utility.yul\":14190:14194   */\n      dup2\n        /* \"#utility.yul\":14064:14195   */\n      tag_258\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":14056:14195   */\n      swap1\n      pop\n        /* \"#utility.yul\":13783:14202   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14208:14438   */\n    tag_259:\n        /* \"#utility.yul\":14348:14382   */\n      0x426964206d75737420626520686967686572207468616e2063757272656e7420\n        /* \"#utility.yul\":14344:14345   */\n      0x00\n        /* \"#utility.yul\":14336:14342   */\n      dup3\n        /* \"#utility.yul\":14332:14346   */\n      add\n        /* \"#utility.yul\":14325:14383   */\n      mstore\n        /* \"#utility.yul\":14417:14430   */\n      0x6869676865737420626964000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14412:14414   */\n      0x20\n        /* \"#utility.yul\":14404:14410   */\n      dup3\n        /* \"#utility.yul\":14400:14415   */\n      add\n        /* \"#utility.yul\":14393:14431   */\n      mstore\n        /* \"#utility.yul\":14208:14438   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14444:14810   */\n    tag_260:\n        /* \"#utility.yul\":14586:14589   */\n      0x00\n        /* \"#utility.yul\":14607:14674   */\n      tag_434\n        /* \"#utility.yul\":14671:14673   */\n      0x2b\n        /* \"#utility.yul\":14666:14669   */\n      dup4\n        /* \"#utility.yul\":14607:14674   */\n      tag_242\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":14600:14674   */\n      swap2\n      pop\n        /* \"#utility.yul\":14683:14776   */\n      tag_435\n        /* \"#utility.yul\":14772:14775   */\n      dup3\n        /* \"#utility.yul\":14683:14776   */\n      tag_259\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":14801:14803   */\n      0x40\n        /* \"#utility.yul\":14796:14799   */\n      dup3\n        /* \"#utility.yul\":14792:14804   */\n      add\n        /* \"#utility.yul\":14785:14804   */\n      swap1\n      pop\n        /* \"#utility.yul\":14444:14810   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14816:15235   */\n    tag_115:\n        /* \"#utility.yul\":14982:14986   */\n      0x00\n        /* \"#utility.yul\":15020:15022   */\n      0x20\n        /* \"#utility.yul\":15009:15018   */\n      dup3\n        /* \"#utility.yul\":15005:15023   */\n      add\n        /* \"#utility.yul\":14997:15023   */\n      swap1\n      pop\n        /* \"#utility.yul\":15069:15078   */\n      dup2\n        /* \"#utility.yul\":15063:15067   */\n      dup2\n        /* \"#utility.yul\":15059:15079   */\n      sub\n        /* \"#utility.yul\":15055:15056   */\n      0x00\n        /* \"#utility.yul\":15044:15053   */\n      dup4\n        /* \"#utility.yul\":15040:15057   */\n      add\n        /* \"#utility.yul\":15033:15080   */\n      mstore\n        /* \"#utility.yul\":15097:15228   */\n      tag_437\n        /* \"#utility.yul\":15223:15227   */\n      dup2\n        /* \"#utility.yul\":15097:15228   */\n      tag_260\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":15089:15228   */\n      swap1\n      pop\n        /* \"#utility.yul\":14816:15235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15241:15420   */\n    tag_261:\n        /* \"#utility.yul\":15381:15412   */\n      0x4f6e6c792061646d696e2063616e206372656174652061756374696f6e000000\n        /* \"#utility.yul\":15377:15378   */\n      0x00\n        /* \"#utility.yul\":15369:15375   */\n      dup3\n        /* \"#utility.yul\":15365:15379   */\n      add\n        /* \"#utility.yul\":15358:15413   */\n      mstore\n        /* \"#utility.yul\":15241:15420   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15426:15792   */\n    tag_262:\n        /* \"#utility.yul\":15568:15571   */\n      0x00\n        /* \"#utility.yul\":15589:15656   */\n      tag_440\n        /* \"#utility.yul\":15653:15655   */\n      0x1d\n        /* \"#utility.yul\":15648:15651   */\n      dup4\n        /* \"#utility.yul\":15589:15656   */\n      tag_242\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":15582:15656   */\n      swap2\n      pop\n        /* \"#utility.yul\":15665:15758   */\n      tag_441\n        /* \"#utility.yul\":15754:15757   */\n      dup3\n        /* \"#utility.yul\":15665:15758   */\n      tag_261\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":15783:15785   */\n      0x20\n        /* \"#utility.yul\":15778:15781   */\n      dup3\n        /* \"#utility.yul\":15774:15786   */\n      add\n        /* \"#utility.yul\":15767:15786   */\n      swap1\n      pop\n        /* \"#utility.yul\":15426:15792   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15798:16217   */\n    tag_122:\n        /* \"#utility.yul\":15964:15968   */\n      0x00\n        /* \"#utility.yul\":16002:16004   */\n      0x20\n        /* \"#utility.yul\":15991:16000   */\n      dup3\n        /* \"#utility.yul\":15987:16005   */\n      add\n        /* \"#utility.yul\":15979:16005   */\n      swap1\n      pop\n        /* \"#utility.yul\":16051:16060   */\n      dup2\n        /* \"#utility.yul\":16045:16049   */\n      dup2\n        /* \"#utility.yul\":16041:16061   */\n      sub\n        /* \"#utility.yul\":16037:16038   */\n      0x00\n        /* \"#utility.yul\":16026:16035   */\n      dup4\n        /* \"#utility.yul\":16022:16039   */\n      add\n        /* \"#utility.yul\":16015:16062   */\n      mstore\n        /* \"#utility.yul\":16079:16210   */\n      tag_443\n        /* \"#utility.yul\":16205:16209   */\n      dup2\n        /* \"#utility.yul\":16079:16210   */\n      tag_262\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":16071:16210   */\n      swap1\n      pop\n        /* \"#utility.yul\":15798:16217   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16223:16405   */\n    tag_263:\n        /* \"#utility.yul\":16363:16397   */\n      0x4475726174696f6e206d7573742062652067726561746572207468616e203130\n        /* \"#utility.yul\":16359:16360   */\n      0x00\n        /* \"#utility.yul\":16351:16357   */\n      dup3\n        /* \"#utility.yul\":16347:16361   */\n      add\n        /* \"#utility.yul\":16340:16398   */\n      mstore\n        /* \"#utility.yul\":16223:16405   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16411:16777   */\n    tag_264:\n        /* \"#utility.yul\":16553:16556   */\n      0x00\n        /* \"#utility.yul\":16574:16641   */\n      tag_446\n        /* \"#utility.yul\":16638:16640   */\n      0x20\n        /* \"#utility.yul\":16633:16636   */\n      dup4\n        /* \"#utility.yul\":16574:16641   */\n      tag_242\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":16567:16641   */\n      swap2\n      pop\n        /* \"#utility.yul\":16650:16743   */\n      tag_447\n        /* \"#utility.yul\":16739:16742   */\n      dup3\n        /* \"#utility.yul\":16650:16743   */\n      tag_263\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":16768:16770   */\n      0x20\n        /* \"#utility.yul\":16763:16766   */\n      dup3\n        /* \"#utility.yul\":16759:16771   */\n      add\n        /* \"#utility.yul\":16752:16771   */\n      swap1\n      pop\n        /* \"#utility.yul\":16411:16777   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16783:17202   */\n    tag_125:\n        /* \"#utility.yul\":16949:16953   */\n      0x00\n        /* \"#utility.yul\":16987:16989   */\n      0x20\n        /* \"#utility.yul\":16976:16985   */\n      dup3\n        /* \"#utility.yul\":16972:16990   */\n      add\n        /* \"#utility.yul\":16964:16990   */\n      swap1\n      pop\n        /* \"#utility.yul\":17036:17045   */\n      dup2\n        /* \"#utility.yul\":17030:17034   */\n      dup2\n        /* \"#utility.yul\":17026:17046   */\n      sub\n        /* \"#utility.yul\":17022:17023   */\n      0x00\n        /* \"#utility.yul\":17011:17020   */\n      dup4\n        /* \"#utility.yul\":17007:17024   */\n      add\n        /* \"#utility.yul\":17000:17047   */\n      mstore\n        /* \"#utility.yul\":17064:17195   */\n      tag_449\n        /* \"#utility.yul\":17190:17194   */\n      dup2\n        /* \"#utility.yul\":17064:17195   */\n      tag_264\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":17056:17195   */\n      swap1\n      pop\n        /* \"#utility.yul\":16783:17202   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17208:17429   */\n    tag_265:\n        /* \"#utility.yul\":17348:17382   */\n      0x5374617274207072696365206d7573742062652067726561746572207468616e\n        /* \"#utility.yul\":17344:17345   */\n      0x00\n        /* \"#utility.yul\":17336:17342   */\n      dup3\n        /* \"#utility.yul\":17332:17346   */\n      add\n        /* \"#utility.yul\":17325:17383   */\n      mstore\n        /* \"#utility.yul\":17417:17421   */\n      0x2030000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17412:17414   */\n      0x20\n        /* \"#utility.yul\":17404:17410   */\n      dup3\n        /* \"#utility.yul\":17400:17415   */\n      add\n        /* \"#utility.yul\":17393:17422   */\n      mstore\n        /* \"#utility.yul\":17208:17429   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17435:17801   */\n    tag_266:\n        /* \"#utility.yul\":17577:17580   */\n      0x00\n        /* \"#utility.yul\":17598:17665   */\n      tag_452\n        /* \"#utility.yul\":17662:17664   */\n      0x22\n        /* \"#utility.yul\":17657:17660   */\n      dup4\n        /* \"#utility.yul\":17598:17665   */\n      tag_242\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":17591:17665   */\n      swap2\n      pop\n        /* \"#utility.yul\":17674:17767   */\n      tag_453\n        /* \"#utility.yul\":17763:17766   */\n      dup3\n        /* \"#utility.yul\":17674:17767   */\n      tag_265\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":17792:17794   */\n      0x40\n        /* \"#utility.yul\":17787:17790   */\n      dup3\n        /* \"#utility.yul\":17783:17795   */\n      add\n        /* \"#utility.yul\":17776:17795   */\n      swap1\n      pop\n        /* \"#utility.yul\":17435:17801   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17807:18226   */\n    tag_128:\n        /* \"#utility.yul\":17973:17977   */\n      0x00\n        /* \"#utility.yul\":18011:18013   */\n      0x20\n        /* \"#utility.yul\":18000:18009   */\n      dup3\n        /* \"#utility.yul\":17996:18014   */\n      add\n        /* \"#utility.yul\":17988:18014   */\n      swap1\n      pop\n        /* \"#utility.yul\":18060:18069   */\n      dup2\n        /* \"#utility.yul\":18054:18058   */\n      dup2\n        /* \"#utility.yul\":18050:18070   */\n      sub\n        /* \"#utility.yul\":18046:18047   */\n      0x00\n        /* \"#utility.yul\":18035:18044   */\n      dup4\n        /* \"#utility.yul\":18031:18048   */\n      add\n        /* \"#utility.yul\":18024:18071   */\n      mstore\n        /* \"#utility.yul\":18088:18219   */\n      tag_455\n        /* \"#utility.yul\":18214:18218   */\n      dup2\n        /* \"#utility.yul\":18088:18219   */\n      tag_266\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":18080:18219   */\n      swap1\n      pop\n        /* \"#utility.yul\":17807:18226   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18232:18564   */\n    tag_130:\n        /* \"#utility.yul\":18353:18357   */\n      0x00\n        /* \"#utility.yul\":18391:18393   */\n      0x40\n        /* \"#utility.yul\":18380:18389   */\n      dup3\n        /* \"#utility.yul\":18376:18394   */\n      add\n        /* \"#utility.yul\":18368:18394   */\n      swap1\n      pop\n        /* \"#utility.yul\":18404:18475   */\n      tag_457\n        /* \"#utility.yul\":18472:18473   */\n      0x00\n        /* \"#utility.yul\":18461:18470   */\n      dup4\n        /* \"#utility.yul\":18457:18474   */\n      add\n        /* \"#utility.yul\":18448:18454   */\n      dup6\n        /* \"#utility.yul\":18404:18475   */\n      tag_235\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":18485:18557   */\n      tag_458\n        /* \"#utility.yul\":18553:18555   */\n      0x20\n        /* \"#utility.yul\":18542:18551   */\n      dup4\n        /* \"#utility.yul\":18538:18556   */\n      add\n        /* \"#utility.yul\":18529:18535   */\n      dup5\n        /* \"#utility.yul\":18485:18557   */\n      tag_236\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":18232:18564   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18570:18803   */\n    tag_135:\n        /* \"#utility.yul\":18609:18612   */\n      0x00\n        /* \"#utility.yul\":18632:18656   */\n      tag_460\n        /* \"#utility.yul\":18650:18655   */\n      dup3\n        /* \"#utility.yul\":18632:18656   */\n      tag_232\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":18623:18656   */\n      swap2\n      pop\n        /* \"#utility.yul\":18678:18744   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":18671:18676   */\n      dup3\n        /* \"#utility.yul\":18668:18745   */\n      sub\n        /* \"#utility.yul\":18665:18768   */\n      tag_461\n      jumpi\n        /* \"#utility.yul\":18748:18766   */\n      tag_462\n      tag_256\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":18665:18768   */\n    tag_461:\n        /* \"#utility.yul\":18795:18796   */\n      0x01\n        /* \"#utility.yul\":18788:18793   */\n      dup3\n        /* \"#utility.yul\":18784:18797   */\n      add\n        /* \"#utility.yul\":18777:18797   */\n      swap1\n      pop\n        /* \"#utility.yul\":18570:18803   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18809:19251   */\n    tag_140:\n        /* \"#utility.yul\":18958:18962   */\n      0x00\n        /* \"#utility.yul\":18996:18998   */\n      0x60\n        /* \"#utility.yul\":18985:18994   */\n      dup3\n        /* \"#utility.yul\":18981:18999   */\n      add\n        /* \"#utility.yul\":18973:18999   */\n      swap1\n      pop\n        /* \"#utility.yul\":19009:19080   */\n      tag_464\n        /* \"#utility.yul\":19077:19078   */\n      0x00\n        /* \"#utility.yul\":19066:19075   */\n      dup4\n        /* \"#utility.yul\":19062:19079   */\n      add\n        /* \"#utility.yul\":19053:19059   */\n      dup7\n        /* \"#utility.yul\":19009:19080   */\n      tag_235\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":19090:19162   */\n      tag_465\n        /* \"#utility.yul\":19158:19160   */\n      0x20\n        /* \"#utility.yul\":19147:19156   */\n      dup4\n        /* \"#utility.yul\":19143:19161   */\n      add\n        /* \"#utility.yul\":19134:19140   */\n      dup6\n        /* \"#utility.yul\":19090:19162   */\n      tag_235\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":19172:19244   */\n      tag_466\n        /* \"#utility.yul\":19240:19242   */\n      0x40\n        /* \"#utility.yul\":19229:19238   */\n      dup4\n        /* \"#utility.yul\":19225:19243   */\n      add\n        /* \"#utility.yul\":19216:19222   */\n      dup5\n        /* \"#utility.yul\":19172:19244   */\n      tag_236\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":18809:19251   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19257:19429   */\n    tag_267:\n        /* \"#utility.yul\":19397:19421   */\n      0x4f6e6c792061646d696e2063616e207570677261646500000000000000000000\n        /* \"#utility.yul\":19393:19394   */\n      0x00\n        /* \"#utility.yul\":19385:19391   */\n      dup3\n        /* \"#utility.yul\":19381:19395   */\n      add\n        /* \"#utility.yul\":19374:19422   */\n      mstore\n        /* \"#utility.yul\":19257:19429   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19435:19801   */\n    tag_268:\n        /* \"#utility.yul\":19577:19580   */\n      0x00\n        /* \"#utility.yul\":19598:19665   */\n      tag_469\n        /* \"#utility.yul\":19662:19664   */\n      0x16\n        /* \"#utility.yul\":19657:19660   */\n      dup4\n        /* \"#utility.yul\":19598:19665   */\n      tag_242\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":19591:19665   */\n      swap2\n      pop\n        /* \"#utility.yul\":19674:19767   */\n      tag_470\n        /* \"#utility.yul\":19763:19766   */\n      dup3\n        /* \"#utility.yul\":19674:19767   */\n      tag_267\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":19792:19794   */\n      0x20\n        /* \"#utility.yul\":19787:19790   */\n      dup3\n        /* \"#utility.yul\":19783:19795   */\n      add\n        /* \"#utility.yul\":19776:19795   */\n      swap1\n      pop\n        /* \"#utility.yul\":19435:19801   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19807:20226   */\n    tag_154:\n        /* \"#utility.yul\":19973:19977   */\n      0x00\n        /* \"#utility.yul\":20011:20013   */\n      0x20\n        /* \"#utility.yul\":20000:20009   */\n      dup3\n        /* \"#utility.yul\":19996:20014   */\n      add\n        /* \"#utility.yul\":19988:20014   */\n      swap1\n      pop\n        /* \"#utility.yul\":20060:20069   */\n      dup2\n        /* \"#utility.yul\":20054:20058   */\n      dup2\n        /* \"#utility.yul\":20050:20070   */\n      sub\n        /* \"#utility.yul\":20046:20047   */\n      0x00\n        /* \"#utility.yul\":20035:20044   */\n      dup4\n        /* \"#utility.yul\":20031:20048   */\n      add\n        /* \"#utility.yul\":20024:20071   */\n      mstore\n        /* \"#utility.yul\":20088:20219   */\n      tag_472\n        /* \"#utility.yul\":20214:20218   */\n      dup2\n        /* \"#utility.yul\":20088:20219   */\n      tag_268\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":20080:20219   */\n      swap1\n      pop\n        /* \"#utility.yul\":19807:20226   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20232:20354   */\n    tag_269:\n        /* \"#utility.yul\":20305:20329   */\n      tag_474\n        /* \"#utility.yul\":20323:20328   */\n      dup2\n        /* \"#utility.yul\":20305:20329   */\n      tag_230\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":20298:20303   */\n      dup2\n        /* \"#utility.yul\":20295:20330   */\n      eq\n        /* \"#utility.yul\":20285:20348   */\n      tag_475\n      jumpi\n        /* \"#utility.yul\":20344:20345   */\n      0x00\n        /* \"#utility.yul\":20341:20342   */\n      0x00\n        /* \"#utility.yul\":20334:20346   */\n      revert\n        /* \"#utility.yul\":20285:20348   */\n    tag_475:\n        /* \"#utility.yul\":20232:20354   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20360:20503   */\n    tag_270:\n        /* \"#utility.yul\":20417:20422   */\n      0x00\n        /* \"#utility.yul\":20448:20454   */\n      dup2\n        /* \"#utility.yul\":20442:20455   */\n      mload\n        /* \"#utility.yul\":20433:20455   */\n      swap1\n      pop\n        /* \"#utility.yul\":20464:20497   */\n      tag_477\n        /* \"#utility.yul\":20491:20496   */\n      dup2\n        /* \"#utility.yul\":20464:20497   */\n      tag_269\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":20360:20503   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20509:20860   */\n    tag_158:\n        /* \"#utility.yul\":20579:20585   */\n      0x00\n        /* \"#utility.yul\":20628:20630   */\n      0x20\n        /* \"#utility.yul\":20616:20625   */\n      dup3\n        /* \"#utility.yul\":20607:20614   */\n      dup5\n        /* \"#utility.yul\":20603:20626   */\n      sub\n        /* \"#utility.yul\":20599:20631   */\n      slt\n        /* \"#utility.yul\":20596:20715   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":20634:20713   */\n      tag_480\n      tag_214\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":20596:20715   */\n    tag_479:\n        /* \"#utility.yul\":20754:20755   */\n      0x00\n        /* \"#utility.yul\":20779:20843   */\n      tag_481\n        /* \"#utility.yul\":20835:20842   */\n      dup5\n        /* \"#utility.yul\":20826:20832   */\n      dup3\n        /* \"#utility.yul\":20815:20824   */\n      dup6\n        /* \"#utility.yul\":20811:20833   */\n      add\n        /* \"#utility.yul\":20779:20843   */\n      tag_270\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":20769:20843   */\n      swap2\n      pop\n        /* \"#utility.yul\":20725:20853   */\n      pop\n        /* \"#utility.yul\":20509:20860   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20866:20964   */\n    tag_271:\n        /* \"#utility.yul\":20917:20923   */\n      0x00\n        /* \"#utility.yul\":20951:20956   */\n      dup2\n        /* \"#utility.yul\":20945:20957   */\n      mload\n        /* \"#utility.yul\":20935:20957   */\n      swap1\n      pop\n        /* \"#utility.yul\":20866:20964   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20970:21117   */\n    tag_272:\n        /* \"#utility.yul\":21071:21082   */\n      0x00\n        /* \"#utility.yul\":21108:21111   */\n      dup2\n        /* \"#utility.yul\":21093:21111   */\n      swap1\n      pop\n        /* \"#utility.yul\":20970:21117   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21123:21509   */\n    tag_273:\n        /* \"#utility.yul\":21227:21230   */\n      0x00\n        /* \"#utility.yul\":21255:21293   */\n      tag_485\n        /* \"#utility.yul\":21287:21292   */\n      dup3\n        /* \"#utility.yul\":21255:21293   */\n      tag_271\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":21309:21397   */\n      tag_486\n        /* \"#utility.yul\":21390:21396   */\n      dup2\n        /* \"#utility.yul\":21385:21388   */\n      dup6\n        /* \"#utility.yul\":21309:21397   */\n      tag_272\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":21302:21397   */\n      swap4\n      pop\n        /* \"#utility.yul\":21406:21471   */\n      tag_487\n        /* \"#utility.yul\":21464:21470   */\n      dup2\n        /* \"#utility.yul\":21459:21462   */\n      dup6\n        /* \"#utility.yul\":21452:21456   */\n      0x20\n        /* \"#utility.yul\":21445:21450   */\n      dup7\n        /* \"#utility.yul\":21441:21457   */\n      add\n        /* \"#utility.yul\":21406:21471   */\n      tag_243\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":21496:21502   */\n      dup1\n        /* \"#utility.yul\":21491:21494   */\n      dup5\n        /* \"#utility.yul\":21487:21503   */\n      add\n        /* \"#utility.yul\":21480:21503   */\n      swap2\n      pop\n        /* \"#utility.yul\":21231:21509   */\n      pop\n        /* \"#utility.yul\":21123:21509   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21515:21786   */\n    tag_194:\n        /* \"#utility.yul\":21645:21648   */\n      0x00\n        /* \"#utility.yul\":21667:21760   */\n      tag_489\n        /* \"#utility.yul\":21756:21759   */\n      dup3\n        /* \"#utility.yul\":21747:21753   */\n      dup5\n        /* \"#utility.yul\":21667:21760   */\n      tag_273\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":21660:21760   */\n      swap2\n      pop\n        /* \"#utility.yul\":21777:21780   */\n      dup2\n        /* \"#utility.yul\":21770:21780   */\n      swap1\n      pop\n        /* \"#utility.yul\":21515:21786   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203f8b5e75a0e05498b3f0690f8b1f78f0ffb03d3fae1be763d5740c0264b5c45c64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff168152503480156041575f5ffd5b50608051611fc46100685f395f8181610e1f01528181610e7401526110b50152611fc45ff3fe6080604052600436106100aa575f3560e01c8063ad3cb1cc11610063578063ad3cb1cc146101a8578063ad6561ec146101d2578063b1cb48ef146101ee578063b9a2de3a14610216578063f851a4401461023e578063fc52848214610268576100b1565b80634f1ef286146100b557806352d1902d146100d1578063571a26a0146100fb578063724e78da146101405780638129fc1c146101685780638e15f4731461017e576100b1565b366100b157005b5f5ffd5b6100cf60048036038101906100ca9190611641565b610292565b005b3480156100dc575f5ffd5b506100e56102b1565b6040516100f291906116b3565b60405180910390f35b348015610106575f5ffd5b50610121600480360381019061011c91906116ff565b6102e2565b6040516101379a99989796959493929190611762565b60405180910390f35b34801561014b575f5ffd5b50610166600480360381019061016191906117fc565b6103ba565b005b348015610173575f5ffd5b5061017c6103fd565b005b348015610189575f5ffd5b506101926105b4565b60405161019f919061183f565b60405180910390f35b3480156101b3575f5ffd5b506101bc61065d565b6040516101c991906118b8565b60405180910390f35b6101ec60048036038101906101e791906118d8565b610696565b005b3480156101f9575f5ffd5b50610214600480360381019061020f9190611928565b610897565b005b348015610221575f5ffd5b5061023c600480360381019061023791906116ff565b610c50565b005b348015610249575f5ffd5b50610252610df2565b60405161025f919061198c565b60405180910390f35b348015610273575f5ffd5b5061027c610e17565b60405161028991906119a5565b60405180910390f35b61029a610e1d565b6102a382610f03565b6102ad8282610f95565b5050565b5f6102ba6110b3565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b905090565b5f602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806003015490806004015490806005015490806006015f9054906101000a900460ff16908060060160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806007015490806008015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508a565b8060035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f61040661113a565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f5f8267ffffffffffffffff1614801561044e5750825b90505f60018367ffffffffffffffff1614801561048157505f3073ffffffffffffffffffffffffffffffffffffffff163b145b90508115801561048f575080155b156104c6576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610513576001855f0160086101000a81548160ff0219169083151502179055505b3360025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083156105ad575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516105a49190611a13565b60405180910390a15b5050505050565b5f5f5f5f5f5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610624573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106489190611aa9565b94509450945094509450839550505050505090565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b5f5f5f8581526020019081526020015f2090505f15155f5f8681526020019081526020015f206006015f9054906101000a900460ff1615151480156106ed5750806003015481600501546106ea9190611b4d565b42105b61072c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072390611bca565b60405180910390fd5b8060070154341180156107425750806004015434115b610781576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077890611c58565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168160060160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610845578060060160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc826007015490811502906040515f60405180830381858888f19350505050158015610843573d5f5f3e3d5ffd5b505b338160060160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034816007018190555050505050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610926576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091d90611cc0565b60405180910390fd5b600a84101561096a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096190611d28565b60405180910390fd5b5f83116109ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a390611db6565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663095ea7b330836040518363ffffffff1660e01b81526004016109e7929190611dd4565b5f604051808303815f87803b1580156109fe575f5ffd5b505af1158015610a10573d5f5f3e3d5ffd5b505050506040518061014001604052808373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020014281526020015f151581526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff168152505f5f60015481526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a0820151816005015560c0820151816006015f6101000a81548160ff02191690831515021790555060e08201518160060160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101008201518160070155610120820151816008015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505060015f815480929190610c4590611dfb565b919050555050505050565b5f5f5f8381526020019081526020015f2090505f1515816006015f9054906101000a900460ff16151514610cb9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb090611bca565b60405180910390fd5b805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360060160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600101546040518463ffffffff1660e01b8152600401610d6193929190611e42565b5f604051808303815f87803b158015610d78575f5ffd5b505af1158015610d8a573d5f5f3e3d5ffd5b505050503073ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f19350505050158015610dd1573d5f5f3e3d5ffd5b506001816006015f6101000a81548160ff0219169083151502179055505050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161480610eca57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610eb161114d565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610f01576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8990611ec1565b60405180910390fd5b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610ffd57506040513d601f19601f82011682018060405250810190610ffa9190611f09565b60015b61103e57816040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401611035919061198c565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b81146110a457806040517faa1d49a400000000000000000000000000000000000000000000000000000000815260040161109b91906116b3565b60405180910390fd5b6110ae83836111a0565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614611138576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f5f611144611212565b90508091505090565b5f6111797f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b61123b565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6111a982611244565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25f81511115611205576111ff828261130d565b5061120e565b61120d61138d565b5b5050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005f1b905090565b5f819050919050565b5f8173ffffffffffffffffffffffffffffffffffffffff163b0361129f57806040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401611296919061198c565b60405180910390fd5b806112cb7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b61123b565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60605f5f8473ffffffffffffffffffffffffffffffffffffffff16846040516113369190611f78565b5f60405180830381855af49150503d805f811461136e576040519150601f19603f3d011682016040523d82523d5f602084013e611373565b606091505b50915091506113838583836113c9565b9250505092915050565b5f3411156113c7576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6060826113de576113d982611456565b61144e565b5f825114801561140457505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561144657836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161143d919061198c565b60405180910390fd5b81905061144f565b5b9392505050565b5f815111156114685780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f604051905090565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6114d4826114ab565b9050919050565b6114e4816114ca565b81146114ee575f5ffd5b50565b5f813590506114ff816114db565b92915050565b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6115538261150d565b810181811067ffffffffffffffff821117156115725761157161151d565b5b80604052505050565b5f61158461149a565b9050611590828261154a565b919050565b5f67ffffffffffffffff8211156115af576115ae61151d565b5b6115b88261150d565b9050602081019050919050565b828183375f83830152505050565b5f6115e56115e084611595565b61157b565b90508281526020810184848401111561160157611600611509565b5b61160c8482856115c5565b509392505050565b5f82601f83011261162857611627611505565b5b81356116388482602086016115d3565b91505092915050565b5f5f60408385031215611657576116566114a3565b5b5f611664858286016114f1565b925050602083013567ffffffffffffffff811115611685576116846114a7565b5b61169185828601611614565b9150509250929050565b5f819050919050565b6116ad8161169b565b82525050565b5f6020820190506116c65f8301846116a4565b92915050565b5f819050919050565b6116de816116cc565b81146116e8575f5ffd5b50565b5f813590506116f9816116d5565b92915050565b5f60208284031215611714576117136114a3565b5b5f611721848285016116eb565b91505092915050565b611733816114ca565b82525050565b611742816116cc565b82525050565b5f8115159050919050565b61175c81611748565b82525050565b5f610140820190506117765f83018d61172a565b611783602083018c611739565b611790604083018b61172a565b61179d606083018a611739565b6117aa6080830189611739565b6117b760a0830188611739565b6117c460c0830187611753565b6117d160e083018661172a565b6117df610100830185611739565b6117ed61012083018461172a565b9b9a5050505050505050505050565b5f60208284031215611811576118106114a3565b5b5f61181e848285016114f1565b91505092915050565b5f819050919050565b61183981611827565b82525050565b5f6020820190506118525f830184611830565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f61188a82611858565b6118948185611862565b93506118a4818560208601611872565b6118ad8161150d565b840191505092915050565b5f6020820190508181035f8301526118d08184611880565b905092915050565b5f5f5f606084860312156118ef576118ee6114a3565b5b5f6118fc868287016116eb565b935050602061190d868287016116eb565b925050604061191e868287016114f1565b9150509250925092565b5f5f5f5f608085870312156119405761193f6114a3565b5b5f61194d878288016116eb565b945050602061195e878288016116eb565b935050604061196f878288016114f1565b9250506060611980878288016116eb565b91505092959194509250565b5f60208201905061199f5f83018461172a565b92915050565b5f6020820190506119b85f830184611739565b92915050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f6119fd6119f86119f3846119be565b6119da565b6119c7565b9050919050565b611a0d816119e3565b82525050565b5f602082019050611a265f830184611a04565b92915050565b5f69ffffffffffffffffffff82169050919050565b611a4a81611a2c565b8114611a54575f5ffd5b50565b5f81519050611a6581611a41565b92915050565b611a7481611827565b8114611a7e575f5ffd5b50565b5f81519050611a8f81611a6b565b92915050565b5f81519050611aa3816116d5565b92915050565b5f5f5f5f5f60a08688031215611ac257611ac16114a3565b5b5f611acf88828901611a57565b9550506020611ae088828901611a81565b9450506040611af188828901611a95565b9350506060611b0288828901611a95565b9250506080611b1388828901611a57565b9150509295509295909350565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611b57826116cc565b9150611b62836116cc565b9250828201905080821115611b7a57611b79611b20565b5b92915050565b7f41756374696f6e2068617320656e6465640000000000000000000000000000005f82015250565b5f611bb4601183611862565b9150611bbf82611b80565b602082019050919050565b5f6020820190508181035f830152611be181611ba8565b9050919050565b7f426964206d75737420626520686967686572207468616e2063757272656e74205f8201527f6869676865737420626964000000000000000000000000000000000000000000602082015250565b5f611c42602b83611862565b9150611c4d82611be8565b604082019050919050565b5f6020820190508181035f830152611c6f81611c36565b9050919050565b7f4f6e6c792061646d696e2063616e206372656174652061756374696f6e0000005f82015250565b5f611caa601d83611862565b9150611cb582611c76565b602082019050919050565b5f6020820190508181035f830152611cd781611c9e565b9050919050565b7f4475726174696f6e206d7573742062652067726561746572207468616e2031305f82015250565b5f611d12602083611862565b9150611d1d82611cde565b602082019050919050565b5f6020820190508181035f830152611d3f81611d06565b9050919050565b7f5374617274207072696365206d7573742062652067726561746572207468616e5f8201527f2030000000000000000000000000000000000000000000000000000000000000602082015250565b5f611da0602283611862565b9150611dab82611d46565b604082019050919050565b5f6020820190508181035f830152611dcd81611d94565b9050919050565b5f604082019050611de75f83018561172a565b611df46020830184611739565b9392505050565b5f611e05826116cc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611e3757611e36611b20565b5b600182019050919050565b5f606082019050611e555f83018661172a565b611e62602083018561172a565b611e6f6040830184611739565b949350505050565b7f4f6e6c792061646d696e2063616e2075706772616465000000000000000000005f82015250565b5f611eab601683611862565b9150611eb682611e77565b602082019050919050565b5f6020820190508181035f830152611ed881611e9f565b9050919050565b611ee88161169b565b8114611ef2575f5ffd5b50565b5f81519050611f0381611edf565b92915050565b5f60208284031215611f1e57611f1d6114a3565b5b5f611f2b84828501611ef5565b91505092915050565b5f81519050919050565b5f81905092915050565b5f611f5282611f34565b611f5c8185611f3e565b9350611f6c818560208601611872565b80840191505092915050565b5f611f838284611f48565b91508190509291505056fea26469706673582212203f8b5e75a0e05498b3f0690f8b1f78f0ffb03d3fae1be763d5740c0264b5c45c64736f6c634300081e0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH1 0x41 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x1FC4 PUSH2 0x68 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0xE1F ADD MSTORE DUP2 DUP2 PUSH2 0xE74 ADD MSTORE PUSH2 0x10B5 ADD MSTORE PUSH2 0x1FC4 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xAA JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xAD6561EC EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0xB1CB48EF EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0xB9A2DE3A EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0xFC528482 EQ PUSH2 0x268 JUMPI PUSH2 0xB1 JUMP JUMPDEST DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x571A26A0 EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0x724E78DA EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x8E15F473 EQ PUSH2 0x17E JUMPI PUSH2 0xB1 JUMP JUMPDEST CALLDATASIZE PUSH2 0xB1 JUMPI STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xCF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x1641 JUMP JUMPDEST PUSH2 0x292 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xE5 PUSH2 0x2B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF2 SWAP2 SWAP1 PUSH2 0x16B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x106 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x121 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11C SWAP2 SWAP1 PUSH2 0x16FF JUMP JUMPDEST PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1762 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x17FC JUMP JUMPDEST PUSH2 0x3BA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x173 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17C PUSH2 0x3FD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x189 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x192 PUSH2 0x5B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x183F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1BC PUSH2 0x65D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x18B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x18D8 JUMP JUMPDEST PUSH2 0x696 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x214 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST PUSH2 0x897 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x221 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x16FF JUMP JUMPDEST PUSH2 0xC50 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x249 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x252 PUSH2 0xDF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x198C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x273 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x27C PUSH2 0xE17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x19A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH2 0xE1D JUMP JUMPDEST PUSH2 0x2A3 DUP3 PUSH2 0xF03 JUMP JUMPDEST PUSH2 0x2AD DUP3 DUP3 PUSH2 0xF95 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2BA PUSH2 0x10B3 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP11 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x406 PUSH2 0x113A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x44E JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x481 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x48F JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x4C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x513 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST CALLER PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x5AD JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x5A4 SWAP2 SWAP1 PUSH2 0x1A13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x624 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x648 SWAP2 SWAP1 PUSH2 0x1AA9 JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP DUP4 SWAP6 POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 ISZERO ISZERO PUSH0 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ DUP1 ISZERO PUSH2 0x6ED JUMPI POP DUP1 PUSH1 0x3 ADD SLOAD DUP2 PUSH1 0x5 ADD SLOAD PUSH2 0x6EA SWAP2 SWAP1 PUSH2 0x1B4D JUMP JUMPDEST TIMESTAMP LT JUMPDEST PUSH2 0x72C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x723 SWAP1 PUSH2 0x1BCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 ADD SLOAD CALLVALUE GT DUP1 ISZERO PUSH2 0x742 JUMPI POP DUP1 PUSH1 0x4 ADD SLOAD CALLVALUE GT JUMPDEST PUSH2 0x781 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x778 SWAP1 PUSH2 0x1C58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x845 JUMPI DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 PUSH1 0x7 ADD SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x843 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMPDEST CALLER DUP2 PUSH1 0x6 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP2 PUSH1 0x7 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x926 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91D SWAP1 PUSH2 0x1CC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA DUP5 LT ISZERO PUSH2 0x96A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x961 SWAP1 PUSH2 0x1D28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 GT PUSH2 0x9AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A3 SWAP1 PUSH2 0x1DB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E7 SWAP3 SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9FE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA10 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH0 PUSH0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x1 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xC45 SWAP1 PUSH2 0x1DFB JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 ISZERO ISZERO DUP2 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xCB9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB0 SWAP1 PUSH2 0x1BCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD61 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E42 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD78 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD8A JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xDD1 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x6 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xECA JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEB1 PUSH2 0x114D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xF01 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF92 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF89 SWAP1 PUSH2 0x1EC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xFFD JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFFA SWAP2 SWAP1 PUSH2 0x1F09 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x103E JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1035 SWAP2 SWAP1 PUSH2 0x198C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL DUP2 EQ PUSH2 0x10A4 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x109B SWAP2 SWAP1 PUSH2 0x16B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10AE DUP4 DUP4 PUSH2 0x11A0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1138 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x1144 PUSH2 0x1212 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x1179 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x123B JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x11A9 DUP3 PUSH2 0x1244 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x1205 JUMPI PUSH2 0x11FF DUP3 DUP3 PUSH2 0x130D JUMP JUMPDEST POP PUSH2 0x120E JUMP JUMPDEST PUSH2 0x120D PUSH2 0x138D JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x129F JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1296 SWAP2 SWAP1 PUSH2 0x198C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x12CB PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x123B JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1336 SWAP2 SWAP1 PUSH2 0x1F78 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x136E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1373 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1383 DUP6 DUP4 DUP4 PUSH2 0x13C9 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT ISZERO PUSH2 0x13C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x13DE JUMPI PUSH2 0x13D9 DUP3 PUSH2 0x1456 JUMP JUMPDEST PUSH2 0x144E JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1404 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1446 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x143D SWAP2 SWAP1 PUSH2 0x198C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x144F JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x1468 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14D4 DUP3 PUSH2 0x14AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14E4 DUP2 PUSH2 0x14CA JUMP JUMPDEST DUP2 EQ PUSH2 0x14EE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14FF DUP2 PUSH2 0x14DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1553 DUP3 PUSH2 0x150D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1572 JUMPI PUSH2 0x1571 PUSH2 0x151D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1584 PUSH2 0x149A JUMP JUMPDEST SWAP1 POP PUSH2 0x1590 DUP3 DUP3 PUSH2 0x154A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x15AF JUMPI PUSH2 0x15AE PUSH2 0x151D JUMP JUMPDEST JUMPDEST PUSH2 0x15B8 DUP3 PUSH2 0x150D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15E5 PUSH2 0x15E0 DUP5 PUSH2 0x1595 JUMP JUMPDEST PUSH2 0x157B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1601 JUMPI PUSH2 0x1600 PUSH2 0x1509 JUMP JUMPDEST JUMPDEST PUSH2 0x160C DUP5 DUP3 DUP6 PUSH2 0x15C5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1628 JUMPI PUSH2 0x1627 PUSH2 0x1505 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1638 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x15D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1657 JUMPI PUSH2 0x1656 PUSH2 0x14A3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1664 DUP6 DUP3 DUP7 ADD PUSH2 0x14F1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1685 JUMPI PUSH2 0x1684 PUSH2 0x14A7 JUMP JUMPDEST JUMPDEST PUSH2 0x1691 DUP6 DUP3 DUP7 ADD PUSH2 0x1614 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16AD DUP2 PUSH2 0x169B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16C6 PUSH0 DUP4 ADD DUP5 PUSH2 0x16A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16DE DUP2 PUSH2 0x16CC JUMP JUMPDEST DUP2 EQ PUSH2 0x16E8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16F9 DUP2 PUSH2 0x16D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1714 JUMPI PUSH2 0x1713 PUSH2 0x14A3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1721 DUP5 DUP3 DUP6 ADD PUSH2 0x16EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1733 DUP2 PUSH2 0x14CA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1742 DUP2 PUSH2 0x16CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x175C DUP2 PUSH2 0x1748 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x140 DUP3 ADD SWAP1 POP PUSH2 0x1776 PUSH0 DUP4 ADD DUP14 PUSH2 0x172A JUMP JUMPDEST PUSH2 0x1783 PUSH1 0x20 DUP4 ADD DUP13 PUSH2 0x1739 JUMP JUMPDEST PUSH2 0x1790 PUSH1 0x40 DUP4 ADD DUP12 PUSH2 0x172A JUMP JUMPDEST PUSH2 0x179D PUSH1 0x60 DUP4 ADD DUP11 PUSH2 0x1739 JUMP JUMPDEST PUSH2 0x17AA PUSH1 0x80 DUP4 ADD DUP10 PUSH2 0x1739 JUMP JUMPDEST PUSH2 0x17B7 PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0x1739 JUMP JUMPDEST PUSH2 0x17C4 PUSH1 0xC0 DUP4 ADD DUP8 PUSH2 0x1753 JUMP JUMPDEST PUSH2 0x17D1 PUSH1 0xE0 DUP4 ADD DUP7 PUSH2 0x172A JUMP JUMPDEST PUSH2 0x17DF PUSH2 0x100 DUP4 ADD DUP6 PUSH2 0x1739 JUMP JUMPDEST PUSH2 0x17ED PUSH2 0x120 DUP4 ADD DUP5 PUSH2 0x172A JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1811 JUMPI PUSH2 0x1810 PUSH2 0x14A3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x181E DUP5 DUP3 DUP6 ADD PUSH2 0x14F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1839 DUP2 PUSH2 0x1827 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1852 PUSH0 DUP4 ADD DUP5 PUSH2 0x1830 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x188A DUP3 PUSH2 0x1858 JUMP JUMPDEST PUSH2 0x1894 DUP2 DUP6 PUSH2 0x1862 JUMP JUMPDEST SWAP4 POP PUSH2 0x18A4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1872 JUMP JUMPDEST PUSH2 0x18AD DUP2 PUSH2 0x150D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18D0 DUP2 DUP5 PUSH2 0x1880 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18EF JUMPI PUSH2 0x18EE PUSH2 0x14A3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18FC DUP7 DUP3 DUP8 ADD PUSH2 0x16EB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x190D DUP7 DUP3 DUP8 ADD PUSH2 0x16EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x191E DUP7 DUP3 DUP8 ADD PUSH2 0x14F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1940 JUMPI PUSH2 0x193F PUSH2 0x14A3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x194D DUP8 DUP3 DUP9 ADD PUSH2 0x16EB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x195E DUP8 DUP3 DUP9 ADD PUSH2 0x16EB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x196F DUP8 DUP3 DUP9 ADD PUSH2 0x14F1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1980 DUP8 DUP3 DUP9 ADD PUSH2 0x16EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x199F PUSH0 DUP4 ADD DUP5 PUSH2 0x172A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19B8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1739 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19FD PUSH2 0x19F8 PUSH2 0x19F3 DUP5 PUSH2 0x19BE JUMP JUMPDEST PUSH2 0x19DA JUMP JUMPDEST PUSH2 0x19C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A0D DUP2 PUSH2 0x19E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A26 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A04 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A4A DUP2 PUSH2 0x1A2C JUMP JUMPDEST DUP2 EQ PUSH2 0x1A54 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A65 DUP2 PUSH2 0x1A41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A74 DUP2 PUSH2 0x1827 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A7E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A8F DUP2 PUSH2 0x1A6B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1AA3 DUP2 PUSH2 0x16D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1AC2 JUMPI PUSH2 0x1AC1 PUSH2 0x14A3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1ACF DUP9 DUP3 DUP10 ADD PUSH2 0x1A57 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1AE0 DUP9 DUP3 DUP10 ADD PUSH2 0x1A81 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1AF1 DUP9 DUP3 DUP10 ADD PUSH2 0x1A95 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1B02 DUP9 DUP3 DUP10 ADD PUSH2 0x1A95 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x1B13 DUP9 DUP3 DUP10 ADD PUSH2 0x1A57 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1B57 DUP3 PUSH2 0x16CC JUMP JUMPDEST SWAP2 POP PUSH2 0x1B62 DUP4 PUSH2 0x16CC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1B7A JUMPI PUSH2 0x1B79 PUSH2 0x1B20 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41756374696F6E2068617320656E646564000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BB4 PUSH1 0x11 DUP4 PUSH2 0x1862 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BBF DUP3 PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BE1 DUP2 PUSH2 0x1BA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426964206D75737420626520686967686572207468616E2063757272656E7420 PUSH0 DUP3 ADD MSTORE PUSH32 0x6869676865737420626964000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C42 PUSH1 0x2B DUP4 PUSH2 0x1862 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C4D DUP3 PUSH2 0x1BE8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C6F DUP2 PUSH2 0x1C36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E2063616E206372656174652061756374696F6E000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CAA PUSH1 0x1D DUP4 PUSH2 0x1862 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CB5 DUP3 PUSH2 0x1C76 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CD7 DUP2 PUSH2 0x1C9E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4475726174696F6E206D7573742062652067726561746572207468616E203130 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D12 PUSH1 0x20 DUP4 PUSH2 0x1862 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D1D DUP3 PUSH2 0x1CDE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D3F DUP2 PUSH2 0x1D06 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374617274207072696365206D7573742062652067726561746572207468616E PUSH0 DUP3 ADD MSTORE PUSH32 0x2030000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DA0 PUSH1 0x22 DUP4 PUSH2 0x1862 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DAB DUP3 PUSH2 0x1D46 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DCD DUP2 PUSH2 0x1D94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1DE7 PUSH0 DUP4 ADD DUP6 PUSH2 0x172A JUMP JUMPDEST PUSH2 0x1DF4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1739 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E05 DUP3 PUSH2 0x16CC JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1E37 JUMPI PUSH2 0x1E36 PUSH2 0x1B20 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1E55 PUSH0 DUP4 ADD DUP7 PUSH2 0x172A JUMP JUMPDEST PUSH2 0x1E62 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x172A JUMP JUMPDEST PUSH2 0x1E6F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1739 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E2063616E207570677261646500000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EAB PUSH1 0x16 DUP4 PUSH2 0x1862 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EB6 DUP3 PUSH2 0x1E77 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1ED8 DUP2 PUSH2 0x1E9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EE8 DUP2 PUSH2 0x169B JUMP JUMPDEST DUP2 EQ PUSH2 0x1EF2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F03 DUP2 PUSH2 0x1EDF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F1E JUMPI PUSH2 0x1F1D PUSH2 0x14A3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F2B DUP5 DUP3 DUP6 ADD PUSH2 0x1EF5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F52 DUP3 PUSH2 0x1F34 JUMP JUMPDEST PUSH2 0x1F5C DUP2 DUP6 PUSH2 0x1F3E JUMP JUMPDEST SWAP4 POP PUSH2 0x1F6C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1872 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F83 DUP3 DUP5 PUSH2 0x1F48 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH DUP12 MCOPY PUSH22 0xA0E05498B3F0690F8B1F78F0FFB03D3FAE1BE763D574 0xC MUL PUSH5 0xB5C45C6473 PUSH16 0x6C634300081E00330000000000000000 ",
							"sourceMap": "403:3938:12:-:0;;;1171:4:2;1128:48;;;;;;;;;403:3938:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@UPGRADE_INTERFACE_VERSION_337": {
									"entryPoint": 1629,
									"id": 337,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1670": {
									"entryPoint": null,
									"id": 1670,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_1685": {
									"entryPoint": 3843,
									"id": 1685,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkNonPayable_819": {
									"entryPoint": 5005,
									"id": 819,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNotDelegated_443": {
									"entryPoint": 4275,
									"id": 443,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkProxy_427": {
									"entryPoint": 3613,
									"id": 427,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_312": {
									"entryPoint": 4410,
									"id": 312,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_initializableStorageSlot_298": {
									"entryPoint": 4626,
									"id": 298,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_1206": {
									"entryPoint": 5206,
									"id": 1206,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_599": {
									"entryPoint": 4676,
									"id": 599,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_494": {
									"entryPoint": 3989,
									"id": 494,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@admin_1406": {
									"entryPoint": 3570,
									"id": 1406,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@auctions_1402": {
									"entryPoint": 738,
									"id": 1402,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@createAuction_1527": {
									"entryPoint": 2199,
									"id": 1527,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@endAuction_1666": {
									"entryPoint": 3152,
									"id": 1666,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionDelegateCall_1124": {
									"entryPoint": 4877,
									"id": 1124,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_1264": {
									"entryPoint": 4667,
									"id": 1264,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getImplementation_572": {
									"entryPoint": 4429,
									"id": 572,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getLatestPrice_1454": {
									"entryPoint": 1460,
									"id": 1454,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialize_1420": {
									"entryPoint": 1021,
									"id": 1420,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nextAuctionId_1404": {
									"entryPoint": 3607,
									"id": 1404,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@placeBid_1612": {
									"entryPoint": 1686,
									"id": 1612,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@proxiableUUID_385": {
									"entryPoint": 689,
									"id": 385,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@setPriceFeed_1432": {
									"entryPoint": 954,
									"id": 1432,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@upgradeToAndCall_405": {
									"entryPoint": 658,
									"id": 405,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeToAndCall_635": {
									"entryPoint": 4512,
									"id": 635,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1164": {
									"entryPoint": 5065,
									"id": 1164,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 5587,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32_fromMemory": {
									"entryPoint": 7925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 5652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int256_fromMemory": {
									"entryPoint": 6785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 6805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint80_fromMemory": {
									"entryPoint": 6743,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6140,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 5697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 7945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_address": {
									"entryPoint": 6360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_uint256t_addresst_uint256": {
									"entryPoint": 6440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 6825,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5930,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 5796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_int256_to_t_int256_fromStack": {
									"entryPoint": 6192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 6660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_425b128ccdf9545481342dcbb6c6ea54c7b1d635720003c70f0b288c94c4874f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_aba2686a9124fe8a0b5635d6eaed974ab6b8e192a55b06032cc6a3e6c1b368e9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ec4db7c12adfeafed8f2b8a0ed8eb5e16dffad32197807f360486a7cc4cdb582_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7839,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8056,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7746,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7636,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 5986,
									"id": null,
									"parameterSlots": 11,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 5811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed": {
									"entryPoint": 6207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 6675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6328,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7256,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_425b128ccdf9545481342dcbb6c6ea54c7b1d635720003c70f0b288c94c4874f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7114,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7606,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_aba2686a9124fe8a0b5635d6eaed974ab6b8e192a55b06032cc6a3e6c1b368e9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ec4db7c12adfeafed8f2b8a0ed8eb5e16dffad32197807f360486a7cc4cdb582__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7873,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5274,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 5525,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 7988,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5322,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 5787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 6183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 6590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5291,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 6599,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint80": {
									"entryPoint": 6700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 6627,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 5573,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6258,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 5450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 6618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 7675,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6944,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5405,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5381,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 5385,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5287,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5283,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5389,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9": {
									"entryPoint": 7144,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_425b128ccdf9545481342dcbb6c6ea54c7b1d635720003c70f0b288c94c4874f": {
									"entryPoint": 7390,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5": {
									"entryPoint": 7040,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb": {
									"entryPoint": 7494,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_aba2686a9124fe8a0b5635d6eaed974ab6b8e192a55b06032cc6a3e6c1b368e9": {
									"entryPoint": 7286,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ec4db7c12adfeafed8f2b8a0ed8eb5e16dffad32197807f360486a7cc4cdb582": {
									"entryPoint": 7799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5339,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 7903,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 6763,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint80": {
									"entryPoint": 6721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:21789:13",
										"nodeType": "YulBlock",
										"src": "0:21789:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "379:81:13",
													"nodeType": "YulBlock",
													"src": "379:81:13",
													"statements": [
														{
															"nativeSrc": "389:65:13",
															"nodeType": "YulAssignment",
															"src": "389:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:13",
																		"nodeType": "YulLiteral",
																		"src": "411:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:13"
																},
																"nativeSrc": "400:54:13",
																"nodeType": "YulFunctionCall",
																"src": "400:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:13",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:13",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:126:13"
											},
											{
												"body": {
													"nativeSrc": "511:51:13",
													"nodeType": "YulBlock",
													"src": "511:51:13",
													"statements": [
														{
															"nativeSrc": "521:35:13",
															"nodeType": "YulAssignment",
															"src": "521:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:13"
																},
																"nativeSrc": "532:24:13",
																"nodeType": "YulFunctionCall",
																"src": "532:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:13",
														"nodeType": "YulTypedName",
														"src": "493:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:13",
														"nodeType": "YulTypedName",
														"src": "503:7:13",
														"type": ""
													}
												],
												"src": "466:96:13"
											},
											{
												"body": {
													"nativeSrc": "611:79:13",
													"nodeType": "YulBlock",
													"src": "611:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:13",
																"nodeType": "YulBlock",
																"src": "668:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:13",
																					"nodeType": "YulLiteral",
																					"src": "677:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:13",
																					"nodeType": "YulLiteral",
																					"src": "680:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:13"
																			},
																			"nativeSrc": "670:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:13"
																		},
																		"nativeSrc": "670:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:13"
																				},
																				"nativeSrc": "641:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:13"
																		},
																		"nativeSrc": "631:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:13"
																},
																"nativeSrc": "624:43:13",
																"nodeType": "YulFunctionCall",
																"src": "624:43:13"
															},
															"nativeSrc": "621:63:13",
															"nodeType": "YulIf",
															"src": "621:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:13",
														"nodeType": "YulTypedName",
														"src": "604:5:13",
														"type": ""
													}
												],
												"src": "568:122:13"
											},
											{
												"body": {
													"nativeSrc": "748:87:13",
													"nodeType": "YulBlock",
													"src": "748:87:13",
													"statements": [
														{
															"nativeSrc": "758:29:13",
															"nodeType": "YulAssignment",
															"src": "758:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:13"
																},
																"nativeSrc": "767:20:13",
																"nodeType": "YulFunctionCall",
																"src": "767:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:13"
																},
																"nativeSrc": "796:33:13",
																"nodeType": "YulFunctionCall",
																"src": "796:33:13"
															},
															"nativeSrc": "796:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:13",
														"nodeType": "YulTypedName",
														"src": "726:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:13",
														"nodeType": "YulTypedName",
														"src": "734:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:13",
														"nodeType": "YulTypedName",
														"src": "742:5:13",
														"type": ""
													}
												],
												"src": "696:139:13"
											},
											{
												"body": {
													"nativeSrc": "930:28:13",
													"nodeType": "YulBlock",
													"src": "930:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "947:1:13",
																		"nodeType": "YulLiteral",
																		"src": "947:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "950:1:13",
																		"nodeType": "YulLiteral",
																		"src": "950:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "940:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "940:6:13"
																},
																"nativeSrc": "940:12:13",
																"nodeType": "YulFunctionCall",
																"src": "940:12:13"
															},
															"nativeSrc": "940:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "940:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "841:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "841:117:13"
											},
											{
												"body": {
													"nativeSrc": "1053:28:13",
													"nodeType": "YulBlock",
													"src": "1053:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1070:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1070:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1073:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1073:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1063:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1063:6:13"
																},
																"nativeSrc": "1063:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1063:12:13"
															},
															"nativeSrc": "1063:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "1063:12:13"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "964:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "964:117:13"
											},
											{
												"body": {
													"nativeSrc": "1135:54:13",
													"nodeType": "YulBlock",
													"src": "1135:54:13",
													"statements": [
														{
															"nativeSrc": "1145:38:13",
															"nodeType": "YulAssignment",
															"src": "1145:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1163:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1163:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1170:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1170:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1159:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1159:3:13"
																		},
																		"nativeSrc": "1159:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1159:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1179:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1179:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1175:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1175:3:13"
																		},
																		"nativeSrc": "1175:7:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1175:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1155:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1155:3:13"
																},
																"nativeSrc": "1155:28:13",
																"nodeType": "YulFunctionCall",
																"src": "1155:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1145:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1145:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1087:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1118:5:13",
														"nodeType": "YulTypedName",
														"src": "1118:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1128:6:13",
														"nodeType": "YulTypedName",
														"src": "1128:6:13",
														"type": ""
													}
												],
												"src": "1087:102:13"
											},
											{
												"body": {
													"nativeSrc": "1223:152:13",
													"nodeType": "YulBlock",
													"src": "1223:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1240:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1240:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1243:77:13",
																		"nodeType": "YulLiteral",
																		"src": "1243:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1233:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1233:6:13"
																},
																"nativeSrc": "1233:88:13",
																"nodeType": "YulFunctionCall",
																"src": "1233:88:13"
															},
															"nativeSrc": "1233:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "1233:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1337:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1337:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1340:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1340:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1330:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1330:6:13"
																},
																"nativeSrc": "1330:15:13",
																"nodeType": "YulFunctionCall",
																"src": "1330:15:13"
															},
															"nativeSrc": "1330:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "1330:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1361:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1361:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1364:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1364:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1354:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1354:6:13"
																},
																"nativeSrc": "1354:15:13",
																"nodeType": "YulFunctionCall",
																"src": "1354:15:13"
															},
															"nativeSrc": "1354:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "1354:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1195:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "1195:180:13"
											},
											{
												"body": {
													"nativeSrc": "1424:238:13",
													"nodeType": "YulBlock",
													"src": "1424:238:13",
													"statements": [
														{
															"nativeSrc": "1434:58:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1434:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1456:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1456:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "1486:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "1486:4:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1464:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "1464:21:13"
																		},
																		"nativeSrc": "1464:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1464:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1452:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1452:3:13"
																},
																"nativeSrc": "1452:40:13",
																"nodeType": "YulFunctionCall",
																"src": "1452:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1438:10:13",
																	"nodeType": "YulTypedName",
																	"src": "1438:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1603:22:13",
																"nodeType": "YulBlock",
																"src": "1603:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1605:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "1605:16:13"
																			},
																			"nativeSrc": "1605:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1605:18:13"
																		},
																		"nativeSrc": "1605:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1605:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1546:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "1546:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1558:18:13",
																				"nodeType": "YulLiteral",
																				"src": "1558:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1543:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1543:2:13"
																		},
																		"nativeSrc": "1543:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1543:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1582:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "1582:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1594:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1594:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1579:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1579:2:13"
																		},
																		"nativeSrc": "1579:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1579:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1540:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1540:2:13"
																},
																"nativeSrc": "1540:62:13",
																"nodeType": "YulFunctionCall",
																"src": "1540:62:13"
															},
															"nativeSrc": "1537:88:13",
															"nodeType": "YulIf",
															"src": "1537:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1641:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1641:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1645:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "1645:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1634:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1634:6:13"
																},
																"nativeSrc": "1634:22:13",
																"nodeType": "YulFunctionCall",
																"src": "1634:22:13"
															},
															"nativeSrc": "1634:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "1634:22:13"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "1381:281:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1410:6:13",
														"nodeType": "YulTypedName",
														"src": "1410:6:13",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "1418:4:13",
														"nodeType": "YulTypedName",
														"src": "1418:4:13",
														"type": ""
													}
												],
												"src": "1381:281:13"
											},
											{
												"body": {
													"nativeSrc": "1709:88:13",
													"nodeType": "YulBlock",
													"src": "1709:88:13",
													"statements": [
														{
															"nativeSrc": "1719:30:13",
															"nodeType": "YulAssignment",
															"src": "1719:30:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1729:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "1729:18:13"
																},
																"nativeSrc": "1729:20:13",
																"nodeType": "YulFunctionCall",
																"src": "1729:20:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1719:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1719:6:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1778:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1778:6:13"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1786:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "1786:4:13"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1758:19:13",
																	"nodeType": "YulIdentifier",
																	"src": "1758:19:13"
																},
																"nativeSrc": "1758:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1758:33:13"
															},
															"nativeSrc": "1758:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "1758:33:13"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1668:129:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1693:4:13",
														"nodeType": "YulTypedName",
														"src": "1693:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1702:6:13",
														"nodeType": "YulTypedName",
														"src": "1702:6:13",
														"type": ""
													}
												],
												"src": "1668:129:13"
											},
											{
												"body": {
													"nativeSrc": "1869:241:13",
													"nodeType": "YulBlock",
													"src": "1869:241:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1974:22:13",
																"nodeType": "YulBlock",
																"src": "1974:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1976:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "1976:16:13"
																			},
																			"nativeSrc": "1976:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1976:18:13"
																		},
																		"nativeSrc": "1976:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1976:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1946:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1946:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1954:18:13",
																		"nodeType": "YulLiteral",
																		"src": "1954:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1943:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1943:2:13"
																},
																"nativeSrc": "1943:30:13",
																"nodeType": "YulFunctionCall",
																"src": "1943:30:13"
															},
															"nativeSrc": "1940:56:13",
															"nodeType": "YulIf",
															"src": "1940:56:13"
														},
														{
															"nativeSrc": "2006:37:13",
															"nodeType": "YulAssignment",
															"src": "2006:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2036:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2036:6:13"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "2014:21:13",
																	"nodeType": "YulIdentifier",
																	"src": "2014:21:13"
																},
																"nativeSrc": "2014:29:13",
																"nodeType": "YulFunctionCall",
																"src": "2014:29:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2006:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2006:4:13"
																}
															]
														},
														{
															"nativeSrc": "2080:23:13",
															"nodeType": "YulAssignment",
															"src": "2080:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "2092:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2092:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2098:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2098:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2088:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2088:3:13"
																},
																"nativeSrc": "2088:15:13",
																"nodeType": "YulFunctionCall",
																"src": "2088:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2080:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2080:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "1803:307:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1853:6:13",
														"nodeType": "YulTypedName",
														"src": "1853:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1864:4:13",
														"nodeType": "YulTypedName",
														"src": "1864:4:13",
														"type": ""
													}
												],
												"src": "1803:307:13"
											},
											{
												"body": {
													"nativeSrc": "2180:84:13",
													"nodeType": "YulBlock",
													"src": "2180:84:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2204:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2204:3:13"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "2209:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2209:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2214:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2214:6:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "2191:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "2191:12:13"
																},
																"nativeSrc": "2191:30:13",
																"nodeType": "YulFunctionCall",
																"src": "2191:30:13"
															},
															"nativeSrc": "2191:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "2191:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2241:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2241:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2246:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2246:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2237:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2237:3:13"
																		},
																		"nativeSrc": "2237:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2237:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2255:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2255:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2230:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2230:6:13"
																},
																"nativeSrc": "2230:27:13",
																"nodeType": "YulFunctionCall",
																"src": "2230:27:13"
															},
															"nativeSrc": "2230:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "2230:27:13"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "2116:148:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2162:3:13",
														"nodeType": "YulTypedName",
														"src": "2162:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2167:3:13",
														"nodeType": "YulTypedName",
														"src": "2167:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2172:6:13",
														"nodeType": "YulTypedName",
														"src": "2172:6:13",
														"type": ""
													}
												],
												"src": "2116:148:13"
											},
											{
												"body": {
													"nativeSrc": "2353:340:13",
													"nodeType": "YulBlock",
													"src": "2353:340:13",
													"statements": [
														{
															"nativeSrc": "2363:74:13",
															"nodeType": "YulAssignment",
															"src": "2363:74:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2429:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2429:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "2388:40:13",
																			"nodeType": "YulIdentifier",
																			"src": "2388:40:13"
																		},
																		"nativeSrc": "2388:48:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2388:48:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2372:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "2372:15:13"
																},
																"nativeSrc": "2372:65:13",
																"nodeType": "YulFunctionCall",
																"src": "2372:65:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2363:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2363:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2453:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2453:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2460:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2460:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2446:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2446:6:13"
																},
																"nativeSrc": "2446:21:13",
																"nodeType": "YulFunctionCall",
																"src": "2446:21:13"
															},
															"nativeSrc": "2446:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "2446:21:13"
														},
														{
															"nativeSrc": "2476:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2476:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2491:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2491:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2498:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2498:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2487:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2487:3:13"
																},
																"nativeSrc": "2487:16:13",
																"nodeType": "YulFunctionCall",
																"src": "2487:16:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2480:3:13",
																	"nodeType": "YulTypedName",
																	"src": "2480:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2541:83:13",
																"nodeType": "YulBlock",
																"src": "2541:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2543:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "2543:77:13"
																			},
																			"nativeSrc": "2543:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2543:79:13"
																		},
																		"nativeSrc": "2543:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2543:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2522:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2522:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2527:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2527:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2518:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2518:3:13"
																		},
																		"nativeSrc": "2518:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2518:16:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2536:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2536:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2515:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2515:2:13"
																},
																"nativeSrc": "2515:25:13",
																"nodeType": "YulFunctionCall",
																"src": "2515:25:13"
															},
															"nativeSrc": "2512:112:13",
															"nodeType": "YulIf",
															"src": "2512:112:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2670:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2670:3:13"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2675:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2675:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2680:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2680:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "2633:36:13",
																	"nodeType": "YulIdentifier",
																	"src": "2633:36:13"
																},
																"nativeSrc": "2633:54:13",
																"nodeType": "YulFunctionCall",
																"src": "2633:54:13"
															},
															"nativeSrc": "2633:54:13",
															"nodeType": "YulExpressionStatement",
															"src": "2633:54:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "2270:423:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2326:3:13",
														"nodeType": "YulTypedName",
														"src": "2326:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2331:6:13",
														"nodeType": "YulTypedName",
														"src": "2331:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2339:3:13",
														"nodeType": "YulTypedName",
														"src": "2339:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2347:5:13",
														"nodeType": "YulTypedName",
														"src": "2347:5:13",
														"type": ""
													}
												],
												"src": "2270:423:13"
											},
											{
												"body": {
													"nativeSrc": "2773:277:13",
													"nodeType": "YulBlock",
													"src": "2773:277:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2822:83:13",
																"nodeType": "YulBlock",
																"src": "2822:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2824:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "2824:77:13"
																			},
																			"nativeSrc": "2824:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2824:79:13"
																		},
																		"nativeSrc": "2824:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2824:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2801:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2801:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2809:4:13",
																						"nodeType": "YulLiteral",
																						"src": "2809:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2797:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2797:3:13"
																				},
																				"nativeSrc": "2797:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2797:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2816:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2816:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2793:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2793:3:13"
																		},
																		"nativeSrc": "2793:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2793:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2786:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2786:6:13"
																},
																"nativeSrc": "2786:35:13",
																"nodeType": "YulFunctionCall",
																"src": "2786:35:13"
															},
															"nativeSrc": "2783:122:13",
															"nodeType": "YulIf",
															"src": "2783:122:13"
														},
														{
															"nativeSrc": "2914:34:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2914:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2941:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2941:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2928:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "2928:12:13"
																},
																"nativeSrc": "2928:20:13",
																"nodeType": "YulFunctionCall",
																"src": "2928:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2918:6:13",
																	"nodeType": "YulTypedName",
																	"src": "2918:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2957:87:13",
															"nodeType": "YulAssignment",
															"src": "2957:87:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3017:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3017:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3025:4:13",
																				"nodeType": "YulLiteral",
																				"src": "3025:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3013:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3013:3:13"
																		},
																		"nativeSrc": "3013:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3013:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3032:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3032:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3040:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3040:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "2966:46:13",
																	"nodeType": "YulIdentifier",
																	"src": "2966:46:13"
																},
																"nativeSrc": "2966:78:13",
																"nodeType": "YulFunctionCall",
																"src": "2966:78:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2957:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2957:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "2712:338:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2751:6:13",
														"nodeType": "YulTypedName",
														"src": "2751:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2759:3:13",
														"nodeType": "YulTypedName",
														"src": "2759:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2767:5:13",
														"nodeType": "YulTypedName",
														"src": "2767:5:13",
														"type": ""
													}
												],
												"src": "2712:338:13"
											},
											{
												"body": {
													"nativeSrc": "3148:560:13",
													"nodeType": "YulBlock",
													"src": "3148:560:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3194:83:13",
																"nodeType": "YulBlock",
																"src": "3194:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3196:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3196:77:13"
																			},
																			"nativeSrc": "3196:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3196:79:13"
																		},
																		"nativeSrc": "3196:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3196:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3169:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3169:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3178:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3178:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3165:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3165:3:13"
																		},
																		"nativeSrc": "3165:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3165:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3190:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3190:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3161:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3161:3:13"
																},
																"nativeSrc": "3161:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3161:32:13"
															},
															"nativeSrc": "3158:119:13",
															"nodeType": "YulIf",
															"src": "3158:119:13"
														},
														{
															"nativeSrc": "3287:117:13",
															"nodeType": "YulBlock",
															"src": "3287:117:13",
															"statements": [
																{
																	"nativeSrc": "3302:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3302:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3316:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3316:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3306:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3306:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3331:63:13",
																	"nodeType": "YulAssignment",
																	"src": "3331:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3366:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3366:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3377:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3377:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3362:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3362:3:13"
																				},
																				"nativeSrc": "3362:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3362:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3386:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3386:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3341:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "3341:20:13"
																		},
																		"nativeSrc": "3341:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3341:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3331:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3331:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3414:287:13",
															"nodeType": "YulBlock",
															"src": "3414:287:13",
															"statements": [
																{
																	"nativeSrc": "3429:46:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3429:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3460:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3460:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3471:2:13",
																						"nodeType": "YulLiteral",
																						"src": "3471:2:13",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3456:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3456:3:13"
																				},
																				"nativeSrc": "3456:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3456:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "3443:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "3443:12:13"
																		},
																		"nativeSrc": "3443:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3443:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3433:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3433:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3522:83:13",
																		"nodeType": "YulBlock",
																		"src": "3522:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3524:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "3524:77:13"
																					},
																					"nativeSrc": "3524:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "3524:79:13"
																				},
																				"nativeSrc": "3524:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "3524:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3494:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3494:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3502:18:13",
																				"nodeType": "YulLiteral",
																				"src": "3502:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3491:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "3491:2:13"
																		},
																		"nativeSrc": "3491:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3491:30:13"
																	},
																	"nativeSrc": "3488:117:13",
																	"nodeType": "YulIf",
																	"src": "3488:117:13"
																},
																{
																	"nativeSrc": "3619:72:13",
																	"nodeType": "YulAssignment",
																	"src": "3619:72:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3663:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3663:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3674:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3674:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3659:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3659:3:13"
																				},
																				"nativeSrc": "3659:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3659:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3683:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3683:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "3629:29:13",
																			"nodeType": "YulIdentifier",
																			"src": "3629:29:13"
																		},
																		"nativeSrc": "3629:62:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3629:62:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3619:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3619:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nativeSrc": "3056:652:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3110:9:13",
														"nodeType": "YulTypedName",
														"src": "3110:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3121:7:13",
														"nodeType": "YulTypedName",
														"src": "3121:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3133:6:13",
														"nodeType": "YulTypedName",
														"src": "3133:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3141:6:13",
														"nodeType": "YulTypedName",
														"src": "3141:6:13",
														"type": ""
													}
												],
												"src": "3056:652:13"
											},
											{
												"body": {
													"nativeSrc": "3759:32:13",
													"nodeType": "YulBlock",
													"src": "3759:32:13",
													"statements": [
														{
															"nativeSrc": "3769:16:13",
															"nodeType": "YulAssignment",
															"src": "3769:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "3780:5:13",
																"nodeType": "YulIdentifier",
																"src": "3780:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3769:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "3769:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "3714:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3741:5:13",
														"nodeType": "YulTypedName",
														"src": "3741:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3751:7:13",
														"nodeType": "YulTypedName",
														"src": "3751:7:13",
														"type": ""
													}
												],
												"src": "3714:77:13"
											},
											{
												"body": {
													"nativeSrc": "3862:53:13",
													"nodeType": "YulBlock",
													"src": "3862:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3879:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3879:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3902:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3902:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "3884:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "3884:17:13"
																		},
																		"nativeSrc": "3884:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3884:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3872:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3872:6:13"
																},
																"nativeSrc": "3872:37:13",
																"nodeType": "YulFunctionCall",
																"src": "3872:37:13"
															},
															"nativeSrc": "3872:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "3872:37:13"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "3797:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3850:5:13",
														"nodeType": "YulTypedName",
														"src": "3850:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3857:3:13",
														"nodeType": "YulTypedName",
														"src": "3857:3:13",
														"type": ""
													}
												],
												"src": "3797:118:13"
											},
											{
												"body": {
													"nativeSrc": "4019:124:13",
													"nodeType": "YulBlock",
													"src": "4019:124:13",
													"statements": [
														{
															"nativeSrc": "4029:26:13",
															"nodeType": "YulAssignment",
															"src": "4029:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4041:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4041:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4052:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4037:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4037:3:13"
																},
																"nativeSrc": "4037:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4037:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4029:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4029:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4109:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4109:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4122:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4122:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4133:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4133:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4118:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4118:3:13"
																		},
																		"nativeSrc": "4118:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4118:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "4065:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "4065:43:13"
																},
																"nativeSrc": "4065:71:13",
																"nodeType": "YulFunctionCall",
																"src": "4065:71:13"
															},
															"nativeSrc": "4065:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "4065:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "3921:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3991:9:13",
														"nodeType": "YulTypedName",
														"src": "3991:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4003:6:13",
														"nodeType": "YulTypedName",
														"src": "4003:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4014:4:13",
														"nodeType": "YulTypedName",
														"src": "4014:4:13",
														"type": ""
													}
												],
												"src": "3921:222:13"
											},
											{
												"body": {
													"nativeSrc": "4194:32:13",
													"nodeType": "YulBlock",
													"src": "4194:32:13",
													"statements": [
														{
															"nativeSrc": "4204:16:13",
															"nodeType": "YulAssignment",
															"src": "4204:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "4215:5:13",
																"nodeType": "YulIdentifier",
																"src": "4215:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4204:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "4204:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "4149:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4176:5:13",
														"nodeType": "YulTypedName",
														"src": "4176:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4186:7:13",
														"nodeType": "YulTypedName",
														"src": "4186:7:13",
														"type": ""
													}
												],
												"src": "4149:77:13"
											},
											{
												"body": {
													"nativeSrc": "4275:79:13",
													"nodeType": "YulBlock",
													"src": "4275:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4332:16:13",
																"nodeType": "YulBlock",
																"src": "4332:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4341:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4341:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4344:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4344:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4334:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4334:6:13"
																			},
																			"nativeSrc": "4334:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4334:12:13"
																		},
																		"nativeSrc": "4334:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4334:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4298:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4298:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4323:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4323:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "4305:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "4305:17:13"
																				},
																				"nativeSrc": "4305:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4305:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4295:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "4295:2:13"
																		},
																		"nativeSrc": "4295:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4295:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4288:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4288:6:13"
																},
																"nativeSrc": "4288:43:13",
																"nodeType": "YulFunctionCall",
																"src": "4288:43:13"
															},
															"nativeSrc": "4285:63:13",
															"nodeType": "YulIf",
															"src": "4285:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "4232:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4268:5:13",
														"nodeType": "YulTypedName",
														"src": "4268:5:13",
														"type": ""
													}
												],
												"src": "4232:122:13"
											},
											{
												"body": {
													"nativeSrc": "4412:87:13",
													"nodeType": "YulBlock",
													"src": "4412:87:13",
													"statements": [
														{
															"nativeSrc": "4422:29:13",
															"nodeType": "YulAssignment",
															"src": "4422:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4444:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4444:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4431:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "4431:12:13"
																},
																"nativeSrc": "4431:20:13",
																"nodeType": "YulFunctionCall",
																"src": "4431:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4422:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "4422:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4487:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4487:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "4460:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "4460:26:13"
																},
																"nativeSrc": "4460:33:13",
																"nodeType": "YulFunctionCall",
																"src": "4460:33:13"
															},
															"nativeSrc": "4460:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "4460:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "4360:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4390:6:13",
														"nodeType": "YulTypedName",
														"src": "4390:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4398:3:13",
														"nodeType": "YulTypedName",
														"src": "4398:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4406:5:13",
														"nodeType": "YulTypedName",
														"src": "4406:5:13",
														"type": ""
													}
												],
												"src": "4360:139:13"
											},
											{
												"body": {
													"nativeSrc": "4571:263:13",
													"nodeType": "YulBlock",
													"src": "4571:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4617:83:13",
																"nodeType": "YulBlock",
																"src": "4617:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4619:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "4619:77:13"
																			},
																			"nativeSrc": "4619:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4619:79:13"
																		},
																		"nativeSrc": "4619:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4619:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4592:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4592:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4601:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4601:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4588:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4588:3:13"
																		},
																		"nativeSrc": "4588:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4588:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4613:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4613:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4584:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4584:3:13"
																},
																"nativeSrc": "4584:32:13",
																"nodeType": "YulFunctionCall",
																"src": "4584:32:13"
															},
															"nativeSrc": "4581:119:13",
															"nodeType": "YulIf",
															"src": "4581:119:13"
														},
														{
															"nativeSrc": "4710:117:13",
															"nodeType": "YulBlock",
															"src": "4710:117:13",
															"statements": [
																{
																	"nativeSrc": "4725:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4725:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4739:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4739:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4729:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4729:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4754:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4754:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4789:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4789:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4800:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4800:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4785:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4785:3:13"
																				},
																				"nativeSrc": "4785:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4785:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4809:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4809:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4764:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4764:20:13"
																		},
																		"nativeSrc": "4764:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4764:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4754:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4754:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4505:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4541:9:13",
														"nodeType": "YulTypedName",
														"src": "4541:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4552:7:13",
														"nodeType": "YulTypedName",
														"src": "4552:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4564:6:13",
														"nodeType": "YulTypedName",
														"src": "4564:6:13",
														"type": ""
													}
												],
												"src": "4505:329:13"
											},
											{
												"body": {
													"nativeSrc": "4905:53:13",
													"nodeType": "YulBlock",
													"src": "4905:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4922:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4922:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4945:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4945:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "4927:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "4927:17:13"
																		},
																		"nativeSrc": "4927:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4927:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4915:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4915:6:13"
																},
																"nativeSrc": "4915:37:13",
																"nodeType": "YulFunctionCall",
																"src": "4915:37:13"
															},
															"nativeSrc": "4915:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "4915:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "4840:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4893:5:13",
														"nodeType": "YulTypedName",
														"src": "4893:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4900:3:13",
														"nodeType": "YulTypedName",
														"src": "4900:3:13",
														"type": ""
													}
												],
												"src": "4840:118:13"
											},
											{
												"body": {
													"nativeSrc": "5029:53:13",
													"nodeType": "YulBlock",
													"src": "5029:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5046:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5046:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5069:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5069:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5051:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "5051:17:13"
																		},
																		"nativeSrc": "5051:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5051:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5039:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5039:6:13"
																},
																"nativeSrc": "5039:37:13",
																"nodeType": "YulFunctionCall",
																"src": "5039:37:13"
															},
															"nativeSrc": "5039:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "5039:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4964:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5017:5:13",
														"nodeType": "YulTypedName",
														"src": "5017:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5024:3:13",
														"nodeType": "YulTypedName",
														"src": "5024:3:13",
														"type": ""
													}
												],
												"src": "4964:118:13"
											},
											{
												"body": {
													"nativeSrc": "5130:48:13",
													"nodeType": "YulBlock",
													"src": "5130:48:13",
													"statements": [
														{
															"nativeSrc": "5140:32:13",
															"nodeType": "YulAssignment",
															"src": "5140:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5165:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5165:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5158:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5158:6:13"
																		},
																		"nativeSrc": "5158:13:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5158:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5151:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5151:6:13"
																},
																"nativeSrc": "5151:21:13",
																"nodeType": "YulFunctionCall",
																"src": "5151:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5140:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "5140:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "5088:90:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5112:5:13",
														"nodeType": "YulTypedName",
														"src": "5112:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5122:7:13",
														"nodeType": "YulTypedName",
														"src": "5122:7:13",
														"type": ""
													}
												],
												"src": "5088:90:13"
											},
											{
												"body": {
													"nativeSrc": "5243:50:13",
													"nodeType": "YulBlock",
													"src": "5243:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5260:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5260:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5280:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5280:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "5265:14:13",
																			"nodeType": "YulIdentifier",
																			"src": "5265:14:13"
																		},
																		"nativeSrc": "5265:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5265:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5253:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5253:6:13"
																},
																"nativeSrc": "5253:34:13",
																"nodeType": "YulFunctionCall",
																"src": "5253:34:13"
															},
															"nativeSrc": "5253:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "5253:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "5184:109:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5231:5:13",
														"nodeType": "YulTypedName",
														"src": "5231:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5238:3:13",
														"nodeType": "YulTypedName",
														"src": "5238:3:13",
														"type": ""
													}
												],
												"src": "5184:109:13"
											},
											{
												"body": {
													"nativeSrc": "5643:863:13",
													"nodeType": "YulBlock",
													"src": "5643:863:13",
													"statements": [
														{
															"nativeSrc": "5653:27:13",
															"nodeType": "YulAssignment",
															"src": "5653:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5665:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5665:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5676:3:13",
																		"nodeType": "YulLiteral",
																		"src": "5676:3:13",
																		"type": "",
																		"value": "320"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5661:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5661:3:13"
																},
																"nativeSrc": "5661:19:13",
																"nodeType": "YulFunctionCall",
																"src": "5661:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5653:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5653:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5734:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5734:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5747:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5747:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5758:1:13",
																				"nodeType": "YulLiteral",
																				"src": "5758:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5743:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5743:3:13"
																		},
																		"nativeSrc": "5743:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5743:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5690:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "5690:43:13"
																},
																"nativeSrc": "5690:71:13",
																"nodeType": "YulFunctionCall",
																"src": "5690:71:13"
															},
															"nativeSrc": "5690:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "5690:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5815:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5815:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5828:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5828:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5839:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5839:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5824:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5824:3:13"
																		},
																		"nativeSrc": "5824:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5824:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5771:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "5771:43:13"
																},
																"nativeSrc": "5771:72:13",
																"nodeType": "YulFunctionCall",
																"src": "5771:72:13"
															},
															"nativeSrc": "5771:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "5771:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "5897:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5897:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5910:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5910:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5921:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5921:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5906:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5906:3:13"
																		},
																		"nativeSrc": "5906:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5906:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5853:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "5853:43:13"
																},
																"nativeSrc": "5853:72:13",
																"nodeType": "YulFunctionCall",
																"src": "5853:72:13"
															},
															"nativeSrc": "5853:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "5853:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "5979:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5979:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5992:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5992:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6003:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6003:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5988:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5988:3:13"
																		},
																		"nativeSrc": "5988:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5988:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5935:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "5935:43:13"
																},
																"nativeSrc": "5935:72:13",
																"nodeType": "YulFunctionCall",
																"src": "5935:72:13"
															},
															"nativeSrc": "5935:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "5935:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "6061:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6061:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6074:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6074:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6085:3:13",
																				"nodeType": "YulLiteral",
																				"src": "6085:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6070:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6070:3:13"
																		},
																		"nativeSrc": "6070:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6070:19:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6017:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "6017:43:13"
																},
																"nativeSrc": "6017:73:13",
																"nodeType": "YulFunctionCall",
																"src": "6017:73:13"
															},
															"nativeSrc": "6017:73:13",
															"nodeType": "YulExpressionStatement",
															"src": "6017:73:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "6144:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6144:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6157:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6157:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6168:3:13",
																				"nodeType": "YulLiteral",
																				"src": "6168:3:13",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6153:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6153:3:13"
																		},
																		"nativeSrc": "6153:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6153:19:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6100:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "6100:43:13"
																},
																"nativeSrc": "6100:73:13",
																"nodeType": "YulFunctionCall",
																"src": "6100:73:13"
															},
															"nativeSrc": "6100:73:13",
															"nodeType": "YulExpressionStatement",
															"src": "6100:73:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "6221:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6221:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6234:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6234:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6245:3:13",
																				"nodeType": "YulLiteral",
																				"src": "6245:3:13",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6230:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6230:3:13"
																		},
																		"nativeSrc": "6230:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6230:19:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "6183:37:13",
																	"nodeType": "YulIdentifier",
																	"src": "6183:37:13"
																},
																"nativeSrc": "6183:67:13",
																"nodeType": "YulFunctionCall",
																"src": "6183:67:13"
															},
															"nativeSrc": "6183:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "6183:67:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value7",
																		"nativeSrc": "6304:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6304:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6317:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6317:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6328:3:13",
																				"nodeType": "YulLiteral",
																				"src": "6328:3:13",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6313:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6313:3:13"
																		},
																		"nativeSrc": "6313:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6313:19:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6260:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "6260:43:13"
																},
																"nativeSrc": "6260:73:13",
																"nodeType": "YulFunctionCall",
																"src": "6260:73:13"
															},
															"nativeSrc": "6260:73:13",
															"nodeType": "YulExpressionStatement",
															"src": "6260:73:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value8",
																		"nativeSrc": "6387:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6387:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6400:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6400:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6411:3:13",
																				"nodeType": "YulLiteral",
																				"src": "6411:3:13",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6396:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6396:3:13"
																		},
																		"nativeSrc": "6396:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6396:19:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6343:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "6343:43:13"
																},
																"nativeSrc": "6343:73:13",
																"nodeType": "YulFunctionCall",
																"src": "6343:73:13"
															},
															"nativeSrc": "6343:73:13",
															"nodeType": "YulExpressionStatement",
															"src": "6343:73:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value9",
																		"nativeSrc": "6470:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6470:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6483:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6483:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6494:3:13",
																				"nodeType": "YulLiteral",
																				"src": "6494:3:13",
																				"type": "",
																				"value": "288"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6479:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6479:3:13"
																		},
																		"nativeSrc": "6479:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6479:19:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6426:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "6426:43:13"
																},
																"nativeSrc": "6426:73:13",
																"nodeType": "YulFunctionCall",
																"src": "6426:73:13"
															},
															"nativeSrc": "6426:73:13",
															"nodeType": "YulExpressionStatement",
															"src": "6426:73:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "5299:1207:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5543:9:13",
														"nodeType": "YulTypedName",
														"src": "5543:9:13",
														"type": ""
													},
													{
														"name": "value9",
														"nativeSrc": "5555:6:13",
														"nodeType": "YulTypedName",
														"src": "5555:6:13",
														"type": ""
													},
													{
														"name": "value8",
														"nativeSrc": "5563:6:13",
														"nodeType": "YulTypedName",
														"src": "5563:6:13",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "5571:6:13",
														"nodeType": "YulTypedName",
														"src": "5571:6:13",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "5579:6:13",
														"nodeType": "YulTypedName",
														"src": "5579:6:13",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "5587:6:13",
														"nodeType": "YulTypedName",
														"src": "5587:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "5595:6:13",
														"nodeType": "YulTypedName",
														"src": "5595:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5603:6:13",
														"nodeType": "YulTypedName",
														"src": "5603:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5611:6:13",
														"nodeType": "YulTypedName",
														"src": "5611:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5619:6:13",
														"nodeType": "YulTypedName",
														"src": "5619:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5627:6:13",
														"nodeType": "YulTypedName",
														"src": "5627:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5638:4:13",
														"nodeType": "YulTypedName",
														"src": "5638:4:13",
														"type": ""
													}
												],
												"src": "5299:1207:13"
											},
											{
												"body": {
													"nativeSrc": "6578:263:13",
													"nodeType": "YulBlock",
													"src": "6578:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6624:83:13",
																"nodeType": "YulBlock",
																"src": "6624:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6626:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "6626:77:13"
																			},
																			"nativeSrc": "6626:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6626:79:13"
																		},
																		"nativeSrc": "6626:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6626:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6599:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6599:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6608:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6608:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6595:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6595:3:13"
																		},
																		"nativeSrc": "6595:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6595:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6620:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6620:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6591:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6591:3:13"
																},
																"nativeSrc": "6591:32:13",
																"nodeType": "YulFunctionCall",
																"src": "6591:32:13"
															},
															"nativeSrc": "6588:119:13",
															"nodeType": "YulIf",
															"src": "6588:119:13"
														},
														{
															"nativeSrc": "6717:117:13",
															"nodeType": "YulBlock",
															"src": "6717:117:13",
															"statements": [
																{
																	"nativeSrc": "6732:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6732:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6746:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6746:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6736:6:13",
																			"nodeType": "YulTypedName",
																			"src": "6736:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6761:63:13",
																	"nodeType": "YulAssignment",
																	"src": "6761:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6796:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "6796:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6807:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6807:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6792:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6792:3:13"
																				},
																				"nativeSrc": "6792:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6792:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6816:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6816:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6771:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "6771:20:13"
																		},
																		"nativeSrc": "6771:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6771:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6761:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6761:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "6512:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6548:9:13",
														"nodeType": "YulTypedName",
														"src": "6548:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6559:7:13",
														"nodeType": "YulTypedName",
														"src": "6559:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6571:6:13",
														"nodeType": "YulTypedName",
														"src": "6571:6:13",
														"type": ""
													}
												],
												"src": "6512:329:13"
											},
											{
												"body": {
													"nativeSrc": "6891:32:13",
													"nodeType": "YulBlock",
													"src": "6891:32:13",
													"statements": [
														{
															"nativeSrc": "6901:16:13",
															"nodeType": "YulAssignment",
															"src": "6901:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "6912:5:13",
																"nodeType": "YulIdentifier",
																"src": "6912:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6901:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "6901:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nativeSrc": "6847:76:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6873:5:13",
														"nodeType": "YulTypedName",
														"src": "6873:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6883:7:13",
														"nodeType": "YulTypedName",
														"src": "6883:7:13",
														"type": ""
													}
												],
												"src": "6847:76:13"
											},
											{
												"body": {
													"nativeSrc": "6992:52:13",
													"nodeType": "YulBlock",
													"src": "6992:52:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7009:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7009:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7031:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "7031:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int256",
																			"nativeSrc": "7014:16:13",
																			"nodeType": "YulIdentifier",
																			"src": "7014:16:13"
																		},
																		"nativeSrc": "7014:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7014:23:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7002:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7002:6:13"
																},
																"nativeSrc": "7002:36:13",
																"nodeType": "YulFunctionCall",
																"src": "7002:36:13"
															},
															"nativeSrc": "7002:36:13",
															"nodeType": "YulExpressionStatement",
															"src": "7002:36:13"
														}
													]
												},
												"name": "abi_encode_t_int256_to_t_int256_fromStack",
												"nativeSrc": "6929:115:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6980:5:13",
														"nodeType": "YulTypedName",
														"src": "6980:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6987:3:13",
														"nodeType": "YulTypedName",
														"src": "6987:3:13",
														"type": ""
													}
												],
												"src": "6929:115:13"
											},
											{
												"body": {
													"nativeSrc": "7146:122:13",
													"nodeType": "YulBlock",
													"src": "7146:122:13",
													"statements": [
														{
															"nativeSrc": "7156:26:13",
															"nodeType": "YulAssignment",
															"src": "7156:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7168:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7168:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7179:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7179:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7164:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7164:3:13"
																},
																"nativeSrc": "7164:18:13",
																"nodeType": "YulFunctionCall",
																"src": "7164:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7156:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7156:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7234:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7234:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7247:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7247:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7258:1:13",
																				"nodeType": "YulLiteral",
																				"src": "7258:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7243:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7243:3:13"
																		},
																		"nativeSrc": "7243:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7243:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nativeSrc": "7192:41:13",
																	"nodeType": "YulIdentifier",
																	"src": "7192:41:13"
																},
																"nativeSrc": "7192:69:13",
																"nodeType": "YulFunctionCall",
																"src": "7192:69:13"
															},
															"nativeSrc": "7192:69:13",
															"nodeType": "YulExpressionStatement",
															"src": "7192:69:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
												"nativeSrc": "7050:218:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7118:9:13",
														"nodeType": "YulTypedName",
														"src": "7118:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7130:6:13",
														"nodeType": "YulTypedName",
														"src": "7130:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7141:4:13",
														"nodeType": "YulTypedName",
														"src": "7141:4:13",
														"type": ""
													}
												],
												"src": "7050:218:13"
											},
											{
												"body": {
													"nativeSrc": "7333:40:13",
													"nodeType": "YulBlock",
													"src": "7333:40:13",
													"statements": [
														{
															"nativeSrc": "7344:22:13",
															"nodeType": "YulAssignment",
															"src": "7344:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7360:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "7360:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7354:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "7354:5:13"
																},
																"nativeSrc": "7354:12:13",
																"nodeType": "YulFunctionCall",
																"src": "7354:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7344:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7344:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7274:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7316:5:13",
														"nodeType": "YulTypedName",
														"src": "7316:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7326:6:13",
														"nodeType": "YulTypedName",
														"src": "7326:6:13",
														"type": ""
													}
												],
												"src": "7274:99:13"
											},
											{
												"body": {
													"nativeSrc": "7475:73:13",
													"nodeType": "YulBlock",
													"src": "7475:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7492:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7492:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7497:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7497:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7485:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7485:6:13"
																},
																"nativeSrc": "7485:19:13",
																"nodeType": "YulFunctionCall",
																"src": "7485:19:13"
															},
															"nativeSrc": "7485:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "7485:19:13"
														},
														{
															"nativeSrc": "7513:29:13",
															"nodeType": "YulAssignment",
															"src": "7513:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7532:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7532:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7537:4:13",
																		"nodeType": "YulLiteral",
																		"src": "7537:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7528:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7528:3:13"
																},
																"nativeSrc": "7528:14:13",
																"nodeType": "YulFunctionCall",
																"src": "7528:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7513:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "7513:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7379:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7447:3:13",
														"nodeType": "YulTypedName",
														"src": "7447:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7452:6:13",
														"nodeType": "YulTypedName",
														"src": "7452:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7463:11:13",
														"nodeType": "YulTypedName",
														"src": "7463:11:13",
														"type": ""
													}
												],
												"src": "7379:169:13"
											},
											{
												"body": {
													"nativeSrc": "7616:77:13",
													"nodeType": "YulBlock",
													"src": "7616:77:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "7633:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7633:3:13"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "7638:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7638:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7643:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7643:6:13"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "7627:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "7627:5:13"
																},
																"nativeSrc": "7627:23:13",
																"nodeType": "YulFunctionCall",
																"src": "7627:23:13"
															},
															"nativeSrc": "7627:23:13",
															"nodeType": "YulExpressionStatement",
															"src": "7627:23:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "7670:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "7670:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7675:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7675:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7666:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7666:3:13"
																		},
																		"nativeSrc": "7666:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7666:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7684:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7684:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7659:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7659:6:13"
																},
																"nativeSrc": "7659:27:13",
																"nodeType": "YulFunctionCall",
																"src": "7659:27:13"
															},
															"nativeSrc": "7659:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "7659:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "7554:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7598:3:13",
														"nodeType": "YulTypedName",
														"src": "7598:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "7603:3:13",
														"nodeType": "YulTypedName",
														"src": "7603:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7608:6:13",
														"nodeType": "YulTypedName",
														"src": "7608:6:13",
														"type": ""
													}
												],
												"src": "7554:139:13"
											},
											{
												"body": {
													"nativeSrc": "7791:285:13",
													"nodeType": "YulBlock",
													"src": "7791:285:13",
													"statements": [
														{
															"nativeSrc": "7801:53:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7801:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7848:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "7848:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7815:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "7815:32:13"
																},
																"nativeSrc": "7815:39:13",
																"nodeType": "YulFunctionCall",
																"src": "7815:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7805:6:13",
																	"nodeType": "YulTypedName",
																	"src": "7805:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7863:78:13",
															"nodeType": "YulAssignment",
															"src": "7863:78:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7929:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7929:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7934:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7934:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7870:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "7870:58:13"
																},
																"nativeSrc": "7870:71:13",
																"nodeType": "YulFunctionCall",
																"src": "7870:71:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7863:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7863:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7989:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "7989:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7996:4:13",
																				"nodeType": "YulLiteral",
																				"src": "7996:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7985:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7985:3:13"
																		},
																		"nativeSrc": "7985:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7985:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "8003:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8003:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8008:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8008:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "7950:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "7950:34:13"
																},
																"nativeSrc": "7950:65:13",
																"nodeType": "YulFunctionCall",
																"src": "7950:65:13"
															},
															"nativeSrc": "7950:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "7950:65:13"
														},
														{
															"nativeSrc": "8024:46:13",
															"nodeType": "YulAssignment",
															"src": "8024:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8035:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8035:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8062:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8062:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "8040:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "8040:21:13"
																		},
																		"nativeSrc": "8040:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8040:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8031:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8031:3:13"
																},
																"nativeSrc": "8031:39:13",
																"nodeType": "YulFunctionCall",
																"src": "8031:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8024:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8024:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7699:377:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7772:5:13",
														"nodeType": "YulTypedName",
														"src": "7772:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7779:3:13",
														"nodeType": "YulTypedName",
														"src": "7779:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7787:3:13",
														"nodeType": "YulTypedName",
														"src": "7787:3:13",
														"type": ""
													}
												],
												"src": "7699:377:13"
											},
											{
												"body": {
													"nativeSrc": "8200:195:13",
													"nodeType": "YulBlock",
													"src": "8200:195:13",
													"statements": [
														{
															"nativeSrc": "8210:26:13",
															"nodeType": "YulAssignment",
															"src": "8210:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8222:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8222:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8233:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8233:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8218:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8218:3:13"
																},
																"nativeSrc": "8218:18:13",
																"nodeType": "YulFunctionCall",
																"src": "8218:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8210:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8210:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8257:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8257:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8268:1:13",
																				"nodeType": "YulLiteral",
																				"src": "8268:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8253:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8253:3:13"
																		},
																		"nativeSrc": "8253:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8253:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8276:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "8276:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8282:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8282:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8272:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8272:3:13"
																		},
																		"nativeSrc": "8272:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8272:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8246:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8246:6:13"
																},
																"nativeSrc": "8246:47:13",
																"nodeType": "YulFunctionCall",
																"src": "8246:47:13"
															},
															"nativeSrc": "8246:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "8246:47:13"
														},
														{
															"nativeSrc": "8302:86:13",
															"nodeType": "YulAssignment",
															"src": "8302:86:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8374:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8374:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8383:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "8383:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8310:63:13",
																	"nodeType": "YulIdentifier",
																	"src": "8310:63:13"
																},
																"nativeSrc": "8310:78:13",
																"nodeType": "YulFunctionCall",
																"src": "8310:78:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8302:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8302:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8082:313:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8172:9:13",
														"nodeType": "YulTypedName",
														"src": "8172:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8184:6:13",
														"nodeType": "YulTypedName",
														"src": "8184:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8195:4:13",
														"nodeType": "YulTypedName",
														"src": "8195:4:13",
														"type": ""
													}
												],
												"src": "8082:313:13"
											},
											{
												"body": {
													"nativeSrc": "8501:519:13",
													"nodeType": "YulBlock",
													"src": "8501:519:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8547:83:13",
																"nodeType": "YulBlock",
																"src": "8547:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8549:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "8549:77:13"
																			},
																			"nativeSrc": "8549:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8549:79:13"
																		},
																		"nativeSrc": "8549:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8549:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8522:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8522:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8531:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8531:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8518:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8518:3:13"
																		},
																		"nativeSrc": "8518:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8518:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8543:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8543:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8514:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8514:3:13"
																},
																"nativeSrc": "8514:32:13",
																"nodeType": "YulFunctionCall",
																"src": "8514:32:13"
															},
															"nativeSrc": "8511:119:13",
															"nodeType": "YulIf",
															"src": "8511:119:13"
														},
														{
															"nativeSrc": "8640:117:13",
															"nodeType": "YulBlock",
															"src": "8640:117:13",
															"statements": [
																{
																	"nativeSrc": "8655:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8655:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8669:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8669:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8659:6:13",
																			"nodeType": "YulTypedName",
																			"src": "8659:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8684:63:13",
																	"nodeType": "YulAssignment",
																	"src": "8684:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8719:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "8719:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8730:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "8730:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8715:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8715:3:13"
																				},
																				"nativeSrc": "8715:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8715:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8739:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8739:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8694:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "8694:20:13"
																		},
																		"nativeSrc": "8694:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8694:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8684:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "8684:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8767:118:13",
															"nodeType": "YulBlock",
															"src": "8767:118:13",
															"statements": [
																{
																	"nativeSrc": "8782:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8782:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8796:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8796:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8786:6:13",
																			"nodeType": "YulTypedName",
																			"src": "8786:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8812:63:13",
																	"nodeType": "YulAssignment",
																	"src": "8812:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8847:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "8847:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8858:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "8858:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8843:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8843:3:13"
																				},
																				"nativeSrc": "8843:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8843:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8867:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8867:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8822:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "8822:20:13"
																		},
																		"nativeSrc": "8822:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8822:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8812:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "8812:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8895:118:13",
															"nodeType": "YulBlock",
															"src": "8895:118:13",
															"statements": [
																{
																	"nativeSrc": "8910:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8910:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8924:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8924:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8914:6:13",
																			"nodeType": "YulTypedName",
																			"src": "8914:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8940:63:13",
																	"nodeType": "YulAssignment",
																	"src": "8940:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8975:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "8975:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8986:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "8986:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8971:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8971:3:13"
																				},
																				"nativeSrc": "8971:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8971:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8995:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8995:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8950:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "8950:20:13"
																		},
																		"nativeSrc": "8950:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8950:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "8940:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "8940:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_address",
												"nativeSrc": "8401:619:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8455:9:13",
														"nodeType": "YulTypedName",
														"src": "8455:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8466:7:13",
														"nodeType": "YulTypedName",
														"src": "8466:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8478:6:13",
														"nodeType": "YulTypedName",
														"src": "8478:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8486:6:13",
														"nodeType": "YulTypedName",
														"src": "8486:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8494:6:13",
														"nodeType": "YulTypedName",
														"src": "8494:6:13",
														"type": ""
													}
												],
												"src": "8401:619:13"
											},
											{
												"body": {
													"nativeSrc": "9143:648:13",
													"nodeType": "YulBlock",
													"src": "9143:648:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "9190:83:13",
																"nodeType": "YulBlock",
																"src": "9190:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9192:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "9192:77:13"
																			},
																			"nativeSrc": "9192:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9192:79:13"
																		},
																		"nativeSrc": "9192:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9192:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9164:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9164:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9173:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9173:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9160:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9160:3:13"
																		},
																		"nativeSrc": "9160:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9160:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9185:3:13",
																		"nodeType": "YulLiteral",
																		"src": "9185:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9156:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9156:3:13"
																},
																"nativeSrc": "9156:33:13",
																"nodeType": "YulFunctionCall",
																"src": "9156:33:13"
															},
															"nativeSrc": "9153:120:13",
															"nodeType": "YulIf",
															"src": "9153:120:13"
														},
														{
															"nativeSrc": "9283:117:13",
															"nodeType": "YulBlock",
															"src": "9283:117:13",
															"statements": [
																{
																	"nativeSrc": "9298:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9298:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9312:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9312:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9302:6:13",
																			"nodeType": "YulTypedName",
																			"src": "9302:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9327:63:13",
																	"nodeType": "YulAssignment",
																	"src": "9327:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9362:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9362:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9373:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9373:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9358:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9358:3:13"
																				},
																				"nativeSrc": "9358:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9358:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9382:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9382:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9337:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "9337:20:13"
																		},
																		"nativeSrc": "9337:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9337:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9327:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "9327:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9410:118:13",
															"nodeType": "YulBlock",
															"src": "9410:118:13",
															"statements": [
																{
																	"nativeSrc": "9425:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9425:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9439:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9439:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9429:6:13",
																			"nodeType": "YulTypedName",
																			"src": "9429:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9455:63:13",
																	"nodeType": "YulAssignment",
																	"src": "9455:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9490:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9490:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9501:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9501:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9486:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9486:3:13"
																				},
																				"nativeSrc": "9486:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9486:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9510:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9510:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9465:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "9465:20:13"
																		},
																		"nativeSrc": "9465:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9465:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9455:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "9455:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9538:118:13",
															"nodeType": "YulBlock",
															"src": "9538:118:13",
															"statements": [
																{
																	"nativeSrc": "9553:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9553:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9567:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9567:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9557:6:13",
																			"nodeType": "YulTypedName",
																			"src": "9557:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9583:63:13",
																	"nodeType": "YulAssignment",
																	"src": "9583:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9618:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9618:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9629:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9629:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9614:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9614:3:13"
																				},
																				"nativeSrc": "9614:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9614:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9638:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9638:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9593:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "9593:20:13"
																		},
																		"nativeSrc": "9593:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9593:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9583:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "9583:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9666:118:13",
															"nodeType": "YulBlock",
															"src": "9666:118:13",
															"statements": [
																{
																	"nativeSrc": "9681:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9681:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9695:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9695:2:13",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9685:6:13",
																			"nodeType": "YulTypedName",
																			"src": "9685:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9711:63:13",
																	"nodeType": "YulAssignment",
																	"src": "9711:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9746:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9746:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9757:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9757:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9742:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9742:3:13"
																				},
																				"nativeSrc": "9742:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9742:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9766:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9766:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9721:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "9721:20:13"
																		},
																		"nativeSrc": "9721:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9721:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "9711:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "9711:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_addresst_uint256",
												"nativeSrc": "9026:765:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9089:9:13",
														"nodeType": "YulTypedName",
														"src": "9089:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9100:7:13",
														"nodeType": "YulTypedName",
														"src": "9100:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9112:6:13",
														"nodeType": "YulTypedName",
														"src": "9112:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9120:6:13",
														"nodeType": "YulTypedName",
														"src": "9120:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9128:6:13",
														"nodeType": "YulTypedName",
														"src": "9128:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9136:6:13",
														"nodeType": "YulTypedName",
														"src": "9136:6:13",
														"type": ""
													}
												],
												"src": "9026:765:13"
											},
											{
												"body": {
													"nativeSrc": "9895:124:13",
													"nodeType": "YulBlock",
													"src": "9895:124:13",
													"statements": [
														{
															"nativeSrc": "9905:26:13",
															"nodeType": "YulAssignment",
															"src": "9905:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9917:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9917:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9928:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9928:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9913:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9913:3:13"
																},
																"nativeSrc": "9913:18:13",
																"nodeType": "YulFunctionCall",
																"src": "9913:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9905:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9905:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9985:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9985:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9998:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9998:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10009:1:13",
																				"nodeType": "YulLiteral",
																				"src": "10009:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9994:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9994:3:13"
																		},
																		"nativeSrc": "9994:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9994:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9941:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "9941:43:13"
																},
																"nativeSrc": "9941:71:13",
																"nodeType": "YulFunctionCall",
																"src": "9941:71:13"
															},
															"nativeSrc": "9941:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "9941:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9797:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9867:9:13",
														"nodeType": "YulTypedName",
														"src": "9867:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9879:6:13",
														"nodeType": "YulTypedName",
														"src": "9879:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9890:4:13",
														"nodeType": "YulTypedName",
														"src": "9890:4:13",
														"type": ""
													}
												],
												"src": "9797:222:13"
											},
											{
												"body": {
													"nativeSrc": "10123:124:13",
													"nodeType": "YulBlock",
													"src": "10123:124:13",
													"statements": [
														{
															"nativeSrc": "10133:26:13",
															"nodeType": "YulAssignment",
															"src": "10133:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10145:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10145:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10156:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10156:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10141:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10141:3:13"
																},
																"nativeSrc": "10141:18:13",
																"nodeType": "YulFunctionCall",
																"src": "10141:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10133:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10133:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10213:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10213:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10226:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10226:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10237:1:13",
																				"nodeType": "YulLiteral",
																				"src": "10237:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10222:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10222:3:13"
																		},
																		"nativeSrc": "10222:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10222:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10169:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "10169:43:13"
																},
																"nativeSrc": "10169:71:13",
																"nodeType": "YulFunctionCall",
																"src": "10169:71:13"
															},
															"nativeSrc": "10169:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "10169:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "10025:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10095:9:13",
														"nodeType": "YulTypedName",
														"src": "10095:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10107:6:13",
														"nodeType": "YulTypedName",
														"src": "10107:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10118:4:13",
														"nodeType": "YulTypedName",
														"src": "10118:4:13",
														"type": ""
													}
												],
												"src": "10025:222:13"
											},
											{
												"body": {
													"nativeSrc": "10306:32:13",
													"nodeType": "YulBlock",
													"src": "10306:32:13",
													"statements": [
														{
															"nativeSrc": "10316:16:13",
															"nodeType": "YulAssignment",
															"src": "10316:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "10327:5:13",
																"nodeType": "YulIdentifier",
																"src": "10327:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "10316:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "10316:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "10253:85:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10288:5:13",
														"nodeType": "YulTypedName",
														"src": "10288:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "10298:7:13",
														"nodeType": "YulTypedName",
														"src": "10298:7:13",
														"type": ""
													}
												],
												"src": "10253:85:13"
											},
											{
												"body": {
													"nativeSrc": "10388:57:13",
													"nodeType": "YulBlock",
													"src": "10388:57:13",
													"statements": [
														{
															"nativeSrc": "10398:41:13",
															"nodeType": "YulAssignment",
															"src": "10398:41:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10413:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "10413:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10420:18:13",
																		"nodeType": "YulLiteral",
																		"src": "10420:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10409:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10409:3:13"
																},
																"nativeSrc": "10409:30:13",
																"nodeType": "YulFunctionCall",
																"src": "10409:30:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "10398:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "10398:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "10344:101:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10370:5:13",
														"nodeType": "YulTypedName",
														"src": "10370:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "10380:7:13",
														"nodeType": "YulTypedName",
														"src": "10380:7:13",
														"type": ""
													}
												],
												"src": "10344:101:13"
											},
											{
												"body": {
													"nativeSrc": "10483:28:13",
													"nodeType": "YulBlock",
													"src": "10483:28:13",
													"statements": [
														{
															"nativeSrc": "10493:12:13",
															"nodeType": "YulAssignment",
															"src": "10493:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "10500:5:13",
																"nodeType": "YulIdentifier",
																"src": "10500:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "10493:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10493:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "10451:60:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10469:5:13",
														"nodeType": "YulTypedName",
														"src": "10469:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "10479:3:13",
														"nodeType": "YulTypedName",
														"src": "10479:3:13",
														"type": ""
													}
												],
												"src": "10451:60:13"
											},
											{
												"body": {
													"nativeSrc": "10584:89:13",
													"nodeType": "YulBlock",
													"src": "10584:89:13",
													"statements": [
														{
															"nativeSrc": "10594:73:13",
															"nodeType": "YulAssignment",
															"src": "10594:73:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10659:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "10659:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "10633:25:13",
																					"nodeType": "YulIdentifier",
																					"src": "10633:25:13"
																				},
																				"nativeSrc": "10633:32:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10633:32:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "10624:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "10624:8:13"
																		},
																		"nativeSrc": "10624:42:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10624:42:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "10607:16:13",
																	"nodeType": "YulIdentifier",
																	"src": "10607:16:13"
																},
																"nativeSrc": "10607:60:13",
																"nodeType": "YulFunctionCall",
																"src": "10607:60:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "10594:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "10594:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "10517:156:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10564:5:13",
														"nodeType": "YulTypedName",
														"src": "10564:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "10574:9:13",
														"nodeType": "YulTypedName",
														"src": "10574:9:13",
														"type": ""
													}
												],
												"src": "10517:156:13"
											},
											{
												"body": {
													"nativeSrc": "10751:73:13",
													"nodeType": "YulBlock",
													"src": "10751:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10768:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10768:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10811:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "10811:5:13"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "10773:37:13",
																			"nodeType": "YulIdentifier",
																			"src": "10773:37:13"
																		},
																		"nativeSrc": "10773:44:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10773:44:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10761:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10761:6:13"
																},
																"nativeSrc": "10761:57:13",
																"nodeType": "YulFunctionCall",
																"src": "10761:57:13"
															},
															"nativeSrc": "10761:57:13",
															"nodeType": "YulExpressionStatement",
															"src": "10761:57:13"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "10679:145:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10739:5:13",
														"nodeType": "YulTypedName",
														"src": "10739:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10746:3:13",
														"nodeType": "YulTypedName",
														"src": "10746:3:13",
														"type": ""
													}
												],
												"src": "10679:145:13"
											},
											{
												"body": {
													"nativeSrc": "10935:131:13",
													"nodeType": "YulBlock",
													"src": "10935:131:13",
													"statements": [
														{
															"nativeSrc": "10945:26:13",
															"nodeType": "YulAssignment",
															"src": "10945:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10957:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10957:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10968:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10968:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10953:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10953:3:13"
																},
																"nativeSrc": "10953:18:13",
																"nodeType": "YulFunctionCall",
																"src": "10953:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10945:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10945:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11032:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11032:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11045:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11045:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11056:1:13",
																				"nodeType": "YulLiteral",
																				"src": "11056:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11041:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11041:3:13"
																		},
																		"nativeSrc": "11041:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11041:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "10981:50:13",
																	"nodeType": "YulIdentifier",
																	"src": "10981:50:13"
																},
																"nativeSrc": "10981:78:13",
																"nodeType": "YulFunctionCall",
																"src": "10981:78:13"
															},
															"nativeSrc": "10981:78:13",
															"nodeType": "YulExpressionStatement",
															"src": "10981:78:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "10830:236:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10907:9:13",
														"nodeType": "YulTypedName",
														"src": "10907:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10919:6:13",
														"nodeType": "YulTypedName",
														"src": "10919:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10930:4:13",
														"nodeType": "YulTypedName",
														"src": "10930:4:13",
														"type": ""
													}
												],
												"src": "10830:236:13"
											},
											{
												"body": {
													"nativeSrc": "11116:61:13",
													"nodeType": "YulBlock",
													"src": "11116:61:13",
													"statements": [
														{
															"nativeSrc": "11126:45:13",
															"nodeType": "YulAssignment",
															"src": "11126:45:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11141:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "11141:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11148:22:13",
																		"nodeType": "YulLiteral",
																		"src": "11148:22:13",
																		"type": "",
																		"value": "0xffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11137:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11137:3:13"
																},
																"nativeSrc": "11137:34:13",
																"nodeType": "YulFunctionCall",
																"src": "11137:34:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "11126:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "11126:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint80",
												"nativeSrc": "11072:105:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11098:5:13",
														"nodeType": "YulTypedName",
														"src": "11098:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "11108:7:13",
														"nodeType": "YulTypedName",
														"src": "11108:7:13",
														"type": ""
													}
												],
												"src": "11072:105:13"
											},
											{
												"body": {
													"nativeSrc": "11225:78:13",
													"nodeType": "YulBlock",
													"src": "11225:78:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "11281:16:13",
																"nodeType": "YulBlock",
																"src": "11281:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11290:1:13",
																					"nodeType": "YulLiteral",
																					"src": "11290:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11293:1:13",
																					"nodeType": "YulLiteral",
																					"src": "11293:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11283:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11283:6:13"
																			},
																			"nativeSrc": "11283:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11283:12:13"
																		},
																		"nativeSrc": "11283:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11283:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11248:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "11248:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11272:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "11272:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint80",
																					"nativeSrc": "11255:16:13",
																					"nodeType": "YulIdentifier",
																					"src": "11255:16:13"
																				},
																				"nativeSrc": "11255:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11255:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "11245:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "11245:2:13"
																		},
																		"nativeSrc": "11245:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11245:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11238:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11238:6:13"
																},
																"nativeSrc": "11238:42:13",
																"nodeType": "YulFunctionCall",
																"src": "11238:42:13"
															},
															"nativeSrc": "11235:62:13",
															"nodeType": "YulIf",
															"src": "11235:62:13"
														}
													]
												},
												"name": "validator_revert_t_uint80",
												"nativeSrc": "11183:120:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11218:5:13",
														"nodeType": "YulTypedName",
														"src": "11218:5:13",
														"type": ""
													}
												],
												"src": "11183:120:13"
											},
											{
												"body": {
													"nativeSrc": "11371:79:13",
													"nodeType": "YulBlock",
													"src": "11371:79:13",
													"statements": [
														{
															"nativeSrc": "11381:22:13",
															"nodeType": "YulAssignment",
															"src": "11381:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11396:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11396:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11390:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "11390:5:13"
																},
																"nativeSrc": "11390:13:13",
																"nodeType": "YulFunctionCall",
																"src": "11390:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11381:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "11381:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11438:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "11438:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint80",
																	"nativeSrc": "11412:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "11412:25:13"
																},
																"nativeSrc": "11412:32:13",
																"nodeType": "YulFunctionCall",
																"src": "11412:32:13"
															},
															"nativeSrc": "11412:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "11412:32:13"
														}
													]
												},
												"name": "abi_decode_t_uint80_fromMemory",
												"nativeSrc": "11309:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11349:6:13",
														"nodeType": "YulTypedName",
														"src": "11349:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11357:3:13",
														"nodeType": "YulTypedName",
														"src": "11357:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11365:5:13",
														"nodeType": "YulTypedName",
														"src": "11365:5:13",
														"type": ""
													}
												],
												"src": "11309:141:13"
											},
											{
												"body": {
													"nativeSrc": "11498:78:13",
													"nodeType": "YulBlock",
													"src": "11498:78:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "11554:16:13",
																"nodeType": "YulBlock",
																"src": "11554:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11563:1:13",
																					"nodeType": "YulLiteral",
																					"src": "11563:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11566:1:13",
																					"nodeType": "YulLiteral",
																					"src": "11566:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11556:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11556:6:13"
																			},
																			"nativeSrc": "11556:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11556:12:13"
																		},
																		"nativeSrc": "11556:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11556:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11521:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "11521:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11545:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "11545:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nativeSrc": "11528:16:13",
																					"nodeType": "YulIdentifier",
																					"src": "11528:16:13"
																				},
																				"nativeSrc": "11528:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11528:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "11518:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "11518:2:13"
																		},
																		"nativeSrc": "11518:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11518:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11511:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11511:6:13"
																},
																"nativeSrc": "11511:42:13",
																"nodeType": "YulFunctionCall",
																"src": "11511:42:13"
															},
															"nativeSrc": "11508:62:13",
															"nodeType": "YulIf",
															"src": "11508:62:13"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nativeSrc": "11456:120:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11491:5:13",
														"nodeType": "YulTypedName",
														"src": "11491:5:13",
														"type": ""
													}
												],
												"src": "11456:120:13"
											},
											{
												"body": {
													"nativeSrc": "11644:79:13",
													"nodeType": "YulBlock",
													"src": "11644:79:13",
													"statements": [
														{
															"nativeSrc": "11654:22:13",
															"nodeType": "YulAssignment",
															"src": "11654:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11669:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11669:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11663:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "11663:5:13"
																},
																"nativeSrc": "11663:13:13",
																"nodeType": "YulFunctionCall",
																"src": "11663:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11654:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "11654:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11711:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "11711:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nativeSrc": "11685:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "11685:25:13"
																},
																"nativeSrc": "11685:32:13",
																"nodeType": "YulFunctionCall",
																"src": "11685:32:13"
															},
															"nativeSrc": "11685:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "11685:32:13"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nativeSrc": "11582:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11622:6:13",
														"nodeType": "YulTypedName",
														"src": "11622:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11630:3:13",
														"nodeType": "YulTypedName",
														"src": "11630:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11638:5:13",
														"nodeType": "YulTypedName",
														"src": "11638:5:13",
														"type": ""
													}
												],
												"src": "11582:141:13"
											},
											{
												"body": {
													"nativeSrc": "11792:80:13",
													"nodeType": "YulBlock",
													"src": "11792:80:13",
													"statements": [
														{
															"nativeSrc": "11802:22:13",
															"nodeType": "YulAssignment",
															"src": "11802:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11817:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11817:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11811:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "11811:5:13"
																},
																"nativeSrc": "11811:13:13",
																"nodeType": "YulFunctionCall",
																"src": "11811:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11802:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "11802:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11860:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "11860:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "11833:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "11833:26:13"
																},
																"nativeSrc": "11833:33:13",
																"nodeType": "YulFunctionCall",
																"src": "11833:33:13"
															},
															"nativeSrc": "11833:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "11833:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "11729:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11770:6:13",
														"nodeType": "YulTypedName",
														"src": "11770:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11778:3:13",
														"nodeType": "YulTypedName",
														"src": "11778:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11786:5:13",
														"nodeType": "YulTypedName",
														"src": "11786:5:13",
														"type": ""
													}
												],
												"src": "11729:143:13"
											},
											{
												"body": {
													"nativeSrc": "12020:829:13",
													"nodeType": "YulBlock",
													"src": "12020:829:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "12067:83:13",
																"nodeType": "YulBlock",
																"src": "12067:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12069:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "12069:77:13"
																			},
																			"nativeSrc": "12069:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12069:79:13"
																		},
																		"nativeSrc": "12069:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "12069:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12041:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "12041:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12050:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12050:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12037:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12037:3:13"
																		},
																		"nativeSrc": "12037:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12037:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12062:3:13",
																		"nodeType": "YulLiteral",
																		"src": "12062:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12033:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12033:3:13"
																},
																"nativeSrc": "12033:33:13",
																"nodeType": "YulFunctionCall",
																"src": "12033:33:13"
															},
															"nativeSrc": "12030:120:13",
															"nodeType": "YulIf",
															"src": "12030:120:13"
														},
														{
															"nativeSrc": "12160:127:13",
															"nodeType": "YulBlock",
															"src": "12160:127:13",
															"statements": [
																{
																	"nativeSrc": "12175:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12175:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12189:1:13",
																		"nodeType": "YulLiteral",
																		"src": "12189:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12179:6:13",
																			"nodeType": "YulTypedName",
																			"src": "12179:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12204:73:13",
																	"nodeType": "YulAssignment",
																	"src": "12204:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12249:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "12249:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12260:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "12260:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12245:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12245:3:13"
																				},
																				"nativeSrc": "12245:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12245:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12269:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "12269:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "12214:30:13",
																			"nodeType": "YulIdentifier",
																			"src": "12214:30:13"
																		},
																		"nativeSrc": "12214:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12214:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12204:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "12204:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12297:128:13",
															"nodeType": "YulBlock",
															"src": "12297:128:13",
															"statements": [
																{
																	"nativeSrc": "12312:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12312:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12326:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12326:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12316:6:13",
																			"nodeType": "YulTypedName",
																			"src": "12316:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12342:73:13",
																	"nodeType": "YulAssignment",
																	"src": "12342:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12387:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "12387:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12398:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "12398:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12383:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12383:3:13"
																				},
																				"nativeSrc": "12383:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12383:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12407:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "12407:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nativeSrc": "12352:30:13",
																			"nodeType": "YulIdentifier",
																			"src": "12352:30:13"
																		},
																		"nativeSrc": "12352:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12352:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12342:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "12342:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12435:129:13",
															"nodeType": "YulBlock",
															"src": "12435:129:13",
															"statements": [
																{
																	"nativeSrc": "12450:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12450:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12464:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12464:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12454:6:13",
																			"nodeType": "YulTypedName",
																			"src": "12454:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12480:74:13",
																	"nodeType": "YulAssignment",
																	"src": "12480:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12526:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "12526:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12537:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "12537:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12522:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12522:3:13"
																				},
																				"nativeSrc": "12522:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12522:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12546:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "12546:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "12490:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "12490:31:13"
																		},
																		"nativeSrc": "12490:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12490:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "12480:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "12480:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12574:129:13",
															"nodeType": "YulBlock",
															"src": "12574:129:13",
															"statements": [
																{
																	"nativeSrc": "12589:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12589:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12603:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12603:2:13",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12593:6:13",
																			"nodeType": "YulTypedName",
																			"src": "12593:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12619:74:13",
																	"nodeType": "YulAssignment",
																	"src": "12619:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12665:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "12665:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12676:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "12676:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12661:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12661:3:13"
																				},
																				"nativeSrc": "12661:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12661:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12685:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "12685:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "12629:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "12629:31:13"
																		},
																		"nativeSrc": "12629:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12629:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "12619:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "12619:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12713:129:13",
															"nodeType": "YulBlock",
															"src": "12713:129:13",
															"statements": [
																{
																	"nativeSrc": "12728:17:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12728:17:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12742:3:13",
																		"nodeType": "YulLiteral",
																		"src": "12742:3:13",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12732:6:13",
																			"nodeType": "YulTypedName",
																			"src": "12732:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12759:73:13",
																	"nodeType": "YulAssignment",
																	"src": "12759:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12804:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "12804:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12815:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "12815:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12800:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12800:3:13"
																				},
																				"nativeSrc": "12800:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12800:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12824:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "12824:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "12769:30:13",
																			"nodeType": "YulIdentifier",
																			"src": "12769:30:13"
																		},
																		"nativeSrc": "12769:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12769:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "12759:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "12759:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nativeSrc": "11878:971:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11958:9:13",
														"nodeType": "YulTypedName",
														"src": "11958:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11969:7:13",
														"nodeType": "YulTypedName",
														"src": "11969:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11981:6:13",
														"nodeType": "YulTypedName",
														"src": "11981:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11989:6:13",
														"nodeType": "YulTypedName",
														"src": "11989:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11997:6:13",
														"nodeType": "YulTypedName",
														"src": "11997:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "12005:6:13",
														"nodeType": "YulTypedName",
														"src": "12005:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "12013:6:13",
														"nodeType": "YulTypedName",
														"src": "12013:6:13",
														"type": ""
													}
												],
												"src": "11878:971:13"
											},
											{
												"body": {
													"nativeSrc": "12883:152:13",
													"nodeType": "YulBlock",
													"src": "12883:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12900:1:13",
																		"nodeType": "YulLiteral",
																		"src": "12900:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12903:77:13",
																		"nodeType": "YulLiteral",
																		"src": "12903:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12893:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12893:6:13"
																},
																"nativeSrc": "12893:88:13",
																"nodeType": "YulFunctionCall",
																"src": "12893:88:13"
															},
															"nativeSrc": "12893:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "12893:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12997:1:13",
																		"nodeType": "YulLiteral",
																		"src": "12997:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13000:4:13",
																		"nodeType": "YulLiteral",
																		"src": "13000:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12990:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12990:6:13"
																},
																"nativeSrc": "12990:15:13",
																"nodeType": "YulFunctionCall",
																"src": "12990:15:13"
															},
															"nativeSrc": "12990:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "12990:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13021:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13021:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13024:4:13",
																		"nodeType": "YulLiteral",
																		"src": "13024:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13014:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13014:6:13"
																},
																"nativeSrc": "13014:15:13",
																"nodeType": "YulFunctionCall",
																"src": "13014:15:13"
															},
															"nativeSrc": "13014:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "13014:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "12855:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "12855:180:13"
											},
											{
												"body": {
													"nativeSrc": "13085:147:13",
													"nodeType": "YulBlock",
													"src": "13085:147:13",
													"statements": [
														{
															"nativeSrc": "13095:25:13",
															"nodeType": "YulAssignment",
															"src": "13095:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13118:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "13118:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13100:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "13100:17:13"
																},
																"nativeSrc": "13100:20:13",
																"nodeType": "YulFunctionCall",
																"src": "13100:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13095:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "13095:1:13"
																}
															]
														},
														{
															"nativeSrc": "13129:25:13",
															"nodeType": "YulAssignment",
															"src": "13129:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13152:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "13152:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13134:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "13134:17:13"
																},
																"nativeSrc": "13134:20:13",
																"nodeType": "YulFunctionCall",
																"src": "13134:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13129:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "13129:1:13"
																}
															]
														},
														{
															"nativeSrc": "13163:16:13",
															"nodeType": "YulAssignment",
															"src": "13163:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13174:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "13174:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13177:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "13177:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13170:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13170:3:13"
																},
																"nativeSrc": "13170:9:13",
																"nodeType": "YulFunctionCall",
																"src": "13170:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13163:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13163:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13203:22:13",
																"nodeType": "YulBlock",
																"src": "13203:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13205:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "13205:16:13"
																			},
																			"nativeSrc": "13205:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "13205:18:13"
																		},
																		"nativeSrc": "13205:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "13205:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13195:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "13195:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13198:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13198:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13192:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "13192:2:13"
																},
																"nativeSrc": "13192:10:13",
																"nodeType": "YulFunctionCall",
																"src": "13192:10:13"
															},
															"nativeSrc": "13189:36:13",
															"nodeType": "YulIf",
															"src": "13189:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "13041:191:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13072:1:13",
														"nodeType": "YulTypedName",
														"src": "13072:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13075:1:13",
														"nodeType": "YulTypedName",
														"src": "13075:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "13081:3:13",
														"nodeType": "YulTypedName",
														"src": "13081:3:13",
														"type": ""
													}
												],
												"src": "13041:191:13"
											},
											{
												"body": {
													"nativeSrc": "13344:61:13",
													"nodeType": "YulBlock",
													"src": "13344:61:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13366:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "13366:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13374:1:13",
																				"nodeType": "YulLiteral",
																				"src": "13374:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13362:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13362:3:13"
																		},
																		"nativeSrc": "13362:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13362:14:13"
																	},
																	{
																		"hexValue": "41756374696f6e2068617320656e646564",
																		"kind": "string",
																		"nativeSrc": "13378:19:13",
																		"nodeType": "YulLiteral",
																		"src": "13378:19:13",
																		"type": "",
																		"value": "Auction has ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13355:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13355:6:13"
																},
																"nativeSrc": "13355:43:13",
																"nodeType": "YulFunctionCall",
																"src": "13355:43:13"
															},
															"nativeSrc": "13355:43:13",
															"nodeType": "YulExpressionStatement",
															"src": "13355:43:13"
														}
													]
												},
												"name": "store_literal_in_memory_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5",
												"nativeSrc": "13238:167:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13336:6:13",
														"nodeType": "YulTypedName",
														"src": "13336:6:13",
														"type": ""
													}
												],
												"src": "13238:167:13"
											},
											{
												"body": {
													"nativeSrc": "13557:220:13",
													"nodeType": "YulBlock",
													"src": "13557:220:13",
													"statements": [
														{
															"nativeSrc": "13567:74:13",
															"nodeType": "YulAssignment",
															"src": "13567:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13633:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13633:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13638:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13638:2:13",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13574:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "13574:58:13"
																},
																"nativeSrc": "13574:67:13",
																"nodeType": "YulFunctionCall",
																"src": "13574:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13567:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13567:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13739:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13739:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5",
																	"nativeSrc": "13650:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "13650:88:13"
																},
																"nativeSrc": "13650:93:13",
																"nodeType": "YulFunctionCall",
																"src": "13650:93:13"
															},
															"nativeSrc": "13650:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "13650:93:13"
														},
														{
															"nativeSrc": "13752:19:13",
															"nodeType": "YulAssignment",
															"src": "13752:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13763:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13763:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13768:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13768:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13759:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13759:3:13"
																},
																"nativeSrc": "13759:12:13",
																"nodeType": "YulFunctionCall",
																"src": "13759:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13752:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13752:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13411:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13545:3:13",
														"nodeType": "YulTypedName",
														"src": "13545:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13553:3:13",
														"nodeType": "YulTypedName",
														"src": "13553:3:13",
														"type": ""
													}
												],
												"src": "13411:366:13"
											},
											{
												"body": {
													"nativeSrc": "13954:248:13",
													"nodeType": "YulBlock",
													"src": "13954:248:13",
													"statements": [
														{
															"nativeSrc": "13964:26:13",
															"nodeType": "YulAssignment",
															"src": "13964:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13976:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "13976:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13987:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13987:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13972:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13972:3:13"
																},
																"nativeSrc": "13972:18:13",
																"nodeType": "YulFunctionCall",
																"src": "13972:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13964:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13964:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14011:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14011:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14022:1:13",
																				"nodeType": "YulLiteral",
																				"src": "14022:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14007:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14007:3:13"
																		},
																		"nativeSrc": "14007:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14007:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14030:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "14030:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14036:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14036:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14026:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14026:3:13"
																		},
																		"nativeSrc": "14026:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14026:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14000:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14000:6:13"
																},
																"nativeSrc": "14000:47:13",
																"nodeType": "YulFunctionCall",
																"src": "14000:47:13"
															},
															"nativeSrc": "14000:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "14000:47:13"
														},
														{
															"nativeSrc": "14056:139:13",
															"nodeType": "YulAssignment",
															"src": "14056:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14190:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "14190:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14064:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "14064:124:13"
																},
																"nativeSrc": "14064:131:13",
																"nodeType": "YulFunctionCall",
																"src": "14064:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14056:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14056:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13783:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13934:9:13",
														"nodeType": "YulTypedName",
														"src": "13934:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13949:4:13",
														"nodeType": "YulTypedName",
														"src": "13949:4:13",
														"type": ""
													}
												],
												"src": "13783:419:13"
											},
											{
												"body": {
													"nativeSrc": "14314:124:13",
													"nodeType": "YulBlock",
													"src": "14314:124:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14336:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "14336:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14344:1:13",
																				"nodeType": "YulLiteral",
																				"src": "14344:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14332:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14332:3:13"
																		},
																		"nativeSrc": "14332:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14332:14:13"
																	},
																	{
																		"hexValue": "426964206d75737420626520686967686572207468616e2063757272656e7420",
																		"kind": "string",
																		"nativeSrc": "14348:34:13",
																		"nodeType": "YulLiteral",
																		"src": "14348:34:13",
																		"type": "",
																		"value": "Bid must be higher than current "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14325:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14325:6:13"
																},
																"nativeSrc": "14325:58:13",
																"nodeType": "YulFunctionCall",
																"src": "14325:58:13"
															},
															"nativeSrc": "14325:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "14325:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14404:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "14404:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14412:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14412:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14400:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14400:3:13"
																		},
																		"nativeSrc": "14400:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14400:15:13"
																	},
																	{
																		"hexValue": "6869676865737420626964",
																		"kind": "string",
																		"nativeSrc": "14417:13:13",
																		"nodeType": "YulLiteral",
																		"src": "14417:13:13",
																		"type": "",
																		"value": "highest bid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14393:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14393:6:13"
																},
																"nativeSrc": "14393:38:13",
																"nodeType": "YulFunctionCall",
																"src": "14393:38:13"
															},
															"nativeSrc": "14393:38:13",
															"nodeType": "YulExpressionStatement",
															"src": "14393:38:13"
														}
													]
												},
												"name": "store_literal_in_memory_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9",
												"nativeSrc": "14208:230:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14306:6:13",
														"nodeType": "YulTypedName",
														"src": "14306:6:13",
														"type": ""
													}
												],
												"src": "14208:230:13"
											},
											{
												"body": {
													"nativeSrc": "14590:220:13",
													"nodeType": "YulBlock",
													"src": "14590:220:13",
													"statements": [
														{
															"nativeSrc": "14600:74:13",
															"nodeType": "YulAssignment",
															"src": "14600:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14666:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14666:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14671:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14671:2:13",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14607:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "14607:58:13"
																},
																"nativeSrc": "14607:67:13",
																"nodeType": "YulFunctionCall",
																"src": "14607:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14600:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14600:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14772:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14772:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9",
																	"nativeSrc": "14683:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "14683:88:13"
																},
																"nativeSrc": "14683:93:13",
																"nodeType": "YulFunctionCall",
																"src": "14683:93:13"
															},
															"nativeSrc": "14683:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "14683:93:13"
														},
														{
															"nativeSrc": "14785:19:13",
															"nodeType": "YulAssignment",
															"src": "14785:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14796:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14796:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14801:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14801:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14792:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14792:3:13"
																},
																"nativeSrc": "14792:12:13",
																"nodeType": "YulFunctionCall",
																"src": "14792:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14785:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14785:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14444:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14578:3:13",
														"nodeType": "YulTypedName",
														"src": "14578:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14586:3:13",
														"nodeType": "YulTypedName",
														"src": "14586:3:13",
														"type": ""
													}
												],
												"src": "14444:366:13"
											},
											{
												"body": {
													"nativeSrc": "14987:248:13",
													"nodeType": "YulBlock",
													"src": "14987:248:13",
													"statements": [
														{
															"nativeSrc": "14997:26:13",
															"nodeType": "YulAssignment",
															"src": "14997:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15009:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "15009:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15020:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15020:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15005:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15005:3:13"
																},
																"nativeSrc": "15005:18:13",
																"nodeType": "YulFunctionCall",
																"src": "15005:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14997:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14997:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15044:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15044:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15055:1:13",
																				"nodeType": "YulLiteral",
																				"src": "15055:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15040:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15040:3:13"
																		},
																		"nativeSrc": "15040:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15040:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15063:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "15063:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15069:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15069:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15059:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15059:3:13"
																		},
																		"nativeSrc": "15059:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15059:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15033:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15033:6:13"
																},
																"nativeSrc": "15033:47:13",
																"nodeType": "YulFunctionCall",
																"src": "15033:47:13"
															},
															"nativeSrc": "15033:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "15033:47:13"
														},
														{
															"nativeSrc": "15089:139:13",
															"nodeType": "YulAssignment",
															"src": "15089:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15223:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "15223:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15097:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "15097:124:13"
																},
																"nativeSrc": "15097:131:13",
																"nodeType": "YulFunctionCall",
																"src": "15097:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15089:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "15089:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14816:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14967:9:13",
														"nodeType": "YulTypedName",
														"src": "14967:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14982:4:13",
														"nodeType": "YulTypedName",
														"src": "14982:4:13",
														"type": ""
													}
												],
												"src": "14816:419:13"
											},
											{
												"body": {
													"nativeSrc": "15347:73:13",
													"nodeType": "YulBlock",
													"src": "15347:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15369:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "15369:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15377:1:13",
																				"nodeType": "YulLiteral",
																				"src": "15377:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15365:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15365:3:13"
																		},
																		"nativeSrc": "15365:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15365:14:13"
																	},
																	{
																		"hexValue": "4f6e6c792061646d696e2063616e206372656174652061756374696f6e",
																		"kind": "string",
																		"nativeSrc": "15381:31:13",
																		"nodeType": "YulLiteral",
																		"src": "15381:31:13",
																		"type": "",
																		"value": "Only admin can create auction"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15358:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15358:6:13"
																},
																"nativeSrc": "15358:55:13",
																"nodeType": "YulFunctionCall",
																"src": "15358:55:13"
															},
															"nativeSrc": "15358:55:13",
															"nodeType": "YulExpressionStatement",
															"src": "15358:55:13"
														}
													]
												},
												"name": "store_literal_in_memory_aba2686a9124fe8a0b5635d6eaed974ab6b8e192a55b06032cc6a3e6c1b368e9",
												"nativeSrc": "15241:179:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15339:6:13",
														"nodeType": "YulTypedName",
														"src": "15339:6:13",
														"type": ""
													}
												],
												"src": "15241:179:13"
											},
											{
												"body": {
													"nativeSrc": "15572:220:13",
													"nodeType": "YulBlock",
													"src": "15572:220:13",
													"statements": [
														{
															"nativeSrc": "15582:74:13",
															"nodeType": "YulAssignment",
															"src": "15582:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15648:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15648:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15653:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15653:2:13",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15589:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "15589:58:13"
																},
																"nativeSrc": "15589:67:13",
																"nodeType": "YulFunctionCall",
																"src": "15589:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15582:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15582:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15754:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15754:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_aba2686a9124fe8a0b5635d6eaed974ab6b8e192a55b06032cc6a3e6c1b368e9",
																	"nativeSrc": "15665:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "15665:88:13"
																},
																"nativeSrc": "15665:93:13",
																"nodeType": "YulFunctionCall",
																"src": "15665:93:13"
															},
															"nativeSrc": "15665:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "15665:93:13"
														},
														{
															"nativeSrc": "15767:19:13",
															"nodeType": "YulAssignment",
															"src": "15767:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15778:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15778:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15783:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15783:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15774:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15774:3:13"
																},
																"nativeSrc": "15774:12:13",
																"nodeType": "YulFunctionCall",
																"src": "15774:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15767:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15767:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_aba2686a9124fe8a0b5635d6eaed974ab6b8e192a55b06032cc6a3e6c1b368e9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15426:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15560:3:13",
														"nodeType": "YulTypedName",
														"src": "15560:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15568:3:13",
														"nodeType": "YulTypedName",
														"src": "15568:3:13",
														"type": ""
													}
												],
												"src": "15426:366:13"
											},
											{
												"body": {
													"nativeSrc": "15969:248:13",
													"nodeType": "YulBlock",
													"src": "15969:248:13",
													"statements": [
														{
															"nativeSrc": "15979:26:13",
															"nodeType": "YulAssignment",
															"src": "15979:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15991:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "15991:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16002:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16002:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15987:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15987:3:13"
																},
																"nativeSrc": "15987:18:13",
																"nodeType": "YulFunctionCall",
																"src": "15987:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15979:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "15979:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16026:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16026:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16037:1:13",
																				"nodeType": "YulLiteral",
																				"src": "16037:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16022:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16022:3:13"
																		},
																		"nativeSrc": "16022:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16022:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16045:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "16045:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16051:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16051:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16041:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16041:3:13"
																		},
																		"nativeSrc": "16041:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16041:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16015:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16015:6:13"
																},
																"nativeSrc": "16015:47:13",
																"nodeType": "YulFunctionCall",
																"src": "16015:47:13"
															},
															"nativeSrc": "16015:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "16015:47:13"
														},
														{
															"nativeSrc": "16071:139:13",
															"nodeType": "YulAssignment",
															"src": "16071:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16205:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "16205:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_aba2686a9124fe8a0b5635d6eaed974ab6b8e192a55b06032cc6a3e6c1b368e9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16079:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "16079:124:13"
																},
																"nativeSrc": "16079:131:13",
																"nodeType": "YulFunctionCall",
																"src": "16079:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16071:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "16071:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_aba2686a9124fe8a0b5635d6eaed974ab6b8e192a55b06032cc6a3e6c1b368e9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15798:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15949:9:13",
														"nodeType": "YulTypedName",
														"src": "15949:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15964:4:13",
														"nodeType": "YulTypedName",
														"src": "15964:4:13",
														"type": ""
													}
												],
												"src": "15798:419:13"
											},
											{
												"body": {
													"nativeSrc": "16329:76:13",
													"nodeType": "YulBlock",
													"src": "16329:76:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16351:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "16351:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16359:1:13",
																				"nodeType": "YulLiteral",
																				"src": "16359:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16347:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16347:3:13"
																		},
																		"nativeSrc": "16347:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16347:14:13"
																	},
																	{
																		"hexValue": "4475726174696f6e206d7573742062652067726561746572207468616e203130",
																		"kind": "string",
																		"nativeSrc": "16363:34:13",
																		"nodeType": "YulLiteral",
																		"src": "16363:34:13",
																		"type": "",
																		"value": "Duration must be greater than 10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16340:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16340:6:13"
																},
																"nativeSrc": "16340:58:13",
																"nodeType": "YulFunctionCall",
																"src": "16340:58:13"
															},
															"nativeSrc": "16340:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "16340:58:13"
														}
													]
												},
												"name": "store_literal_in_memory_425b128ccdf9545481342dcbb6c6ea54c7b1d635720003c70f0b288c94c4874f",
												"nativeSrc": "16223:182:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16321:6:13",
														"nodeType": "YulTypedName",
														"src": "16321:6:13",
														"type": ""
													}
												],
												"src": "16223:182:13"
											},
											{
												"body": {
													"nativeSrc": "16557:220:13",
													"nodeType": "YulBlock",
													"src": "16557:220:13",
													"statements": [
														{
															"nativeSrc": "16567:74:13",
															"nodeType": "YulAssignment",
															"src": "16567:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16633:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16633:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16638:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16638:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16574:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "16574:58:13"
																},
																"nativeSrc": "16574:67:13",
																"nodeType": "YulFunctionCall",
																"src": "16574:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16567:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16567:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16739:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16739:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_425b128ccdf9545481342dcbb6c6ea54c7b1d635720003c70f0b288c94c4874f",
																	"nativeSrc": "16650:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "16650:88:13"
																},
																"nativeSrc": "16650:93:13",
																"nodeType": "YulFunctionCall",
																"src": "16650:93:13"
															},
															"nativeSrc": "16650:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "16650:93:13"
														},
														{
															"nativeSrc": "16752:19:13",
															"nodeType": "YulAssignment",
															"src": "16752:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16763:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16763:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16768:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16768:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16759:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16759:3:13"
																},
																"nativeSrc": "16759:12:13",
																"nodeType": "YulFunctionCall",
																"src": "16759:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16752:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16752:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_425b128ccdf9545481342dcbb6c6ea54c7b1d635720003c70f0b288c94c4874f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16411:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16545:3:13",
														"nodeType": "YulTypedName",
														"src": "16545:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16553:3:13",
														"nodeType": "YulTypedName",
														"src": "16553:3:13",
														"type": ""
													}
												],
												"src": "16411:366:13"
											},
											{
												"body": {
													"nativeSrc": "16954:248:13",
													"nodeType": "YulBlock",
													"src": "16954:248:13",
													"statements": [
														{
															"nativeSrc": "16964:26:13",
															"nodeType": "YulAssignment",
															"src": "16964:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16976:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "16976:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16987:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16987:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16972:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16972:3:13"
																},
																"nativeSrc": "16972:18:13",
																"nodeType": "YulFunctionCall",
																"src": "16972:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16964:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "16964:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17011:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17011:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17022:1:13",
																				"nodeType": "YulLiteral",
																				"src": "17022:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17007:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17007:3:13"
																		},
																		"nativeSrc": "17007:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17007:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17030:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "17030:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17036:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17036:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17026:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17026:3:13"
																		},
																		"nativeSrc": "17026:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17026:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17000:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17000:6:13"
																},
																"nativeSrc": "17000:47:13",
																"nodeType": "YulFunctionCall",
																"src": "17000:47:13"
															},
															"nativeSrc": "17000:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "17000:47:13"
														},
														{
															"nativeSrc": "17056:139:13",
															"nodeType": "YulAssignment",
															"src": "17056:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17190:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "17190:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_425b128ccdf9545481342dcbb6c6ea54c7b1d635720003c70f0b288c94c4874f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17064:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "17064:124:13"
																},
																"nativeSrc": "17064:131:13",
																"nodeType": "YulFunctionCall",
																"src": "17064:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17056:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "17056:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_425b128ccdf9545481342dcbb6c6ea54c7b1d635720003c70f0b288c94c4874f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16783:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16934:9:13",
														"nodeType": "YulTypedName",
														"src": "16934:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16949:4:13",
														"nodeType": "YulTypedName",
														"src": "16949:4:13",
														"type": ""
													}
												],
												"src": "16783:419:13"
											},
											{
												"body": {
													"nativeSrc": "17314:115:13",
													"nodeType": "YulBlock",
													"src": "17314:115:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17336:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "17336:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17344:1:13",
																				"nodeType": "YulLiteral",
																				"src": "17344:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17332:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17332:3:13"
																		},
																		"nativeSrc": "17332:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17332:14:13"
																	},
																	{
																		"hexValue": "5374617274207072696365206d7573742062652067726561746572207468616e",
																		"kind": "string",
																		"nativeSrc": "17348:34:13",
																		"nodeType": "YulLiteral",
																		"src": "17348:34:13",
																		"type": "",
																		"value": "Start price must be greater than"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17325:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17325:6:13"
																},
																"nativeSrc": "17325:58:13",
																"nodeType": "YulFunctionCall",
																"src": "17325:58:13"
															},
															"nativeSrc": "17325:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "17325:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17404:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "17404:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17412:2:13",
																				"nodeType": "YulLiteral",
																				"src": "17412:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17400:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17400:3:13"
																		},
																		"nativeSrc": "17400:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17400:15:13"
																	},
																	{
																		"hexValue": "2030",
																		"kind": "string",
																		"nativeSrc": "17417:4:13",
																		"nodeType": "YulLiteral",
																		"src": "17417:4:13",
																		"type": "",
																		"value": " 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17393:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17393:6:13"
																},
																"nativeSrc": "17393:29:13",
																"nodeType": "YulFunctionCall",
																"src": "17393:29:13"
															},
															"nativeSrc": "17393:29:13",
															"nodeType": "YulExpressionStatement",
															"src": "17393:29:13"
														}
													]
												},
												"name": "store_literal_in_memory_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb",
												"nativeSrc": "17208:221:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17306:6:13",
														"nodeType": "YulTypedName",
														"src": "17306:6:13",
														"type": ""
													}
												],
												"src": "17208:221:13"
											},
											{
												"body": {
													"nativeSrc": "17581:220:13",
													"nodeType": "YulBlock",
													"src": "17581:220:13",
													"statements": [
														{
															"nativeSrc": "17591:74:13",
															"nodeType": "YulAssignment",
															"src": "17591:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17657:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17657:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17662:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17662:2:13",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17598:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "17598:58:13"
																},
																"nativeSrc": "17598:67:13",
																"nodeType": "YulFunctionCall",
																"src": "17598:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17591:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17591:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17763:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17763:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb",
																	"nativeSrc": "17674:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "17674:88:13"
																},
																"nativeSrc": "17674:93:13",
																"nodeType": "YulFunctionCall",
																"src": "17674:93:13"
															},
															"nativeSrc": "17674:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "17674:93:13"
														},
														{
															"nativeSrc": "17776:19:13",
															"nodeType": "YulAssignment",
															"src": "17776:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17787:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17787:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17792:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17792:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17783:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17783:3:13"
																},
																"nativeSrc": "17783:12:13",
																"nodeType": "YulFunctionCall",
																"src": "17783:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17776:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17776:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17435:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17569:3:13",
														"nodeType": "YulTypedName",
														"src": "17569:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17577:3:13",
														"nodeType": "YulTypedName",
														"src": "17577:3:13",
														"type": ""
													}
												],
												"src": "17435:366:13"
											},
											{
												"body": {
													"nativeSrc": "17978:248:13",
													"nodeType": "YulBlock",
													"src": "17978:248:13",
													"statements": [
														{
															"nativeSrc": "17988:26:13",
															"nodeType": "YulAssignment",
															"src": "17988:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18000:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "18000:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18011:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18011:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17996:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17996:3:13"
																},
																"nativeSrc": "17996:18:13",
																"nodeType": "YulFunctionCall",
																"src": "17996:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17988:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "17988:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18035:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18035:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18046:1:13",
																				"nodeType": "YulLiteral",
																				"src": "18046:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18031:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18031:3:13"
																		},
																		"nativeSrc": "18031:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18031:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18054:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "18054:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18060:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18060:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18050:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18050:3:13"
																		},
																		"nativeSrc": "18050:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18050:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18024:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18024:6:13"
																},
																"nativeSrc": "18024:47:13",
																"nodeType": "YulFunctionCall",
																"src": "18024:47:13"
															},
															"nativeSrc": "18024:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "18024:47:13"
														},
														{
															"nativeSrc": "18080:139:13",
															"nodeType": "YulAssignment",
															"src": "18080:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18214:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "18214:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18088:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "18088:124:13"
																},
																"nativeSrc": "18088:131:13",
																"nodeType": "YulFunctionCall",
																"src": "18088:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18080:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "18080:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17807:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17958:9:13",
														"nodeType": "YulTypedName",
														"src": "17958:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17973:4:13",
														"nodeType": "YulTypedName",
														"src": "17973:4:13",
														"type": ""
													}
												],
												"src": "17807:419:13"
											},
											{
												"body": {
													"nativeSrc": "18358:206:13",
													"nodeType": "YulBlock",
													"src": "18358:206:13",
													"statements": [
														{
															"nativeSrc": "18368:26:13",
															"nodeType": "YulAssignment",
															"src": "18368:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18380:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "18380:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18391:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18391:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18376:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18376:3:13"
																},
																"nativeSrc": "18376:18:13",
																"nodeType": "YulFunctionCall",
																"src": "18376:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18368:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "18368:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18448:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "18448:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18461:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18461:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18472:1:13",
																				"nodeType": "YulLiteral",
																				"src": "18472:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18457:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18457:3:13"
																		},
																		"nativeSrc": "18457:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18457:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18404:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "18404:43:13"
																},
																"nativeSrc": "18404:71:13",
																"nodeType": "YulFunctionCall",
																"src": "18404:71:13"
															},
															"nativeSrc": "18404:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "18404:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18529:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "18529:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18542:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18542:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18553:2:13",
																				"nodeType": "YulLiteral",
																				"src": "18553:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18538:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18538:3:13"
																		},
																		"nativeSrc": "18538:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18538:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18485:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "18485:43:13"
																},
																"nativeSrc": "18485:72:13",
																"nodeType": "YulFunctionCall",
																"src": "18485:72:13"
															},
															"nativeSrc": "18485:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "18485:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "18232:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18322:9:13",
														"nodeType": "YulTypedName",
														"src": "18322:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18334:6:13",
														"nodeType": "YulTypedName",
														"src": "18334:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18342:6:13",
														"nodeType": "YulTypedName",
														"src": "18342:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18353:4:13",
														"nodeType": "YulTypedName",
														"src": "18353:4:13",
														"type": ""
													}
												],
												"src": "18232:332:13"
											},
											{
												"body": {
													"nativeSrc": "18613:190:13",
													"nodeType": "YulBlock",
													"src": "18613:190:13",
													"statements": [
														{
															"nativeSrc": "18623:33:13",
															"nodeType": "YulAssignment",
															"src": "18623:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18650:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "18650:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18632:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "18632:17:13"
																},
																"nativeSrc": "18632:24:13",
																"nodeType": "YulFunctionCall",
																"src": "18632:24:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "18623:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "18623:5:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18746:22:13",
																"nodeType": "YulBlock",
																"src": "18746:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18748:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "18748:16:13"
																			},
																			"nativeSrc": "18748:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "18748:18:13"
																		},
																		"nativeSrc": "18748:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "18748:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18671:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "18671:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18678:66:13",
																		"nodeType": "YulLiteral",
																		"src": "18678:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "18668:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "18668:2:13"
																},
																"nativeSrc": "18668:77:13",
																"nodeType": "YulFunctionCall",
																"src": "18668:77:13"
															},
															"nativeSrc": "18665:103:13",
															"nodeType": "YulIf",
															"src": "18665:103:13"
														},
														{
															"nativeSrc": "18777:20:13",
															"nodeType": "YulAssignment",
															"src": "18777:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18788:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "18788:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18795:1:13",
																		"nodeType": "YulLiteral",
																		"src": "18795:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18784:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18784:3:13"
																},
																"nativeSrc": "18784:13:13",
																"nodeType": "YulFunctionCall",
																"src": "18784:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "18777:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18777:3:13"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "18570:233:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18599:5:13",
														"nodeType": "YulTypedName",
														"src": "18599:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "18609:3:13",
														"nodeType": "YulTypedName",
														"src": "18609:3:13",
														"type": ""
													}
												],
												"src": "18570:233:13"
											},
											{
												"body": {
													"nativeSrc": "18963:288:13",
													"nodeType": "YulBlock",
													"src": "18963:288:13",
													"statements": [
														{
															"nativeSrc": "18973:26:13",
															"nodeType": "YulAssignment",
															"src": "18973:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18985:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "18985:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18996:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18996:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18981:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18981:3:13"
																},
																"nativeSrc": "18981:18:13",
																"nodeType": "YulFunctionCall",
																"src": "18981:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18973:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "18973:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19053:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19053:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19066:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19066:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19077:1:13",
																				"nodeType": "YulLiteral",
																				"src": "19077:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19062:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19062:3:13"
																		},
																		"nativeSrc": "19062:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19062:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19009:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "19009:43:13"
																},
																"nativeSrc": "19009:71:13",
																"nodeType": "YulFunctionCall",
																"src": "19009:71:13"
															},
															"nativeSrc": "19009:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "19009:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19134:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19134:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19147:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19147:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19158:2:13",
																				"nodeType": "YulLiteral",
																				"src": "19158:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19143:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19143:3:13"
																		},
																		"nativeSrc": "19143:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19143:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19090:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "19090:43:13"
																},
																"nativeSrc": "19090:72:13",
																"nodeType": "YulFunctionCall",
																"src": "19090:72:13"
															},
															"nativeSrc": "19090:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "19090:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "19216:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19216:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19229:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19229:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19240:2:13",
																				"nodeType": "YulLiteral",
																				"src": "19240:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19225:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19225:3:13"
																		},
																		"nativeSrc": "19225:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19225:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19172:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "19172:43:13"
																},
																"nativeSrc": "19172:72:13",
																"nodeType": "YulFunctionCall",
																"src": "19172:72:13"
															},
															"nativeSrc": "19172:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "19172:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "18809:442:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18919:9:13",
														"nodeType": "YulTypedName",
														"src": "18919:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18931:6:13",
														"nodeType": "YulTypedName",
														"src": "18931:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18939:6:13",
														"nodeType": "YulTypedName",
														"src": "18939:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18947:6:13",
														"nodeType": "YulTypedName",
														"src": "18947:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18958:4:13",
														"nodeType": "YulTypedName",
														"src": "18958:4:13",
														"type": ""
													}
												],
												"src": "18809:442:13"
											},
											{
												"body": {
													"nativeSrc": "19363:66:13",
													"nodeType": "YulBlock",
													"src": "19363:66:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19385:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "19385:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19393:1:13",
																				"nodeType": "YulLiteral",
																				"src": "19393:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19381:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19381:3:13"
																		},
																		"nativeSrc": "19381:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19381:14:13"
																	},
																	{
																		"hexValue": "4f6e6c792061646d696e2063616e2075706772616465",
																		"kind": "string",
																		"nativeSrc": "19397:24:13",
																		"nodeType": "YulLiteral",
																		"src": "19397:24:13",
																		"type": "",
																		"value": "Only admin can upgrade"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19374:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19374:6:13"
																},
																"nativeSrc": "19374:48:13",
																"nodeType": "YulFunctionCall",
																"src": "19374:48:13"
															},
															"nativeSrc": "19374:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "19374:48:13"
														}
													]
												},
												"name": "store_literal_in_memory_ec4db7c12adfeafed8f2b8a0ed8eb5e16dffad32197807f360486a7cc4cdb582",
												"nativeSrc": "19257:172:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19355:6:13",
														"nodeType": "YulTypedName",
														"src": "19355:6:13",
														"type": ""
													}
												],
												"src": "19257:172:13"
											},
											{
												"body": {
													"nativeSrc": "19581:220:13",
													"nodeType": "YulBlock",
													"src": "19581:220:13",
													"statements": [
														{
															"nativeSrc": "19591:74:13",
															"nodeType": "YulAssignment",
															"src": "19591:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19657:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19657:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19662:2:13",
																		"nodeType": "YulLiteral",
																		"src": "19662:2:13",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19598:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "19598:58:13"
																},
																"nativeSrc": "19598:67:13",
																"nodeType": "YulFunctionCall",
																"src": "19598:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19591:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19591:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19763:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19763:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ec4db7c12adfeafed8f2b8a0ed8eb5e16dffad32197807f360486a7cc4cdb582",
																	"nativeSrc": "19674:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "19674:88:13"
																},
																"nativeSrc": "19674:93:13",
																"nodeType": "YulFunctionCall",
																"src": "19674:93:13"
															},
															"nativeSrc": "19674:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "19674:93:13"
														},
														{
															"nativeSrc": "19776:19:13",
															"nodeType": "YulAssignment",
															"src": "19776:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19787:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19787:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19792:2:13",
																		"nodeType": "YulLiteral",
																		"src": "19792:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19783:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19783:3:13"
																},
																"nativeSrc": "19783:12:13",
																"nodeType": "YulFunctionCall",
																"src": "19783:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19776:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19776:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ec4db7c12adfeafed8f2b8a0ed8eb5e16dffad32197807f360486a7cc4cdb582_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19435:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19569:3:13",
														"nodeType": "YulTypedName",
														"src": "19569:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19577:3:13",
														"nodeType": "YulTypedName",
														"src": "19577:3:13",
														"type": ""
													}
												],
												"src": "19435:366:13"
											},
											{
												"body": {
													"nativeSrc": "19978:248:13",
													"nodeType": "YulBlock",
													"src": "19978:248:13",
													"statements": [
														{
															"nativeSrc": "19988:26:13",
															"nodeType": "YulAssignment",
															"src": "19988:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20000:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "20000:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20011:2:13",
																		"nodeType": "YulLiteral",
																		"src": "20011:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19996:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19996:3:13"
																},
																"nativeSrc": "19996:18:13",
																"nodeType": "YulFunctionCall",
																"src": "19996:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19988:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "19988:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20035:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "20035:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20046:1:13",
																				"nodeType": "YulLiteral",
																				"src": "20046:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20031:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20031:3:13"
																		},
																		"nativeSrc": "20031:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20031:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20054:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "20054:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20060:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "20060:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20050:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20050:3:13"
																		},
																		"nativeSrc": "20050:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20050:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20024:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20024:6:13"
																},
																"nativeSrc": "20024:47:13",
																"nodeType": "YulFunctionCall",
																"src": "20024:47:13"
															},
															"nativeSrc": "20024:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "20024:47:13"
														},
														{
															"nativeSrc": "20080:139:13",
															"nodeType": "YulAssignment",
															"src": "20080:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20214:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "20214:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ec4db7c12adfeafed8f2b8a0ed8eb5e16dffad32197807f360486a7cc4cdb582_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20088:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "20088:124:13"
																},
																"nativeSrc": "20088:131:13",
																"nodeType": "YulFunctionCall",
																"src": "20088:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20080:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "20080:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ec4db7c12adfeafed8f2b8a0ed8eb5e16dffad32197807f360486a7cc4cdb582__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19807:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19958:9:13",
														"nodeType": "YulTypedName",
														"src": "19958:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19973:4:13",
														"nodeType": "YulTypedName",
														"src": "19973:4:13",
														"type": ""
													}
												],
												"src": "19807:419:13"
											},
											{
												"body": {
													"nativeSrc": "20275:79:13",
													"nodeType": "YulBlock",
													"src": "20275:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "20332:16:13",
																"nodeType": "YulBlock",
																"src": "20332:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "20341:1:13",
																					"nodeType": "YulLiteral",
																					"src": "20341:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "20344:1:13",
																					"nodeType": "YulLiteral",
																					"src": "20344:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "20334:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "20334:6:13"
																			},
																			"nativeSrc": "20334:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "20334:12:13"
																		},
																		"nativeSrc": "20334:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "20334:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "20298:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "20298:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "20323:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "20323:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "20305:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "20305:17:13"
																				},
																				"nativeSrc": "20305:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "20305:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "20295:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "20295:2:13"
																		},
																		"nativeSrc": "20295:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20295:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "20288:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20288:6:13"
																},
																"nativeSrc": "20288:43:13",
																"nodeType": "YulFunctionCall",
																"src": "20288:43:13"
															},
															"nativeSrc": "20285:63:13",
															"nodeType": "YulIf",
															"src": "20285:63:13"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "20232:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20268:5:13",
														"nodeType": "YulTypedName",
														"src": "20268:5:13",
														"type": ""
													}
												],
												"src": "20232:122:13"
											},
											{
												"body": {
													"nativeSrc": "20423:80:13",
													"nodeType": "YulBlock",
													"src": "20423:80:13",
													"statements": [
														{
															"nativeSrc": "20433:22:13",
															"nodeType": "YulAssignment",
															"src": "20433:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "20448:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "20448:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "20442:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "20442:5:13"
																},
																"nativeSrc": "20442:13:13",
																"nodeType": "YulFunctionCall",
																"src": "20442:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "20433:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "20433:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20491:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "20491:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "20464:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "20464:26:13"
																},
																"nativeSrc": "20464:33:13",
																"nodeType": "YulFunctionCall",
																"src": "20464:33:13"
															},
															"nativeSrc": "20464:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "20464:33:13"
														}
													]
												},
												"name": "abi_decode_t_bytes32_fromMemory",
												"nativeSrc": "20360:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "20401:6:13",
														"nodeType": "YulTypedName",
														"src": "20401:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "20409:3:13",
														"nodeType": "YulTypedName",
														"src": "20409:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "20417:5:13",
														"nodeType": "YulTypedName",
														"src": "20417:5:13",
														"type": ""
													}
												],
												"src": "20360:143:13"
											},
											{
												"body": {
													"nativeSrc": "20586:274:13",
													"nodeType": "YulBlock",
													"src": "20586:274:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "20632:83:13",
																"nodeType": "YulBlock",
																"src": "20632:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "20634:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "20634:77:13"
																			},
																			"nativeSrc": "20634:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "20634:79:13"
																		},
																		"nativeSrc": "20634:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "20634:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20607:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "20607:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20616:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "20616:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20603:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20603:3:13"
																		},
																		"nativeSrc": "20603:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20603:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20628:2:13",
																		"nodeType": "YulLiteral",
																		"src": "20628:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "20599:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20599:3:13"
																},
																"nativeSrc": "20599:32:13",
																"nodeType": "YulFunctionCall",
																"src": "20599:32:13"
															},
															"nativeSrc": "20596:119:13",
															"nodeType": "YulIf",
															"src": "20596:119:13"
														},
														{
															"nativeSrc": "20725:128:13",
															"nodeType": "YulBlock",
															"src": "20725:128:13",
															"statements": [
																{
																	"nativeSrc": "20740:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "20740:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "20754:1:13",
																		"nodeType": "YulLiteral",
																		"src": "20754:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "20744:6:13",
																			"nodeType": "YulTypedName",
																			"src": "20744:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "20769:74:13",
																	"nodeType": "YulAssignment",
																	"src": "20769:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "20815:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "20815:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "20826:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "20826:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "20811:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "20811:3:13"
																				},
																				"nativeSrc": "20811:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "20811:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20835:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "20835:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32_fromMemory",
																			"nativeSrc": "20779:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "20779:31:13"
																		},
																		"nativeSrc": "20779:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20779:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "20769:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "20769:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "20509:351:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20556:9:13",
														"nodeType": "YulTypedName",
														"src": "20556:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "20567:7:13",
														"nodeType": "YulTypedName",
														"src": "20567:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "20579:6:13",
														"nodeType": "YulTypedName",
														"src": "20579:6:13",
														"type": ""
													}
												],
												"src": "20509:351:13"
											},
											{
												"body": {
													"nativeSrc": "20924:40:13",
													"nodeType": "YulBlock",
													"src": "20924:40:13",
													"statements": [
														{
															"nativeSrc": "20935:22:13",
															"nodeType": "YulAssignment",
															"src": "20935:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20951:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "20951:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "20945:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "20945:5:13"
																},
																"nativeSrc": "20945:12:13",
																"nodeType": "YulFunctionCall",
																"src": "20945:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "20935:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20935:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "20866:98:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20907:5:13",
														"nodeType": "YulTypedName",
														"src": "20907:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "20917:6:13",
														"nodeType": "YulTypedName",
														"src": "20917:6:13",
														"type": ""
													}
												],
												"src": "20866:98:13"
											},
											{
												"body": {
													"nativeSrc": "21083:34:13",
													"nodeType": "YulBlock",
													"src": "21083:34:13",
													"statements": [
														{
															"nativeSrc": "21093:18:13",
															"nodeType": "YulAssignment",
															"src": "21093:18:13",
															"value": {
																"name": "pos",
																"nativeSrc": "21108:3:13",
																"nodeType": "YulIdentifier",
																"src": "21108:3:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "21093:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "21093:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "20970:147:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21055:3:13",
														"nodeType": "YulTypedName",
														"src": "21055:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "21060:6:13",
														"nodeType": "YulTypedName",
														"src": "21060:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "21071:11:13",
														"nodeType": "YulTypedName",
														"src": "21071:11:13",
														"type": ""
													}
												],
												"src": "20970:147:13"
											},
											{
												"body": {
													"nativeSrc": "21231:278:13",
													"nodeType": "YulBlock",
													"src": "21231:278:13",
													"statements": [
														{
															"nativeSrc": "21241:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "21241:52:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21287:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "21287:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "21255:31:13",
																	"nodeType": "YulIdentifier",
																	"src": "21255:31:13"
																},
																"nativeSrc": "21255:38:13",
																"nodeType": "YulFunctionCall",
																"src": "21255:38:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "21245:6:13",
																	"nodeType": "YulTypedName",
																	"src": "21245:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "21302:95:13",
															"nodeType": "YulAssignment",
															"src": "21302:95:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21385:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "21385:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21390:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "21390:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "21309:75:13",
																	"nodeType": "YulIdentifier",
																	"src": "21309:75:13"
																},
																"nativeSrc": "21309:88:13",
																"nodeType": "YulFunctionCall",
																"src": "21309:88:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21302:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21302:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "21445:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "21445:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21452:4:13",
																				"nodeType": "YulLiteral",
																				"src": "21452:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21441:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21441:3:13"
																		},
																		"nativeSrc": "21441:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21441:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "21459:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "21459:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21464:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "21464:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "21406:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "21406:34:13"
																},
																"nativeSrc": "21406:65:13",
																"nodeType": "YulFunctionCall",
																"src": "21406:65:13"
															},
															"nativeSrc": "21406:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "21406:65:13"
														},
														{
															"nativeSrc": "21480:23:13",
															"nodeType": "YulAssignment",
															"src": "21480:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21491:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "21491:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21496:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "21496:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21487:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21487:3:13"
																},
																"nativeSrc": "21487:16:13",
																"nodeType": "YulFunctionCall",
																"src": "21487:16:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21480:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21480:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "21123:386:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21212:5:13",
														"nodeType": "YulTypedName",
														"src": "21212:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "21219:3:13",
														"nodeType": "YulTypedName",
														"src": "21219:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21227:3:13",
														"nodeType": "YulTypedName",
														"src": "21227:3:13",
														"type": ""
													}
												],
												"src": "21123:386:13"
											},
											{
												"body": {
													"nativeSrc": "21649:137:13",
													"nodeType": "YulBlock",
													"src": "21649:137:13",
													"statements": [
														{
															"nativeSrc": "21660:100:13",
															"nodeType": "YulAssignment",
															"src": "21660:100:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21747:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "21747:6:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "21756:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "21756:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "21667:79:13",
																	"nodeType": "YulIdentifier",
																	"src": "21667:79:13"
																},
																"nativeSrc": "21667:93:13",
																"nodeType": "YulFunctionCall",
																"src": "21667:93:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21660:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21660:3:13"
																}
															]
														},
														{
															"nativeSrc": "21770:10:13",
															"nodeType": "YulAssignment",
															"src": "21770:10:13",
															"value": {
																"name": "pos",
																"nativeSrc": "21777:3:13",
																"nodeType": "YulIdentifier",
																"src": "21777:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21770:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21770:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "21515:271:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21628:3:13",
														"nodeType": "YulTypedName",
														"src": "21628:3:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21634:6:13",
														"nodeType": "YulTypedName",
														"src": "21634:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21645:3:13",
														"nodeType": "YulTypedName",
														"src": "21645:3:13",
														"type": ""
													}
												],
												"src": "21515:271:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_address__fromStack_reversed(headStart , value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 320)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_address_to_t_address_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value8,  add(headStart, 256))\n\n        abi_encode_t_address_to_t_address_fromStack(value9,  add(headStart, 288))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Auction has ended\")\n\n    }\n\n    function abi_encode_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Bid must be higher than current \")\n\n        mstore(add(memPtr, 32), \"highest bid\")\n\n    }\n\n    function abi_encode_t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_aba2686a9124fe8a0b5635d6eaed974ab6b8e192a55b06032cc6a3e6c1b368e9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only admin can create auction\")\n\n    }\n\n    function abi_encode_t_stringliteral_aba2686a9124fe8a0b5635d6eaed974ab6b8e192a55b06032cc6a3e6c1b368e9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_aba2686a9124fe8a0b5635d6eaed974ab6b8e192a55b06032cc6a3e6c1b368e9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_aba2686a9124fe8a0b5635d6eaed974ab6b8e192a55b06032cc6a3e6c1b368e9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_aba2686a9124fe8a0b5635d6eaed974ab6b8e192a55b06032cc6a3e6c1b368e9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_425b128ccdf9545481342dcbb6c6ea54c7b1d635720003c70f0b288c94c4874f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Duration must be greater than 10\")\n\n    }\n\n    function abi_encode_t_stringliteral_425b128ccdf9545481342dcbb6c6ea54c7b1d635720003c70f0b288c94c4874f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_425b128ccdf9545481342dcbb6c6ea54c7b1d635720003c70f0b288c94c4874f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_425b128ccdf9545481342dcbb6c6ea54c7b1d635720003c70f0b288c94c4874f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_425b128ccdf9545481342dcbb6c6ea54c7b1d635720003c70f0b288c94c4874f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Start price must be greater than\")\n\n        mstore(add(memPtr, 32), \" 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_ec4db7c12adfeafed8f2b8a0ed8eb5e16dffad32197807f360486a7cc4cdb582(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only admin can upgrade\")\n\n    }\n\n    function abi_encode_t_stringliteral_ec4db7c12adfeafed8f2b8a0ed8eb5e16dffad32197807f360486a7cc4cdb582_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_ec4db7c12adfeafed8f2b8a0ed8eb5e16dffad32197807f360486a7cc4cdb582(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ec4db7c12adfeafed8f2b8a0ed8eb5e16dffad32197807f360486a7cc4cdb582__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ec4db7c12adfeafed8f2b8a0ed8eb5e16dffad32197807f360486a7cc4cdb582_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"333": [
									{
										"length": 32,
										"start": 3615
									},
									{
										"length": 32,
										"start": 3700
									},
									{
										"length": 32,
										"start": 4277
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106100aa575f3560e01c8063ad3cb1cc11610063578063ad3cb1cc146101a8578063ad6561ec146101d2578063b1cb48ef146101ee578063b9a2de3a14610216578063f851a4401461023e578063fc52848214610268576100b1565b80634f1ef286146100b557806352d1902d146100d1578063571a26a0146100fb578063724e78da146101405780638129fc1c146101685780638e15f4731461017e576100b1565b366100b157005b5f5ffd5b6100cf60048036038101906100ca9190611641565b610292565b005b3480156100dc575f5ffd5b506100e56102b1565b6040516100f291906116b3565b60405180910390f35b348015610106575f5ffd5b50610121600480360381019061011c91906116ff565b6102e2565b6040516101379a99989796959493929190611762565b60405180910390f35b34801561014b575f5ffd5b50610166600480360381019061016191906117fc565b6103ba565b005b348015610173575f5ffd5b5061017c6103fd565b005b348015610189575f5ffd5b506101926105b4565b60405161019f919061183f565b60405180910390f35b3480156101b3575f5ffd5b506101bc61065d565b6040516101c991906118b8565b60405180910390f35b6101ec60048036038101906101e791906118d8565b610696565b005b3480156101f9575f5ffd5b50610214600480360381019061020f9190611928565b610897565b005b348015610221575f5ffd5b5061023c600480360381019061023791906116ff565b610c50565b005b348015610249575f5ffd5b50610252610df2565b60405161025f919061198c565b60405180910390f35b348015610273575f5ffd5b5061027c610e17565b60405161028991906119a5565b60405180910390f35b61029a610e1d565b6102a382610f03565b6102ad8282610f95565b5050565b5f6102ba6110b3565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b905090565b5f602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806003015490806004015490806005015490806006015f9054906101000a900460ff16908060060160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806007015490806008015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508a565b8060035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f61040661113a565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f5f8267ffffffffffffffff1614801561044e5750825b90505f60018367ffffffffffffffff1614801561048157505f3073ffffffffffffffffffffffffffffffffffffffff163b145b90508115801561048f575080155b156104c6576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610513576001855f0160086101000a81548160ff0219169083151502179055505b3360025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083156105ad575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516105a49190611a13565b60405180910390a15b5050505050565b5f5f5f5f5f5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610624573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106489190611aa9565b94509450945094509450839550505050505090565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b5f5f5f8581526020019081526020015f2090505f15155f5f8681526020019081526020015f206006015f9054906101000a900460ff1615151480156106ed5750806003015481600501546106ea9190611b4d565b42105b61072c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072390611bca565b60405180910390fd5b8060070154341180156107425750806004015434115b610781576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077890611c58565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168160060160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610845578060060160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc826007015490811502906040515f60405180830381858888f19350505050158015610843573d5f5f3e3d5ffd5b505b338160060160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034816007018190555050505050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610926576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091d90611cc0565b60405180910390fd5b600a84101561096a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096190611d28565b60405180910390fd5b5f83116109ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a390611db6565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663095ea7b330836040518363ffffffff1660e01b81526004016109e7929190611dd4565b5f604051808303815f87803b1580156109fe575f5ffd5b505af1158015610a10573d5f5f3e3d5ffd5b505050506040518061014001604052808373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020014281526020015f151581526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff168152505f5f60015481526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a0820151816005015560c0820151816006015f6101000a81548160ff02191690831515021790555060e08201518160060160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101008201518160070155610120820151816008015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505060015f815480929190610c4590611dfb565b919050555050505050565b5f5f5f8381526020019081526020015f2090505f1515816006015f9054906101000a900460ff16151514610cb9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb090611bca565b60405180910390fd5b805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360060160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600101546040518463ffffffff1660e01b8152600401610d6193929190611e42565b5f604051808303815f87803b158015610d78575f5ffd5b505af1158015610d8a573d5f5f3e3d5ffd5b505050503073ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f19350505050158015610dd1573d5f5f3e3d5ffd5b506001816006015f6101000a81548160ff0219169083151502179055505050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161480610eca57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610eb161114d565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610f01576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8990611ec1565b60405180910390fd5b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610ffd57506040513d601f19601f82011682018060405250810190610ffa9190611f09565b60015b61103e57816040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401611035919061198c565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b81146110a457806040517faa1d49a400000000000000000000000000000000000000000000000000000000815260040161109b91906116b3565b60405180910390fd5b6110ae83836111a0565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614611138576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f5f611144611212565b90508091505090565b5f6111797f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b61123b565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6111a982611244565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25f81511115611205576111ff828261130d565b5061120e565b61120d61138d565b5b5050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005f1b905090565b5f819050919050565b5f8173ffffffffffffffffffffffffffffffffffffffff163b0361129f57806040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401611296919061198c565b60405180910390fd5b806112cb7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b61123b565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60605f5f8473ffffffffffffffffffffffffffffffffffffffff16846040516113369190611f78565b5f60405180830381855af49150503d805f811461136e576040519150601f19603f3d011682016040523d82523d5f602084013e611373565b606091505b50915091506113838583836113c9565b9250505092915050565b5f3411156113c7576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6060826113de576113d982611456565b61144e565b5f825114801561140457505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561144657836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161143d919061198c565b60405180910390fd5b81905061144f565b5b9392505050565b5f815111156114685780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f604051905090565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6114d4826114ab565b9050919050565b6114e4816114ca565b81146114ee575f5ffd5b50565b5f813590506114ff816114db565b92915050565b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6115538261150d565b810181811067ffffffffffffffff821117156115725761157161151d565b5b80604052505050565b5f61158461149a565b9050611590828261154a565b919050565b5f67ffffffffffffffff8211156115af576115ae61151d565b5b6115b88261150d565b9050602081019050919050565b828183375f83830152505050565b5f6115e56115e084611595565b61157b565b90508281526020810184848401111561160157611600611509565b5b61160c8482856115c5565b509392505050565b5f82601f83011261162857611627611505565b5b81356116388482602086016115d3565b91505092915050565b5f5f60408385031215611657576116566114a3565b5b5f611664858286016114f1565b925050602083013567ffffffffffffffff811115611685576116846114a7565b5b61169185828601611614565b9150509250929050565b5f819050919050565b6116ad8161169b565b82525050565b5f6020820190506116c65f8301846116a4565b92915050565b5f819050919050565b6116de816116cc565b81146116e8575f5ffd5b50565b5f813590506116f9816116d5565b92915050565b5f60208284031215611714576117136114a3565b5b5f611721848285016116eb565b91505092915050565b611733816114ca565b82525050565b611742816116cc565b82525050565b5f8115159050919050565b61175c81611748565b82525050565b5f610140820190506117765f83018d61172a565b611783602083018c611739565b611790604083018b61172a565b61179d606083018a611739565b6117aa6080830189611739565b6117b760a0830188611739565b6117c460c0830187611753565b6117d160e083018661172a565b6117df610100830185611739565b6117ed61012083018461172a565b9b9a5050505050505050505050565b5f60208284031215611811576118106114a3565b5b5f61181e848285016114f1565b91505092915050565b5f819050919050565b61183981611827565b82525050565b5f6020820190506118525f830184611830565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f61188a82611858565b6118948185611862565b93506118a4818560208601611872565b6118ad8161150d565b840191505092915050565b5f6020820190508181035f8301526118d08184611880565b905092915050565b5f5f5f606084860312156118ef576118ee6114a3565b5b5f6118fc868287016116eb565b935050602061190d868287016116eb565b925050604061191e868287016114f1565b9150509250925092565b5f5f5f5f608085870312156119405761193f6114a3565b5b5f61194d878288016116eb565b945050602061195e878288016116eb565b935050604061196f878288016114f1565b9250506060611980878288016116eb565b91505092959194509250565b5f60208201905061199f5f83018461172a565b92915050565b5f6020820190506119b85f830184611739565b92915050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f6119fd6119f86119f3846119be565b6119da565b6119c7565b9050919050565b611a0d816119e3565b82525050565b5f602082019050611a265f830184611a04565b92915050565b5f69ffffffffffffffffffff82169050919050565b611a4a81611a2c565b8114611a54575f5ffd5b50565b5f81519050611a6581611a41565b92915050565b611a7481611827565b8114611a7e575f5ffd5b50565b5f81519050611a8f81611a6b565b92915050565b5f81519050611aa3816116d5565b92915050565b5f5f5f5f5f60a08688031215611ac257611ac16114a3565b5b5f611acf88828901611a57565b9550506020611ae088828901611a81565b9450506040611af188828901611a95565b9350506060611b0288828901611a95565b9250506080611b1388828901611a57565b9150509295509295909350565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611b57826116cc565b9150611b62836116cc565b9250828201905080821115611b7a57611b79611b20565b5b92915050565b7f41756374696f6e2068617320656e6465640000000000000000000000000000005f82015250565b5f611bb4601183611862565b9150611bbf82611b80565b602082019050919050565b5f6020820190508181035f830152611be181611ba8565b9050919050565b7f426964206d75737420626520686967686572207468616e2063757272656e74205f8201527f6869676865737420626964000000000000000000000000000000000000000000602082015250565b5f611c42602b83611862565b9150611c4d82611be8565b604082019050919050565b5f6020820190508181035f830152611c6f81611c36565b9050919050565b7f4f6e6c792061646d696e2063616e206372656174652061756374696f6e0000005f82015250565b5f611caa601d83611862565b9150611cb582611c76565b602082019050919050565b5f6020820190508181035f830152611cd781611c9e565b9050919050565b7f4475726174696f6e206d7573742062652067726561746572207468616e2031305f82015250565b5f611d12602083611862565b9150611d1d82611cde565b602082019050919050565b5f6020820190508181035f830152611d3f81611d06565b9050919050565b7f5374617274207072696365206d7573742062652067726561746572207468616e5f8201527f2030000000000000000000000000000000000000000000000000000000000000602082015250565b5f611da0602283611862565b9150611dab82611d46565b604082019050919050565b5f6020820190508181035f830152611dcd81611d94565b9050919050565b5f604082019050611de75f83018561172a565b611df46020830184611739565b9392505050565b5f611e05826116cc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611e3757611e36611b20565b5b600182019050919050565b5f606082019050611e555f83018661172a565b611e62602083018561172a565b611e6f6040830184611739565b949350505050565b7f4f6e6c792061646d696e2063616e2075706772616465000000000000000000005f82015250565b5f611eab601683611862565b9150611eb682611e77565b602082019050919050565b5f6020820190508181035f830152611ed881611e9f565b9050919050565b611ee88161169b565b8114611ef2575f5ffd5b50565b5f81519050611f0381611edf565b92915050565b5f60208284031215611f1e57611f1d6114a3565b5b5f611f2b84828501611ef5565b91505092915050565b5f81519050919050565b5f81905092915050565b5f611f5282611f34565b611f5c8185611f3e565b9350611f6c818560208601611872565b80840191505092915050565b5f611f838284611f48565b91508190509291505056fea26469706673582212203f8b5e75a0e05498b3f0690f8b1f78f0ffb03d3fae1be763d5740c0264b5c45c64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xAA JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xAD6561EC EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0xB1CB48EF EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0xB9A2DE3A EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0xFC528482 EQ PUSH2 0x268 JUMPI PUSH2 0xB1 JUMP JUMPDEST DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x571A26A0 EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0x724E78DA EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x8E15F473 EQ PUSH2 0x17E JUMPI PUSH2 0xB1 JUMP JUMPDEST CALLDATASIZE PUSH2 0xB1 JUMPI STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xCF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x1641 JUMP JUMPDEST PUSH2 0x292 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xE5 PUSH2 0x2B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF2 SWAP2 SWAP1 PUSH2 0x16B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x106 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x121 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11C SWAP2 SWAP1 PUSH2 0x16FF JUMP JUMPDEST PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1762 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x17FC JUMP JUMPDEST PUSH2 0x3BA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x173 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17C PUSH2 0x3FD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x189 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x192 PUSH2 0x5B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x183F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1BC PUSH2 0x65D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x18B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x18D8 JUMP JUMPDEST PUSH2 0x696 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x214 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST PUSH2 0x897 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x221 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x16FF JUMP JUMPDEST PUSH2 0xC50 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x249 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x252 PUSH2 0xDF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x198C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x273 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x27C PUSH2 0xE17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x19A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH2 0xE1D JUMP JUMPDEST PUSH2 0x2A3 DUP3 PUSH2 0xF03 JUMP JUMPDEST PUSH2 0x2AD DUP3 DUP3 PUSH2 0xF95 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2BA PUSH2 0x10B3 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP11 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x406 PUSH2 0x113A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x44E JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x481 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x48F JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x4C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x513 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST CALLER PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x5AD JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x5A4 SWAP2 SWAP1 PUSH2 0x1A13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x624 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x648 SWAP2 SWAP1 PUSH2 0x1AA9 JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP DUP4 SWAP6 POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 ISZERO ISZERO PUSH0 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ DUP1 ISZERO PUSH2 0x6ED JUMPI POP DUP1 PUSH1 0x3 ADD SLOAD DUP2 PUSH1 0x5 ADD SLOAD PUSH2 0x6EA SWAP2 SWAP1 PUSH2 0x1B4D JUMP JUMPDEST TIMESTAMP LT JUMPDEST PUSH2 0x72C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x723 SWAP1 PUSH2 0x1BCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 ADD SLOAD CALLVALUE GT DUP1 ISZERO PUSH2 0x742 JUMPI POP DUP1 PUSH1 0x4 ADD SLOAD CALLVALUE GT JUMPDEST PUSH2 0x781 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x778 SWAP1 PUSH2 0x1C58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x845 JUMPI DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 PUSH1 0x7 ADD SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x843 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMPDEST CALLER DUP2 PUSH1 0x6 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP2 PUSH1 0x7 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x926 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91D SWAP1 PUSH2 0x1CC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA DUP5 LT ISZERO PUSH2 0x96A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x961 SWAP1 PUSH2 0x1D28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 GT PUSH2 0x9AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A3 SWAP1 PUSH2 0x1DB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E7 SWAP3 SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9FE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA10 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH0 PUSH0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x1 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xC45 SWAP1 PUSH2 0x1DFB JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 ISZERO ISZERO DUP2 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xCB9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB0 SWAP1 PUSH2 0x1BCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD61 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E42 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD78 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD8A JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xDD1 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x6 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xECA JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEB1 PUSH2 0x114D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xF01 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF92 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF89 SWAP1 PUSH2 0x1EC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xFFD JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFFA SWAP2 SWAP1 PUSH2 0x1F09 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x103E JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1035 SWAP2 SWAP1 PUSH2 0x198C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL DUP2 EQ PUSH2 0x10A4 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x109B SWAP2 SWAP1 PUSH2 0x16B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10AE DUP4 DUP4 PUSH2 0x11A0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1138 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x1144 PUSH2 0x1212 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x1179 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x123B JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x11A9 DUP3 PUSH2 0x1244 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x1205 JUMPI PUSH2 0x11FF DUP3 DUP3 PUSH2 0x130D JUMP JUMPDEST POP PUSH2 0x120E JUMP JUMPDEST PUSH2 0x120D PUSH2 0x138D JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x129F JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1296 SWAP2 SWAP1 PUSH2 0x198C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x12CB PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x123B JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1336 SWAP2 SWAP1 PUSH2 0x1F78 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x136E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1373 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1383 DUP6 DUP4 DUP4 PUSH2 0x13C9 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT ISZERO PUSH2 0x13C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x13DE JUMPI PUSH2 0x13D9 DUP3 PUSH2 0x1456 JUMP JUMPDEST PUSH2 0x144E JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1404 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1446 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x143D SWAP2 SWAP1 PUSH2 0x198C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x144F JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x1468 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14D4 DUP3 PUSH2 0x14AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14E4 DUP2 PUSH2 0x14CA JUMP JUMPDEST DUP2 EQ PUSH2 0x14EE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14FF DUP2 PUSH2 0x14DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1553 DUP3 PUSH2 0x150D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1572 JUMPI PUSH2 0x1571 PUSH2 0x151D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1584 PUSH2 0x149A JUMP JUMPDEST SWAP1 POP PUSH2 0x1590 DUP3 DUP3 PUSH2 0x154A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x15AF JUMPI PUSH2 0x15AE PUSH2 0x151D JUMP JUMPDEST JUMPDEST PUSH2 0x15B8 DUP3 PUSH2 0x150D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15E5 PUSH2 0x15E0 DUP5 PUSH2 0x1595 JUMP JUMPDEST PUSH2 0x157B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1601 JUMPI PUSH2 0x1600 PUSH2 0x1509 JUMP JUMPDEST JUMPDEST PUSH2 0x160C DUP5 DUP3 DUP6 PUSH2 0x15C5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1628 JUMPI PUSH2 0x1627 PUSH2 0x1505 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1638 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x15D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1657 JUMPI PUSH2 0x1656 PUSH2 0x14A3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1664 DUP6 DUP3 DUP7 ADD PUSH2 0x14F1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1685 JUMPI PUSH2 0x1684 PUSH2 0x14A7 JUMP JUMPDEST JUMPDEST PUSH2 0x1691 DUP6 DUP3 DUP7 ADD PUSH2 0x1614 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16AD DUP2 PUSH2 0x169B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16C6 PUSH0 DUP4 ADD DUP5 PUSH2 0x16A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16DE DUP2 PUSH2 0x16CC JUMP JUMPDEST DUP2 EQ PUSH2 0x16E8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16F9 DUP2 PUSH2 0x16D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1714 JUMPI PUSH2 0x1713 PUSH2 0x14A3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1721 DUP5 DUP3 DUP6 ADD PUSH2 0x16EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1733 DUP2 PUSH2 0x14CA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1742 DUP2 PUSH2 0x16CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x175C DUP2 PUSH2 0x1748 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x140 DUP3 ADD SWAP1 POP PUSH2 0x1776 PUSH0 DUP4 ADD DUP14 PUSH2 0x172A JUMP JUMPDEST PUSH2 0x1783 PUSH1 0x20 DUP4 ADD DUP13 PUSH2 0x1739 JUMP JUMPDEST PUSH2 0x1790 PUSH1 0x40 DUP4 ADD DUP12 PUSH2 0x172A JUMP JUMPDEST PUSH2 0x179D PUSH1 0x60 DUP4 ADD DUP11 PUSH2 0x1739 JUMP JUMPDEST PUSH2 0x17AA PUSH1 0x80 DUP4 ADD DUP10 PUSH2 0x1739 JUMP JUMPDEST PUSH2 0x17B7 PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0x1739 JUMP JUMPDEST PUSH2 0x17C4 PUSH1 0xC0 DUP4 ADD DUP8 PUSH2 0x1753 JUMP JUMPDEST PUSH2 0x17D1 PUSH1 0xE0 DUP4 ADD DUP7 PUSH2 0x172A JUMP JUMPDEST PUSH2 0x17DF PUSH2 0x100 DUP4 ADD DUP6 PUSH2 0x1739 JUMP JUMPDEST PUSH2 0x17ED PUSH2 0x120 DUP4 ADD DUP5 PUSH2 0x172A JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1811 JUMPI PUSH2 0x1810 PUSH2 0x14A3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x181E DUP5 DUP3 DUP6 ADD PUSH2 0x14F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1839 DUP2 PUSH2 0x1827 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1852 PUSH0 DUP4 ADD DUP5 PUSH2 0x1830 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x188A DUP3 PUSH2 0x1858 JUMP JUMPDEST PUSH2 0x1894 DUP2 DUP6 PUSH2 0x1862 JUMP JUMPDEST SWAP4 POP PUSH2 0x18A4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1872 JUMP JUMPDEST PUSH2 0x18AD DUP2 PUSH2 0x150D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18D0 DUP2 DUP5 PUSH2 0x1880 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18EF JUMPI PUSH2 0x18EE PUSH2 0x14A3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18FC DUP7 DUP3 DUP8 ADD PUSH2 0x16EB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x190D DUP7 DUP3 DUP8 ADD PUSH2 0x16EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x191E DUP7 DUP3 DUP8 ADD PUSH2 0x14F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1940 JUMPI PUSH2 0x193F PUSH2 0x14A3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x194D DUP8 DUP3 DUP9 ADD PUSH2 0x16EB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x195E DUP8 DUP3 DUP9 ADD PUSH2 0x16EB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x196F DUP8 DUP3 DUP9 ADD PUSH2 0x14F1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1980 DUP8 DUP3 DUP9 ADD PUSH2 0x16EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x199F PUSH0 DUP4 ADD DUP5 PUSH2 0x172A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19B8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1739 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19FD PUSH2 0x19F8 PUSH2 0x19F3 DUP5 PUSH2 0x19BE JUMP JUMPDEST PUSH2 0x19DA JUMP JUMPDEST PUSH2 0x19C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A0D DUP2 PUSH2 0x19E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A26 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A04 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A4A DUP2 PUSH2 0x1A2C JUMP JUMPDEST DUP2 EQ PUSH2 0x1A54 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A65 DUP2 PUSH2 0x1A41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A74 DUP2 PUSH2 0x1827 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A7E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A8F DUP2 PUSH2 0x1A6B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1AA3 DUP2 PUSH2 0x16D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1AC2 JUMPI PUSH2 0x1AC1 PUSH2 0x14A3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1ACF DUP9 DUP3 DUP10 ADD PUSH2 0x1A57 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1AE0 DUP9 DUP3 DUP10 ADD PUSH2 0x1A81 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1AF1 DUP9 DUP3 DUP10 ADD PUSH2 0x1A95 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1B02 DUP9 DUP3 DUP10 ADD PUSH2 0x1A95 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x1B13 DUP9 DUP3 DUP10 ADD PUSH2 0x1A57 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1B57 DUP3 PUSH2 0x16CC JUMP JUMPDEST SWAP2 POP PUSH2 0x1B62 DUP4 PUSH2 0x16CC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1B7A JUMPI PUSH2 0x1B79 PUSH2 0x1B20 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41756374696F6E2068617320656E646564000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BB4 PUSH1 0x11 DUP4 PUSH2 0x1862 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BBF DUP3 PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BE1 DUP2 PUSH2 0x1BA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426964206D75737420626520686967686572207468616E2063757272656E7420 PUSH0 DUP3 ADD MSTORE PUSH32 0x6869676865737420626964000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C42 PUSH1 0x2B DUP4 PUSH2 0x1862 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C4D DUP3 PUSH2 0x1BE8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C6F DUP2 PUSH2 0x1C36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E2063616E206372656174652061756374696F6E000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CAA PUSH1 0x1D DUP4 PUSH2 0x1862 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CB5 DUP3 PUSH2 0x1C76 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CD7 DUP2 PUSH2 0x1C9E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4475726174696F6E206D7573742062652067726561746572207468616E203130 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D12 PUSH1 0x20 DUP4 PUSH2 0x1862 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D1D DUP3 PUSH2 0x1CDE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D3F DUP2 PUSH2 0x1D06 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374617274207072696365206D7573742062652067726561746572207468616E PUSH0 DUP3 ADD MSTORE PUSH32 0x2030000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DA0 PUSH1 0x22 DUP4 PUSH2 0x1862 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DAB DUP3 PUSH2 0x1D46 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DCD DUP2 PUSH2 0x1D94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1DE7 PUSH0 DUP4 ADD DUP6 PUSH2 0x172A JUMP JUMPDEST PUSH2 0x1DF4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1739 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E05 DUP3 PUSH2 0x16CC JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1E37 JUMPI PUSH2 0x1E36 PUSH2 0x1B20 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1E55 PUSH0 DUP4 ADD DUP7 PUSH2 0x172A JUMP JUMPDEST PUSH2 0x1E62 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x172A JUMP JUMPDEST PUSH2 0x1E6F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1739 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E2063616E207570677261646500000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EAB PUSH1 0x16 DUP4 PUSH2 0x1862 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EB6 DUP3 PUSH2 0x1E77 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1ED8 DUP2 PUSH2 0x1E9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EE8 DUP2 PUSH2 0x169B JUMP JUMPDEST DUP2 EQ PUSH2 0x1EF2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F03 DUP2 PUSH2 0x1EDF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F1E JUMPI PUSH2 0x1F1D PUSH2 0x14A3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F2B DUP5 DUP3 DUP6 ADD PUSH2 0x1EF5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F52 DUP3 PUSH2 0x1F34 JUMP JUMPDEST PUSH2 0x1F5C DUP2 DUP6 PUSH2 0x1F3E JUMP JUMPDEST SWAP4 POP PUSH2 0x1F6C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1872 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F83 DUP3 DUP5 PUSH2 0x1F48 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH DUP12 MCOPY PUSH22 0xA0E05498B3F0690F8B1F78F0FFB03D3FAE1BE763D574 0xC MUL PUSH5 0xB5C45C6473 PUSH16 0x6C634300081E00330000000000000000 ",
							"sourceMap": "403:3938:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4161:214:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3708:134;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1068:43:12;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;1358:114;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1276:76;;;;;;;;;;;;;:::i;:::-;;1478:314;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1819:58:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2790:794:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1818:966;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3610:491;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1199:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1142:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4161:214:2;2655:13;:11;:13::i;:::-;4276:36:::1;4294:17;4276;:36::i;:::-;4322:46;4344:17;4363:4;4322:21;:46::i;:::-;4161:214:::0;;:::o;3708:134::-;3777:7;2926:20;:18;:20::i;:::-;811:66:5::1;3803:32:2;;3796:39;;3708:134:::0;:::o;1068:43:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1358:114::-;1454:10;1417:12;;:48;;;;;;;;;;;;;;;;;;1358:114;:::o;1276:76::-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4704:17;4739:1;4724:11;:16;;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4803:1;4788:11;:16;;;:50;;;;;4837:1;4816:4;4808:25;;;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;;;;;;;;;;;;;4849:91;4966:1;4949;:14;;;:18;;;;;;;;;;;;;;;;;;4981:14;4977:67;;;5029:4;5011:1;:15;;;:22;;;;;;;;;;;;;;;;;;4977:67;1335:10:12::1;1327:5;;:18;;;;;;;;;;;;;;;;;;5068:14:1::0;5064:101;;;5116:5;5098:1;:15;;;:23;;;;;;;;;;;;;;;;;;5140:14;5152:1;5140:14;;;;;;:::i;:::-;;;;;;;;5064:101;4092:1079;;;;;1276:76:12:o;1478:314::-;1525:3;1554:14;1582:9;1605:14;1633;1661:22;1696:12;;;;;;;;;;;:28;;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1540:186;;;;;;;;;;1780:5;1773:12;;;;;;;1478:314;:::o;1819:58:2:-;;;;;;;;;;;;;;;;;;;:::o;2790:794:12:-;2923:23;2949:8;:20;2958:10;2949:20;;;;;;;;;;;2923:46;;3030:5;3000:35;;:8;:20;3009:10;3000:20;;;;;;;;;;;:26;;;;;;;;;;;;:35;;;:111;;;;;3094:7;:16;;;3074:7;:17;;;:36;;;;:::i;:::-;3055:15;:56;3000:111;2979:175;;;;;;;;;;;;:::i;:::-;;;;;;;;;3197:7;:18;;;3185:9;:30;:64;;;;;3231:7;:18;;;3219:9;:30;3185:64;3164:154;;;;;;;;;;;;:::i;:::-;;;;;;;;;3406:1;3373:35;;:7;:21;;;;;;;;;;;;:35;;;3369:125;;3432:7;:21;;;;;;;;;;;;3424:39;;:59;3464:7;:18;;;3424:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3369:125;3527:10;3503:7;:21;;;:34;;;;;;;;;;;;;;;;;;3568:9;3547:7;:18;;:30;;;;2913:671;2790:794;;;:::o;1818:966::-;1996:5;;;;;;;;;;;1982:19;;:10;:19;;;1974:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;2066:2;2053:9;:15;;2045:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;2137:1;2123:11;:15;2115:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2226:11;2218:28;;;2255:4;2262:7;2218:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2393:359;;;;;;;;2428:11;2393:359;;;;;;2462:7;2393:359;;;;2491:10;2393:359;;;;;;2525:9;2393:359;;;;2560:11;2393:359;;;;2688:15;2393:359;;;;2592:5;2393:359;;;;;;2634:1;2393:359;;;;;;2662:1;2393:359;;;;2739:1;2393:359;;;;;2367:8;:23;2376:13;;2367:23;;;;;;;;;;;:385;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2762:13;;:15;;;;;;;;;:::i;:::-;;;;;;1818:966;;;;:::o;3610:491::-;3667:23;3693:8;:20;3702:10;3693:20;;;;;;;;;;;3667:46;;3748:5;3731:22;;:7;:13;;;;;;;;;;;;:22;;;3723:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;3832:7;:19;;;;;;;;;;;;3824:41;;;3879:5;;;;;;;;;;;3898:7;:21;;;;;;;;;;;;3933:7;:15;;;3824:134;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4026:4;4010:31;;:54;4042:21;4010:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4090:4;4074:7;:13;;;:20;;;;;;;;;;;;;;;;;;3657:444;3610:491;:::o;1199:20::-;;;;;;;;;;;;;:::o;1142:28::-;;;;:::o;4578:312:2:-;4667:6;4650:23;;4658:4;4650:23;;;:120;;;;4764:6;4728:42;;:32;:30;:32::i;:::-;:42;;;;4650:120;4633:251;;;4844:29;;;;;;;;;;;;;;4633:251;4578:312::o;4177:162:12:-;4300:5;;;;;;;;;;;4286:19;;:10;:19;;;4278:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;4177:162;:::o;6032:538:2:-;6149:17;6131:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;6127:437;;6535:17;6493:60;;;;;;;;;;;:::i;:::-;;;;;;;;6127:437;811:66:5;6233:32:2;;6225:4;:40;6221:120;;6321:4;6292:34;;;;;;;;;;;:::i;:::-;;;;;;;;6221:120;6354:54;6384:17;6403:4;6354:29;:54::i;:::-;6184:235;6032:538;;:::o;5007:213::-;5090:6;5073:23;;5081:4;5073:23;;;5069:145;;5174:29;;;;;;;;;;;;;;5069:145;5007:213::o;9071:205:1:-;9129:30;9171:12;9186:27;:25;:27::i;:::-;9171:42;;9256:4;9246:14;;9232:38;9071:205;:::o;1441:138:5:-;1493:7;1519:47;811:66;1546:19;;1519:26;:47::i;:::-;:53;;;;;;;;;;;;1512:60;;1441:138;:::o;2264:344::-;2355:37;2374:17;2355:18;:37::i;:::-;2425:17;2407:36;;;;;;;;;;;;2472:1;2458:4;:11;:15;2454:148;;;2489:53;2518:17;2537:4;2489:28;:53::i;:::-;;2454:148;;;2573:18;:16;:18::i;:::-;2454:148;2264:344;;:::o;8819:122:1:-;8887:7;3147:66;8913:21;;8906:28;;8819:122;:::o;1899:163:10:-;1960:21;2042:4;2032:14;;1899:163;;;:::o;1671:281:5:-;1781:1;1748:17;:29;;;:34;1744:119;;1834:17;1805:47;;;;;;;;;;;:::i;:::-;;;;;;;;1744:119;1928:17;1872:47;811:66;1899:19;;1872:26;:47::i;:::-;:53;;;:73;;;;;;;;;;;;;;;;;;1671:281;:::o;3916:253:8:-;3999:12;4024;4038:23;4065:6;:19;;4085:4;4065:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4023:67;;;;4107:55;4134:6;4142:7;4151:10;4107:26;:55::i;:::-;4100:62;;;;3916:253;;;;:::o;6113:122:5:-;6175:1;6163:9;:13;6159:70;;;6199:19;;;;;;;;;;;;;;6159:70;6113:122::o;4437:582:8:-;4581:12;4610:7;4605:408;;4633:19;4641:10;4633:7;:19::i;:::-;4605:408;;;4878:1;4857:10;:17;:22;:49;;;;;4905:1;4883:6;:18;;;:23;4857:49;4853:119;;;4950:6;4933:24;;;;;;;;;;;:::i;:::-;;;;;;;;4853:119;4992:10;4985:17;;;;4605:408;4437:582;;;;;;:::o;5559:487::-;5710:1;5690:10;:17;:21;5686:354;;;5887:10;5881:17;5943:15;5930:10;5926:2;5922:19;5915:44;5686:354;6010:19;;;;;;;;;;;;;;7:75:13;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:117::-;950:1;947;940:12;964:117;1073:1;1070;1063:12;1087:102;1128:6;1179:2;1175:7;1170:2;1163:5;1159:14;1155:28;1145:38;;1087:102;;;:::o;1195:180::-;1243:77;1240:1;1233:88;1340:4;1337:1;1330:15;1364:4;1361:1;1354:15;1381:281;1464:27;1486:4;1464:27;:::i;:::-;1456:6;1452:40;1594:6;1582:10;1579:22;1558:18;1546:10;1543:34;1540:62;1537:88;;;1605:18;;:::i;:::-;1537:88;1645:10;1641:2;1634:22;1424:238;1381:281;;:::o;1668:129::-;1702:6;1729:20;;:::i;:::-;1719:30;;1758:33;1786:4;1778:6;1758:33;:::i;:::-;1668:129;;;:::o;1803:307::-;1864:4;1954:18;1946:6;1943:30;1940:56;;;1976:18;;:::i;:::-;1940:56;2014:29;2036:6;2014:29;:::i;:::-;2006:37;;2098:4;2092;2088:15;2080:23;;1803:307;;;:::o;2116:148::-;2214:6;2209:3;2204;2191:30;2255:1;2246:6;2241:3;2237:16;2230:27;2116:148;;;:::o;2270:423::-;2347:5;2372:65;2388:48;2429:6;2388:48;:::i;:::-;2372:65;:::i;:::-;2363:74;;2460:6;2453:5;2446:21;2498:4;2491:5;2487:16;2536:3;2527:6;2522:3;2518:16;2515:25;2512:112;;;2543:79;;:::i;:::-;2512:112;2633:54;2680:6;2675:3;2670;2633:54;:::i;:::-;2353:340;2270:423;;;;;:::o;2712:338::-;2767:5;2816:3;2809:4;2801:6;2797:17;2793:27;2783:122;;2824:79;;:::i;:::-;2783:122;2941:6;2928:20;2966:78;3040:3;3032:6;3025:4;3017:6;3013:17;2966:78;:::i;:::-;2957:87;;2773:277;2712:338;;;;:::o;3056:652::-;3133:6;3141;3190:2;3178:9;3169:7;3165:23;3161:32;3158:119;;;3196:79;;:::i;:::-;3158:119;3316:1;3341:53;3386:7;3377:6;3366:9;3362:22;3341:53;:::i;:::-;3331:63;;3287:117;3471:2;3460:9;3456:18;3443:32;3502:18;3494:6;3491:30;3488:117;;;3524:79;;:::i;:::-;3488:117;3629:62;3683:7;3674:6;3663:9;3659:22;3629:62;:::i;:::-;3619:72;;3414:287;3056:652;;;;;:::o;3714:77::-;3751:7;3780:5;3769:16;;3714:77;;;:::o;3797:118::-;3884:24;3902:5;3884:24;:::i;:::-;3879:3;3872:37;3797:118;;:::o;3921:222::-;4014:4;4052:2;4041:9;4037:18;4029:26;;4065:71;4133:1;4122:9;4118:17;4109:6;4065:71;:::i;:::-;3921:222;;;;:::o;4149:77::-;4186:7;4215:5;4204:16;;4149:77;;;:::o;4232:122::-;4305:24;4323:5;4305:24;:::i;:::-;4298:5;4295:35;4285:63;;4344:1;4341;4334:12;4285:63;4232:122;:::o;4360:139::-;4406:5;4444:6;4431:20;4422:29;;4460:33;4487:5;4460:33;:::i;:::-;4360:139;;;;:::o;4505:329::-;4564:6;4613:2;4601:9;4592:7;4588:23;4584:32;4581:119;;;4619:79;;:::i;:::-;4581:119;4739:1;4764:53;4809:7;4800:6;4789:9;4785:22;4764:53;:::i;:::-;4754:63;;4710:117;4505:329;;;;:::o;4840:118::-;4927:24;4945:5;4927:24;:::i;:::-;4922:3;4915:37;4840:118;;:::o;4964:::-;5051:24;5069:5;5051:24;:::i;:::-;5046:3;5039:37;4964:118;;:::o;5088:90::-;5122:7;5165:5;5158:13;5151:21;5140:32;;5088:90;;;:::o;5184:109::-;5265:21;5280:5;5265:21;:::i;:::-;5260:3;5253:34;5184:109;;:::o;5299:1207::-;5638:4;5676:3;5665:9;5661:19;5653:27;;5690:71;5758:1;5747:9;5743:17;5734:6;5690:71;:::i;:::-;5771:72;5839:2;5828:9;5824:18;5815:6;5771:72;:::i;:::-;5853;5921:2;5910:9;5906:18;5897:6;5853:72;:::i;:::-;5935;6003:2;5992:9;5988:18;5979:6;5935:72;:::i;:::-;6017:73;6085:3;6074:9;6070:19;6061:6;6017:73;:::i;:::-;6100;6168:3;6157:9;6153:19;6144:6;6100:73;:::i;:::-;6183:67;6245:3;6234:9;6230:19;6221:6;6183:67;:::i;:::-;6260:73;6328:3;6317:9;6313:19;6304:6;6260:73;:::i;:::-;6343;6411:3;6400:9;6396:19;6387:6;6343:73;:::i;:::-;6426;6494:3;6483:9;6479:19;6470:6;6426:73;:::i;:::-;5299:1207;;;;;;;;;;;;;:::o;6512:329::-;6571:6;6620:2;6608:9;6599:7;6595:23;6591:32;6588:119;;;6626:79;;:::i;:::-;6588:119;6746:1;6771:53;6816:7;6807:6;6796:9;6792:22;6771:53;:::i;:::-;6761:63;;6717:117;6512:329;;;;:::o;6847:76::-;6883:7;6912:5;6901:16;;6847:76;;;:::o;6929:115::-;7014:23;7031:5;7014:23;:::i;:::-;7009:3;7002:36;6929:115;;:::o;7050:218::-;7141:4;7179:2;7168:9;7164:18;7156:26;;7192:69;7258:1;7247:9;7243:17;7234:6;7192:69;:::i;:::-;7050:218;;;;:::o;7274:99::-;7326:6;7360:5;7354:12;7344:22;;7274:99;;;:::o;7379:169::-;7463:11;7497:6;7492:3;7485:19;7537:4;7532:3;7528:14;7513:29;;7379:169;;;;:::o;7554:139::-;7643:6;7638:3;7633;7627:23;7684:1;7675:6;7670:3;7666:16;7659:27;7554:139;;;:::o;7699:377::-;7787:3;7815:39;7848:5;7815:39;:::i;:::-;7870:71;7934:6;7929:3;7870:71;:::i;:::-;7863:78;;7950:65;8008:6;8003:3;7996:4;7989:5;7985:16;7950:65;:::i;:::-;8040:29;8062:6;8040:29;:::i;:::-;8035:3;8031:39;8024:46;;7791:285;7699:377;;;;:::o;8082:313::-;8195:4;8233:2;8222:9;8218:18;8210:26;;8282:9;8276:4;8272:20;8268:1;8257:9;8253:17;8246:47;8310:78;8383:4;8374:6;8310:78;:::i;:::-;8302:86;;8082:313;;;;:::o;8401:619::-;8478:6;8486;8494;8543:2;8531:9;8522:7;8518:23;8514:32;8511:119;;;8549:79;;:::i;:::-;8511:119;8669:1;8694:53;8739:7;8730:6;8719:9;8715:22;8694:53;:::i;:::-;8684:63;;8640:117;8796:2;8822:53;8867:7;8858:6;8847:9;8843:22;8822:53;:::i;:::-;8812:63;;8767:118;8924:2;8950:53;8995:7;8986:6;8975:9;8971:22;8950:53;:::i;:::-;8940:63;;8895:118;8401:619;;;;;:::o;9026:765::-;9112:6;9120;9128;9136;9185:3;9173:9;9164:7;9160:23;9156:33;9153:120;;;9192:79;;:::i;:::-;9153:120;9312:1;9337:53;9382:7;9373:6;9362:9;9358:22;9337:53;:::i;:::-;9327:63;;9283:117;9439:2;9465:53;9510:7;9501:6;9490:9;9486:22;9465:53;:::i;:::-;9455:63;;9410:118;9567:2;9593:53;9638:7;9629:6;9618:9;9614:22;9593:53;:::i;:::-;9583:63;;9538:118;9695:2;9721:53;9766:7;9757:6;9746:9;9742:22;9721:53;:::i;:::-;9711:63;;9666:118;9026:765;;;;;;;:::o;9797:222::-;9890:4;9928:2;9917:9;9913:18;9905:26;;9941:71;10009:1;9998:9;9994:17;9985:6;9941:71;:::i;:::-;9797:222;;;;:::o;10025:::-;10118:4;10156:2;10145:9;10141:18;10133:26;;10169:71;10237:1;10226:9;10222:17;10213:6;10169:71;:::i;:::-;10025:222;;;;:::o;10253:85::-;10298:7;10327:5;10316:16;;10253:85;;;:::o;10344:101::-;10380:7;10420:18;10413:5;10409:30;10398:41;;10344:101;;;:::o;10451:60::-;10479:3;10500:5;10493:12;;10451:60;;;:::o;10517:156::-;10574:9;10607:60;10624:42;10633:32;10659:5;10633:32;:::i;:::-;10624:42;:::i;:::-;10607:60;:::i;:::-;10594:73;;10517:156;;;:::o;10679:145::-;10773:44;10811:5;10773:44;:::i;:::-;10768:3;10761:57;10679:145;;:::o;10830:236::-;10930:4;10968:2;10957:9;10953:18;10945:26;;10981:78;11056:1;11045:9;11041:17;11032:6;10981:78;:::i;:::-;10830:236;;;;:::o;11072:105::-;11108:7;11148:22;11141:5;11137:34;11126:45;;11072:105;;;:::o;11183:120::-;11255:23;11272:5;11255:23;:::i;:::-;11248:5;11245:34;11235:62;;11293:1;11290;11283:12;11235:62;11183:120;:::o;11309:141::-;11365:5;11396:6;11390:13;11381:22;;11412:32;11438:5;11412:32;:::i;:::-;11309:141;;;;:::o;11456:120::-;11528:23;11545:5;11528:23;:::i;:::-;11521:5;11518:34;11508:62;;11566:1;11563;11556:12;11508:62;11456:120;:::o;11582:141::-;11638:5;11669:6;11663:13;11654:22;;11685:32;11711:5;11685:32;:::i;:::-;11582:141;;;;:::o;11729:143::-;11786:5;11817:6;11811:13;11802:22;;11833:33;11860:5;11833:33;:::i;:::-;11729:143;;;;:::o;11878:971::-;11981:6;11989;11997;12005;12013;12062:3;12050:9;12041:7;12037:23;12033:33;12030:120;;;12069:79;;:::i;:::-;12030:120;12189:1;12214:63;12269:7;12260:6;12249:9;12245:22;12214:63;:::i;:::-;12204:73;;12160:127;12326:2;12352:63;12407:7;12398:6;12387:9;12383:22;12352:63;:::i;:::-;12342:73;;12297:128;12464:2;12490:64;12546:7;12537:6;12526:9;12522:22;12490:64;:::i;:::-;12480:74;;12435:129;12603:2;12629:64;12685:7;12676:6;12665:9;12661:22;12629:64;:::i;:::-;12619:74;;12574:129;12742:3;12769:63;12824:7;12815:6;12804:9;12800:22;12769:63;:::i;:::-;12759:73;;12713:129;11878:971;;;;;;;;:::o;12855:180::-;12903:77;12900:1;12893:88;13000:4;12997:1;12990:15;13024:4;13021:1;13014:15;13041:191;13081:3;13100:20;13118:1;13100:20;:::i;:::-;13095:25;;13134:20;13152:1;13134:20;:::i;:::-;13129:25;;13177:1;13174;13170:9;13163:16;;13198:3;13195:1;13192:10;13189:36;;;13205:18;;:::i;:::-;13189:36;13041:191;;;;:::o;13238:167::-;13378:19;13374:1;13366:6;13362:14;13355:43;13238:167;:::o;13411:366::-;13553:3;13574:67;13638:2;13633:3;13574:67;:::i;:::-;13567:74;;13650:93;13739:3;13650:93;:::i;:::-;13768:2;13763:3;13759:12;13752:19;;13411:366;;;:::o;13783:419::-;13949:4;13987:2;13976:9;13972:18;13964:26;;14036:9;14030:4;14026:20;14022:1;14011:9;14007:17;14000:47;14064:131;14190:4;14064:131;:::i;:::-;14056:139;;13783:419;;;:::o;14208:230::-;14348:34;14344:1;14336:6;14332:14;14325:58;14417:13;14412:2;14404:6;14400:15;14393:38;14208:230;:::o;14444:366::-;14586:3;14607:67;14671:2;14666:3;14607:67;:::i;:::-;14600:74;;14683:93;14772:3;14683:93;:::i;:::-;14801:2;14796:3;14792:12;14785:19;;14444:366;;;:::o;14816:419::-;14982:4;15020:2;15009:9;15005:18;14997:26;;15069:9;15063:4;15059:20;15055:1;15044:9;15040:17;15033:47;15097:131;15223:4;15097:131;:::i;:::-;15089:139;;14816:419;;;:::o;15241:179::-;15381:31;15377:1;15369:6;15365:14;15358:55;15241:179;:::o;15426:366::-;15568:3;15589:67;15653:2;15648:3;15589:67;:::i;:::-;15582:74;;15665:93;15754:3;15665:93;:::i;:::-;15783:2;15778:3;15774:12;15767:19;;15426:366;;;:::o;15798:419::-;15964:4;16002:2;15991:9;15987:18;15979:26;;16051:9;16045:4;16041:20;16037:1;16026:9;16022:17;16015:47;16079:131;16205:4;16079:131;:::i;:::-;16071:139;;15798:419;;;:::o;16223:182::-;16363:34;16359:1;16351:6;16347:14;16340:58;16223:182;:::o;16411:366::-;16553:3;16574:67;16638:2;16633:3;16574:67;:::i;:::-;16567:74;;16650:93;16739:3;16650:93;:::i;:::-;16768:2;16763:3;16759:12;16752:19;;16411:366;;;:::o;16783:419::-;16949:4;16987:2;16976:9;16972:18;16964:26;;17036:9;17030:4;17026:20;17022:1;17011:9;17007:17;17000:47;17064:131;17190:4;17064:131;:::i;:::-;17056:139;;16783:419;;;:::o;17208:221::-;17348:34;17344:1;17336:6;17332:14;17325:58;17417:4;17412:2;17404:6;17400:15;17393:29;17208:221;:::o;17435:366::-;17577:3;17598:67;17662:2;17657:3;17598:67;:::i;:::-;17591:74;;17674:93;17763:3;17674:93;:::i;:::-;17792:2;17787:3;17783:12;17776:19;;17435:366;;;:::o;17807:419::-;17973:4;18011:2;18000:9;17996:18;17988:26;;18060:9;18054:4;18050:20;18046:1;18035:9;18031:17;18024:47;18088:131;18214:4;18088:131;:::i;:::-;18080:139;;17807:419;;;:::o;18232:332::-;18353:4;18391:2;18380:9;18376:18;18368:26;;18404:71;18472:1;18461:9;18457:17;18448:6;18404:71;:::i;:::-;18485:72;18553:2;18542:9;18538:18;18529:6;18485:72;:::i;:::-;18232:332;;;;;:::o;18570:233::-;18609:3;18632:24;18650:5;18632:24;:::i;:::-;18623:33;;18678:66;18671:5;18668:77;18665:103;;18748:18;;:::i;:::-;18665:103;18795:1;18788:5;18784:13;18777:20;;18570:233;;;:::o;18809:442::-;18958:4;18996:2;18985:9;18981:18;18973:26;;19009:71;19077:1;19066:9;19062:17;19053:6;19009:71;:::i;:::-;19090:72;19158:2;19147:9;19143:18;19134:6;19090:72;:::i;:::-;19172;19240:2;19229:9;19225:18;19216:6;19172:72;:::i;:::-;18809:442;;;;;;:::o;19257:172::-;19397:24;19393:1;19385:6;19381:14;19374:48;19257:172;:::o;19435:366::-;19577:3;19598:67;19662:2;19657:3;19598:67;:::i;:::-;19591:74;;19674:93;19763:3;19674:93;:::i;:::-;19792:2;19787:3;19783:12;19776:19;;19435:366;;;:::o;19807:419::-;19973:4;20011:2;20000:9;19996:18;19988:26;;20060:9;20054:4;20050:20;20046:1;20035:9;20031:17;20024:47;20088:131;20214:4;20088:131;:::i;:::-;20080:139;;19807:419;;;:::o;20232:122::-;20305:24;20323:5;20305:24;:::i;:::-;20298:5;20295:35;20285:63;;20344:1;20341;20334:12;20285:63;20232:122;:::o;20360:143::-;20417:5;20448:6;20442:13;20433:22;;20464:33;20491:5;20464:33;:::i;:::-;20360:143;;;;:::o;20509:351::-;20579:6;20628:2;20616:9;20607:7;20603:23;20599:32;20596:119;;;20634:79;;:::i;:::-;20596:119;20754:1;20779:64;20835:7;20826:6;20815:9;20811:22;20779:64;:::i;:::-;20769:74;;20725:128;20509:351;;;;:::o;20866:98::-;20917:6;20951:5;20945:12;20935:22;;20866:98;;;:::o;20970:147::-;21071:11;21108:3;21093:18;;20970:147;;;;:::o;21123:386::-;21227:3;21255:38;21287:5;21255:38;:::i;:::-;21309:88;21390:6;21385:3;21309:88;:::i;:::-;21302:95;;21406:65;21464:6;21459:3;21452:4;21445:5;21441:16;21406:65;:::i;:::-;21496:6;21491:3;21487:16;21480:23;;21231:278;21123:386;;;;:::o;21515:271::-;21645:3;21667:93;21756:3;21747:6;21667:93;:::i;:::-;21660:100;;21777:3;21770:10;;21515:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1626400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"UPGRADE_INTERFACE_VERSION()": "infinite",
								"admin()": "2596",
								"auctions(uint256)": "infinite",
								"createAuction(uint256,uint256,address,uint256)": "infinite",
								"endAuction(uint256)": "infinite",
								"getLatestPrice()": "infinite",
								"initialize()": "105984",
								"nextAuctionId()": "2535",
								"placeBid(uint256,uint256,address)": "infinite",
								"proxiableUUID()": "infinite",
								"setPriceFeed(address)": "24782",
								"upgradeToAndCall(address,bytes)": "infinite"
							},
							"internal": {
								"_authorizeUpgrade(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 403,
									"end": 4341,
									"name": "PUSH",
									"source": 12,
									"value": "A0"
								},
								{
									"begin": 403,
									"end": 4341,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 403,
									"end": 4341,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1171,
									"end": 1175,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 403,
									"end": 4341,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 403,
									"end": 4341,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 403,
									"end": 4341,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 403,
									"end": 4341,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 403,
									"end": 4341,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 403,
									"end": 4341,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 403,
									"end": 4341,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 403,
									"end": 4341,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 403,
									"end": 4341,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 403,
									"end": 4341,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 403,
									"end": 4341,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 403,
									"end": 4341,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 403,
									"end": 4341,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 403,
									"end": 4341,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 403,
									"end": 4341,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 403,
									"end": 4341,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 403,
									"end": 4341,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 403,
									"end": 4341,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 403,
									"end": 4341,
									"name": "ASSIGNIMMUTABLE",
									"source": 12,
									"value": "333"
								},
								{
									"begin": 403,
									"end": 4341,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 403,
									"end": 4341,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 403,
									"end": 4341,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203f8b5e75a0e05498b3f0690f8b1f78f0ffb03d3fae1be763d5740c0264b5c45c64736f6c634300081e0033",
									".code": [
										{
											"begin": 403,
											"end": 4341,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "PUSH",
											"source": 12,
											"value": "AD3CB1CC"
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "PUSH",
											"source": 12,
											"value": "AD3CB1CC"
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "PUSH",
											"source": 12,
											"value": "AD6561EC"
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "PUSH",
											"source": 12,
											"value": "B1CB48EF"
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "PUSH",
											"source": 12,
											"value": "B9A2DE3A"
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "PUSH",
											"source": 12,
											"value": "F851A440"
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "PUSH",
											"source": 12,
											"value": "FC528482"
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "tag",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "PUSH",
											"source": 12,
											"value": "4F1EF286"
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "PUSH",
											"source": 12,
											"value": "52D1902D"
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "PUSH",
											"source": 12,
											"value": "571A26A0"
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "PUSH",
											"source": 12,
											"value": "724E78DA"
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "PUSH",
											"source": 12,
											"value": "8129FC1C"
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "PUSH",
											"source": 12,
											"value": "8E15F473"
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 403,
											"end": 4341,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "tag",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 1068,
											"end": 1111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 1068,
											"end": 1111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP11",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP10",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 1068,
											"end": 1111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1358,
											"end": 1472,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 1358,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1358,
											"end": 1472,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1358,
											"end": 1472,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1358,
											"end": 1472,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1358,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 1358,
											"end": 1472,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1358,
											"end": 1472,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1472,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1472,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1358,
											"end": 1472,
											"name": "tag",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 1358,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1358,
											"end": 1472,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1358,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 1358,
											"end": 1472,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1358,
											"end": 1472,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1358,
											"end": 1472,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1358,
											"end": 1472,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1358,
											"end": 1472,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1358,
											"end": 1472,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1358,
											"end": 1472,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1358,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 1358,
											"end": 1472,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1358,
											"end": 1472,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1358,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 1358,
											"end": 1472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1358,
											"end": 1472,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 1358,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1358,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 1358,
											"end": 1472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1358,
											"end": 1472,
											"name": "tag",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 1358,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1358,
											"end": 1472,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1276,
											"end": 1352,
											"name": "tag",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 1276,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1276,
											"end": 1352,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1276,
											"end": 1352,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1276,
											"end": 1352,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1276,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 1276,
											"end": 1352,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1276,
											"end": 1352,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1276,
											"end": 1352,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1276,
											"end": 1352,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1276,
											"end": 1352,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 1276,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1276,
											"end": 1352,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1276,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1276,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 1276,
											"end": 1352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1276,
											"end": 1352,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1276,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1276,
											"end": 1352,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1792,
											"name": "tag",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 1478,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1792,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1792,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1792,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1792,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 1478,
											"end": 1792,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1792,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1792,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1792,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1792,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 1478,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1792,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 1478,
											"end": 1792,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 1478,
											"end": 1792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1792,
											"name": "tag",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 1478,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1792,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1478,
											"end": 1792,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1792,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 1478,
											"end": 1792,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1792,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1792,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 1478,
											"end": 1792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1792,
											"name": "tag",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 1478,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1792,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1478,
											"end": 1792,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1792,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1792,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1792,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1792,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1792,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2790,
											"end": 3584,
											"name": "tag",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 2790,
											"end": 3584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2790,
											"end": 3584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 2790,
											"end": 3584,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2790,
											"end": 3584,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2790,
											"end": 3584,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2790,
											"end": 3584,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2790,
											"end": 3584,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2790,
											"end": 3584,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2790,
											"end": 3584,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2790,
											"end": 3584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 2790,
											"end": 3584,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2790,
											"end": 3584,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2790,
											"end": 3584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 2790,
											"end": 3584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2790,
											"end": 3584,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 2790,
											"end": 3584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2790,
											"end": 3584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 2790,
											"end": 3584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2790,
											"end": 3584,
											"name": "tag",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 2790,
											"end": 3584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2790,
											"end": 3584,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 2784,
											"name": "tag",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 1818,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 2784,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 2784,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 2784,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 1818,
											"end": 2784,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 2784,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1818,
											"end": 2784,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1818,
											"end": 2784,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 2784,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 1818,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 2784,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 1818,
											"end": 2784,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1818,
											"end": 2784,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 2784,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 2784,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 2784,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 2784,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 2784,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 1818,
											"end": 2784,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 2784,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 1818,
											"end": 2784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 2784,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 1818,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1818,
											"end": 2784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 2784,
											"name": "tag",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 1818,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 2784,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 3610,
											"end": 4101,
											"name": "tag",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 3610,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3610,
											"end": 4101,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 3610,
											"end": 4101,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3610,
											"end": 4101,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3610,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 3610,
											"end": 4101,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3610,
											"end": 4101,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3610,
											"end": 4101,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3610,
											"end": 4101,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3610,
											"end": 4101,
											"name": "tag",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 3610,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3610,
											"end": 4101,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3610,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 3610,
											"end": 4101,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 4101,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3610,
											"end": 4101,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 3610,
											"end": 4101,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3610,
											"end": 4101,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3610,
											"end": 4101,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3610,
											"end": 4101,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3610,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 3610,
											"end": 4101,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3610,
											"end": 4101,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3610,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 3610,
											"end": 4101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3610,
											"end": 4101,
											"name": "tag",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 3610,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3610,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 3610,
											"end": 4101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3610,
											"end": 4101,
											"name": "tag",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 3610,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3610,
											"end": 4101,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "tag",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "tag",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 1199,
											"end": 1219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "tag",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 1199,
											"end": 1219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "tag",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "tag",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 1142,
											"end": 1170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "tag",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 1142,
											"end": 1170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2655,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2655,
											"end": 2668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4294,
											"end": 4311,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4276,
											"end": 4312,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4344,
											"end": 4361,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4363,
											"end": 4367,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4343,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 4322,
											"end": 4368,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3784,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2926,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2926,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 811,
											"end": 877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 3803,
											"end": 3835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3803,
											"end": 3835,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 3796,
											"end": 3835,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3796,
											"end": 3835,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1358,
											"end": 1472,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 1358,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1464,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1417,
											"end": 1429,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1417,
											"end": 1429,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1465,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1417,
											"end": 1465,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1417,
											"end": 1465,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1417,
											"end": 1465,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1417,
											"end": 1465,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1417,
											"end": 1465,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1417,
											"end": 1465,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1417,
											"end": 1465,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1417,
											"end": 1465,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1417,
											"end": 1465,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1417,
											"end": 1465,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1417,
											"end": 1465,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1417,
											"end": 1465,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1417,
											"end": 1465,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1417,
											"end": 1465,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1417,
											"end": 1465,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1417,
											"end": 1465,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1417,
											"end": 1465,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1358,
											"end": 1472,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1358,
											"end": 1472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1276,
											"end": 1352,
											"name": "tag",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 1276,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4721,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4739,
											"end": 4740,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4724,
											"end": 4735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4744,
											"end": 4758,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4785,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4803,
											"end": 4804,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4788,
											"end": 4799,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4816,
											"end": 4820,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4838,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4866,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 4883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4949,
											"end": 4950,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4981,
											"end": 4995,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5029,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5011,
											"end": 5012,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5011,
											"end": 5026,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5026,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1335,
											"end": 1345,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1327,
											"end": 1332,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1327,
											"end": 1332,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1327,
											"end": 1345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1327,
											"end": 1345,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1327,
											"end": 1345,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1327,
											"end": 1345,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1327,
											"end": 1345,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1327,
											"end": 1345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1327,
											"end": 1345,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1327,
											"end": 1345,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1327,
											"end": 1345,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1327,
											"end": 1345,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1327,
											"end": 1345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1327,
											"end": 1345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1327,
											"end": 1345,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1327,
											"end": 1345,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1327,
											"end": 1345,
											"modifierDepth": 1,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1327,
											"end": 1345,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1327,
											"end": 1345,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1327,
											"end": 1345,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5068,
											"end": 5082,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5116,
											"end": 5121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5098,
											"end": 5099,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5152,
											"end": 5153,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 5140,
											"end": 5154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1792,
											"name": "tag",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 1478,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1525,
											"end": 1528,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1554,
											"end": 1568,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1605,
											"end": 1619,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1633,
											"end": 1647,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1661,
											"end": 1683,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1696,
											"end": 1708,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1696,
											"end": 1708,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1696,
											"end": 1708,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1708,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1708,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1708,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1696,
											"end": 1708,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1708,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1708,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1708,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1696,
											"end": 1708,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1724,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1696,
											"end": 1724,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1724,
											"name": "PUSH",
											"source": 12,
											"value": "FEAF968C"
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "tag",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "104"
										},
										{
											"begin": 1696,
											"end": 1726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "tag",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 1696,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1540,
											"end": 1726,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1540,
											"end": 1726,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1540,
											"end": 1726,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1540,
											"end": 1726,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1540,
											"end": 1726,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1540,
											"end": 1726,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1540,
											"end": 1726,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1540,
											"end": 1726,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1540,
											"end": 1726,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1540,
											"end": 1726,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1780,
											"end": 1785,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1773,
											"end": 1785,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 1773,
											"end": 1785,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1773,
											"end": 1785,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1773,
											"end": 1785,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1773,
											"end": 1785,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1773,
											"end": 1785,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1773,
											"end": 1785,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1792,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "352E302E30000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2790,
											"end": 3584,
											"name": "tag",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 2790,
											"end": 3584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2923,
											"end": 2946,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2949,
											"end": 2957,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2949,
											"end": 2969,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2958,
											"end": 2968,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2949,
											"end": 2969,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2949,
											"end": 2969,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2949,
											"end": 2969,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2949,
											"end": 2969,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2949,
											"end": 2969,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2949,
											"end": 2969,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2949,
											"end": 2969,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2949,
											"end": 2969,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2949,
											"end": 2969,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2949,
											"end": 2969,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2949,
											"end": 2969,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2923,
											"end": 2969,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2923,
											"end": 2969,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3030,
											"end": 3035,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3000,
											"end": 3035,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3000,
											"end": 3035,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3000,
											"end": 3008,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3000,
											"end": 3020,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3009,
											"end": 3019,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3000,
											"end": 3020,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3000,
											"end": 3020,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3000,
											"end": 3020,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3000,
											"end": 3020,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3000,
											"end": 3020,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3000,
											"end": 3020,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3000,
											"end": 3020,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3000,
											"end": 3020,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3000,
											"end": 3020,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3000,
											"end": 3020,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3000,
											"end": 3020,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3000,
											"end": 3026,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 3000,
											"end": 3026,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3000,
											"end": 3026,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3000,
											"end": 3026,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3000,
											"end": 3026,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3000,
											"end": 3026,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3000,
											"end": 3026,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3000,
											"end": 3026,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3000,
											"end": 3026,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3000,
											"end": 3026,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3000,
											"end": 3026,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 3000,
											"end": 3026,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3000,
											"end": 3035,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3000,
											"end": 3035,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3000,
											"end": 3035,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3000,
											"end": 3111,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3000,
											"end": 3111,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3000,
											"end": 3111,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 3000,
											"end": 3111,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3000,
											"end": 3111,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3094,
											"end": 3101,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3094,
											"end": 3110,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 3094,
											"end": 3110,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3094,
											"end": 3110,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3074,
											"end": 3081,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3074,
											"end": 3091,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 3074,
											"end": 3091,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3074,
											"end": 3091,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3074,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 3074,
											"end": 3110,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3074,
											"end": 3110,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3074,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 3074,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3074,
											"end": 3110,
											"name": "tag",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 3074,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3055,
											"end": 3070,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 3055,
											"end": 3111,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3000,
											"end": 3111,
											"name": "tag",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 3000,
											"end": 3111,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2979,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 2979,
											"end": 3154,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2979,
											"end": 3154,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2979,
											"end": 3154,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2979,
											"end": 3154,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2979,
											"end": 3154,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2979,
											"end": 3154,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2979,
											"end": 3154,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2979,
											"end": 3154,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2979,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 2979,
											"end": 3154,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2979,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 2979,
											"end": 3154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2979,
											"end": 3154,
											"name": "tag",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 2979,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2979,
											"end": 3154,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2979,
											"end": 3154,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2979,
											"end": 3154,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2979,
											"end": 3154,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2979,
											"end": 3154,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2979,
											"end": 3154,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2979,
											"end": 3154,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2979,
											"end": 3154,
											"name": "tag",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 2979,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3197,
											"end": 3204,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3197,
											"end": 3215,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 3197,
											"end": 3215,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3197,
											"end": 3215,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3185,
											"end": 3194,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 3185,
											"end": 3215,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3185,
											"end": 3249,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3185,
											"end": 3249,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3185,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 3185,
											"end": 3249,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3185,
											"end": 3249,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3231,
											"end": 3238,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3231,
											"end": 3249,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3231,
											"end": 3249,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3231,
											"end": 3249,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3219,
											"end": 3228,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 3219,
											"end": 3249,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3185,
											"end": 3249,
											"name": "tag",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 3185,
											"end": 3249,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3164,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 3164,
											"end": 3318,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3164,
											"end": 3318,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3164,
											"end": 3318,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3164,
											"end": 3318,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3164,
											"end": 3318,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3164,
											"end": 3318,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3164,
											"end": 3318,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3164,
											"end": 3318,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3164,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 3164,
											"end": 3318,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3164,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 3164,
											"end": 3318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3164,
											"end": 3318,
											"name": "tag",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 3164,
											"end": 3318,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3164,
											"end": 3318,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3164,
											"end": 3318,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3164,
											"end": 3318,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3164,
											"end": 3318,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3164,
											"end": 3318,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3164,
											"end": 3318,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3164,
											"end": 3318,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3164,
											"end": 3318,
											"name": "tag",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 3164,
											"end": 3318,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3406,
											"end": 3407,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3373,
											"end": 3408,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3373,
											"end": 3408,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3373,
											"end": 3380,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3373,
											"end": 3394,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 3373,
											"end": 3394,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3373,
											"end": 3394,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3373,
											"end": 3394,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3373,
											"end": 3394,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3373,
											"end": 3394,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3373,
											"end": 3394,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3373,
											"end": 3394,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3373,
											"end": 3394,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3373,
											"end": 3394,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3373,
											"end": 3394,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3373,
											"end": 3394,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3373,
											"end": 3408,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3373,
											"end": 3408,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3373,
											"end": 3408,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3369,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 3369,
											"end": 3494,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3432,
											"end": 3439,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3432,
											"end": 3453,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 3432,
											"end": 3453,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3432,
											"end": 3453,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3432,
											"end": 3453,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3432,
											"end": 3453,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3432,
											"end": 3453,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3432,
											"end": 3453,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3432,
											"end": 3453,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3432,
											"end": 3453,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3432,
											"end": 3453,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3432,
											"end": 3453,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3432,
											"end": 3453,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 3463,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3424,
											"end": 3463,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 3483,
											"name": "PUSH",
											"source": 12,
											"value": "8FC"
										},
										{
											"begin": 3464,
											"end": 3471,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3464,
											"end": 3482,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 3464,
											"end": 3482,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3464,
											"end": 3482,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 3483,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 3483,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 3483,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 3483,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 3483,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 3483,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3424,
											"end": 3483,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 3483,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3424,
											"end": 3483,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3424,
											"end": 3483,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 3483,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 3483,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 3483,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 3483,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 3483,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 3483,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 3483,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 3483,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 3483,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 3483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 3483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 3483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 3483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 3483,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 3483,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 3483,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 3424,
											"end": 3483,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 3483,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 3483,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3424,
											"end": 3483,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3424,
											"end": 3483,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 3483,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 3483,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3424,
											"end": 3483,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 3483,
											"name": "tag",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 3424,
											"end": 3483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 3483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3369,
											"end": 3494,
											"name": "tag",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 3369,
											"end": 3494,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3527,
											"end": 3537,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 3503,
											"end": 3510,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3503,
											"end": 3524,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 3503,
											"end": 3524,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3503,
											"end": 3524,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3503,
											"end": 3537,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3503,
											"end": 3537,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3503,
											"end": 3537,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3503,
											"end": 3537,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3503,
											"end": 3537,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3503,
											"end": 3537,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3503,
											"end": 3537,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 3503,
											"end": 3537,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 3503,
											"end": 3537,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3503,
											"end": 3537,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3503,
											"end": 3537,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3503,
											"end": 3537,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3503,
											"end": 3537,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3503,
											"end": 3537,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 3503,
											"end": 3537,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 3503,
											"end": 3537,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3503,
											"end": 3537,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3503,
											"end": 3537,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3568,
											"end": 3577,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 3547,
											"end": 3554,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3547,
											"end": 3565,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 3547,
											"end": 3565,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3547,
											"end": 3577,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3547,
											"end": 3577,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3547,
											"end": 3577,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3547,
											"end": 3577,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2913,
											"end": 3584,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2790,
											"end": 3584,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2790,
											"end": 3584,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2790,
											"end": 3584,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2790,
											"end": 3584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 2784,
											"name": "tag",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1818,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1996,
											"end": 2001,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1996,
											"end": 2001,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1996,
											"end": 2001,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1996,
											"end": 2001,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1996,
											"end": 2001,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1996,
											"end": 2001,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1996,
											"end": 2001,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1996,
											"end": 2001,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1996,
											"end": 2001,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1996,
											"end": 2001,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1996,
											"end": 2001,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1982,
											"end": 2001,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1982,
											"end": 2001,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1982,
											"end": 1992,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1982,
											"end": 2001,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1982,
											"end": 2001,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1982,
											"end": 2001,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1974,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 1974,
											"end": 2035,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1974,
											"end": 2035,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 2035,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1974,
											"end": 2035,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1974,
											"end": 2035,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1974,
											"end": 2035,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1974,
											"end": 2035,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1974,
											"end": 2035,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1974,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 1974,
											"end": 2035,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1974,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 1974,
											"end": 2035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1974,
											"end": 2035,
											"name": "tag",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 1974,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1974,
											"end": 2035,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 2035,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1974,
											"end": 2035,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1974,
											"end": 2035,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1974,
											"end": 2035,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1974,
											"end": 2035,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1974,
											"end": 2035,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1974,
											"end": 2035,
											"name": "tag",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 1974,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2066,
											"end": 2068,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 2053,
											"end": 2062,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2053,
											"end": 2068,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2053,
											"end": 2068,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2045,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 2045,
											"end": 2105,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2045,
											"end": 2105,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2045,
											"end": 2105,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2045,
											"end": 2105,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2045,
											"end": 2105,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2045,
											"end": 2105,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2045,
											"end": 2105,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2045,
											"end": 2105,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2045,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 2045,
											"end": 2105,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2045,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 2045,
											"end": 2105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2045,
											"end": 2105,
											"name": "tag",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 2045,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2045,
											"end": 2105,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2045,
											"end": 2105,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2045,
											"end": 2105,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2045,
											"end": 2105,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2045,
											"end": 2105,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2045,
											"end": 2105,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2045,
											"end": 2105,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2045,
											"end": 2105,
											"name": "tag",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 2045,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2137,
											"end": 2138,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2123,
											"end": 2134,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2123,
											"end": 2138,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2115,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 2115,
											"end": 2177,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2115,
											"end": 2177,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2115,
											"end": 2177,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2115,
											"end": 2177,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2115,
											"end": 2177,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2115,
											"end": 2177,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2115,
											"end": 2177,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2115,
											"end": 2177,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2115,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 2115,
											"end": 2177,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2115,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 2115,
											"end": 2177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2115,
											"end": 2177,
											"name": "tag",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 2115,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2115,
											"end": 2177,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2115,
											"end": 2177,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2115,
											"end": 2177,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2115,
											"end": 2177,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2115,
											"end": 2177,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2115,
											"end": 2177,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2115,
											"end": 2177,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2115,
											"end": 2177,
											"name": "tag",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 2115,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2226,
											"end": 2237,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2246,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2218,
											"end": 2246,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2246,
											"name": "PUSH",
											"source": 12,
											"value": "95EA7B3"
										},
										{
											"begin": 2255,
											"end": 2259,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 2262,
											"end": 2269,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 2218,
											"end": 2270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "tag",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "tag",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "tag",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2428,
											"end": 2439,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2462,
											"end": 2469,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2491,
											"end": 2501,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2534,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2560,
											"end": 2571,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2688,
											"end": 2703,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2592,
											"end": 2597,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2634,
											"end": 2635,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2662,
											"end": 2663,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2739,
											"end": 2740,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2393,
											"end": 2752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2375,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2390,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2376,
											"end": 2389,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2376,
											"end": 2389,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2390,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2390,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2390,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2367,
											"end": 2390,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2390,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2390,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2390,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2390,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2367,
											"end": 2390,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2390,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2390,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2762,
											"end": 2775,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2762,
											"end": 2775,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2762,
											"end": 2777,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2762,
											"end": 2777,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2762,
											"end": 2777,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2762,
											"end": 2777,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2762,
											"end": 2777,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2762,
											"end": 2777,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2762,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 2762,
											"end": 2777,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2762,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 2762,
											"end": 2777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2762,
											"end": 2777,
											"name": "tag",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 2762,
											"end": 2777,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2762,
											"end": 2777,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2762,
											"end": 2777,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2762,
											"end": 2777,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2762,
											"end": 2777,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2762,
											"end": 2777,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 2784,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 2784,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 2784,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 2784,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 2784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3610,
											"end": 4101,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 3610,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3667,
											"end": 3690,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3693,
											"end": 3701,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3693,
											"end": 3713,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3702,
											"end": 3712,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3693,
											"end": 3713,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3693,
											"end": 3713,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3693,
											"end": 3713,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3693,
											"end": 3713,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3693,
											"end": 3713,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3693,
											"end": 3713,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3693,
											"end": 3713,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3693,
											"end": 3713,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3693,
											"end": 3713,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3693,
											"end": 3713,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3693,
											"end": 3713,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3667,
											"end": 3713,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3667,
											"end": 3713,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3748,
											"end": 3753,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3731,
											"end": 3753,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3731,
											"end": 3753,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3731,
											"end": 3738,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3731,
											"end": 3744,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 3731,
											"end": 3744,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3731,
											"end": 3744,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3731,
											"end": 3744,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3731,
											"end": 3744,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3731,
											"end": 3744,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3731,
											"end": 3744,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3731,
											"end": 3744,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3731,
											"end": 3744,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3731,
											"end": 3744,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3731,
											"end": 3744,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 3731,
											"end": 3744,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3731,
											"end": 3753,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3731,
											"end": 3753,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3731,
											"end": 3753,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 3723,
											"end": 3775,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3775,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3723,
											"end": 3775,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3775,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3723,
											"end": 3775,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3775,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3775,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3723,
											"end": 3775,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 3723,
											"end": 3775,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 3723,
											"end": 3775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3775,
											"name": "tag",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 3723,
											"end": 3775,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3775,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3723,
											"end": 3775,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3775,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3775,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3775,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3775,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3775,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3775,
											"name": "tag",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 3723,
											"end": 3775,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3832,
											"end": 3839,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3832,
											"end": 3851,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3832,
											"end": 3851,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3832,
											"end": 3851,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3832,
											"end": 3851,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3832,
											"end": 3851,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3832,
											"end": 3851,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3832,
											"end": 3851,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3832,
											"end": 3851,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3832,
											"end": 3851,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3832,
											"end": 3851,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3832,
											"end": 3851,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3832,
											"end": 3851,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3865,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3824,
											"end": 3865,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3865,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 3879,
											"end": 3884,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 3879,
											"end": 3884,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3879,
											"end": 3884,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3879,
											"end": 3884,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3879,
											"end": 3884,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3879,
											"end": 3884,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3879,
											"end": 3884,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3879,
											"end": 3884,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3879,
											"end": 3884,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3879,
											"end": 3884,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3879,
											"end": 3884,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3898,
											"end": 3905,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3898,
											"end": 3919,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 3898,
											"end": 3919,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3898,
											"end": 3919,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3898,
											"end": 3919,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3898,
											"end": 3919,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3898,
											"end": 3919,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3898,
											"end": 3919,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3898,
											"end": 3919,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3898,
											"end": 3919,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3898,
											"end": 3919,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3898,
											"end": 3919,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3898,
											"end": 3919,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3933,
											"end": 3940,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3933,
											"end": 3948,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3933,
											"end": 3948,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3933,
											"end": 3948,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 3824,
											"end": 3958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "tag",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "tag",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "tag",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3958,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4026,
											"end": 4030,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4041,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4010,
											"end": 4041,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4064,
											"name": "PUSH",
											"source": 12,
											"value": "8FC"
										},
										{
											"begin": 4042,
											"end": 4063,
											"name": "SELFBALANCE",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4064,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4064,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4064,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4064,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4064,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4064,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4010,
											"end": 4064,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4064,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4010,
											"end": 4064,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4010,
											"end": 4064,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4064,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4064,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4064,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4064,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4064,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4064,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4064,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4064,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4064,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4064,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4064,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4064,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4064,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4064,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4064,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4064,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4064,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 4010,
											"end": 4064,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4064,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4064,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4010,
											"end": 4064,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4010,
											"end": 4064,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4064,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4064,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4010,
											"end": 4064,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4064,
											"name": "tag",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 4010,
											"end": 4064,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4064,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4090,
											"end": 4094,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4074,
											"end": 4081,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4074,
											"end": 4087,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 4074,
											"end": 4087,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4074,
											"end": 4087,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4074,
											"end": 4094,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 4074,
											"end": 4094,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 4074,
											"end": 4094,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4074,
											"end": 4094,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4074,
											"end": 4094,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4074,
											"end": 4094,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 4074,
											"end": 4094,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 4074,
											"end": 4094,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 4074,
											"end": 4094,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4074,
											"end": 4094,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4074,
											"end": 4094,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4074,
											"end": 4094,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4074,
											"end": 4094,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4074,
											"end": 4094,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 4074,
											"end": 4094,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 4074,
											"end": 4094,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4074,
											"end": 4094,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4074,
											"end": 4094,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3657,
											"end": 4101,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3610,
											"end": 4101,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3610,
											"end": 4101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "tag",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1199,
											"end": 1219,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1199,
											"end": 1219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "tag",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4578,
											"end": 4890,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4578,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4667,
											"end": 4673,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 4650,
											"end": 4673,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4650,
											"end": 4673,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4658,
											"end": 4662,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 4650,
											"end": 4673,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4650,
											"end": 4673,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4650,
											"end": 4673,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4764,
											"end": 4770,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 4728,
											"end": 4770,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4728,
											"end": 4770,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4728,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 4728,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 4728,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4728,
											"end": 4760,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 4728,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4728,
											"end": 4770,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4728,
											"end": 4770,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4728,
											"end": 4770,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4728,
											"end": 4770,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4633,
											"end": 4884,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4633,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 4633,
											"end": 4884,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "PUSH",
											"source": 2,
											"value": "E07C8DBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4633,
											"end": 4884,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 4633,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4177,
											"end": 4339,
											"name": "tag",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 4177,
											"end": 4339,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4300,
											"end": 4305,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 4300,
											"end": 4305,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4300,
											"end": 4305,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4300,
											"end": 4305,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4300,
											"end": 4305,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4300,
											"end": 4305,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 4300,
											"end": 4305,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 4300,
											"end": 4305,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4300,
											"end": 4305,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 4300,
											"end": 4305,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4300,
											"end": 4305,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4286,
											"end": 4305,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4286,
											"end": 4305,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4286,
											"end": 4296,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 4286,
											"end": 4305,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4286,
											"end": 4305,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4286,
											"end": 4305,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4278,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 4278,
											"end": 4332,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4278,
											"end": 4332,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4278,
											"end": 4332,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4278,
											"end": 4332,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4278,
											"end": 4332,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4278,
											"end": 4332,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4278,
											"end": 4332,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4278,
											"end": 4332,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4278,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 4278,
											"end": 4332,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4278,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 4278,
											"end": 4332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4278,
											"end": 4332,
											"name": "tag",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 4278,
											"end": 4332,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4278,
											"end": 4332,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4278,
											"end": 4332,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4278,
											"end": 4332,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4278,
											"end": 4332,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4278,
											"end": 4332,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4278,
											"end": 4332,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4278,
											"end": 4332,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4278,
											"end": 4332,
											"name": "tag",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 4278,
											"end": 4332,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4177,
											"end": 4339,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4177,
											"end": 4339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6032,
											"end": 6570,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 6032,
											"end": 6570,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6149,
											"end": 6166,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6181,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6131,
											"end": 6181,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6181,
											"name": "PUSH",
											"source": 2,
											"value": "52D1902D"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 6131,
											"end": 6183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6127,
											"end": 6564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 6127,
											"end": 6564,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6535,
											"end": 6552,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "PUSH",
											"source": 2,
											"value": "4C9C8CE300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 6493,
											"end": 6553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6127,
											"end": 6564,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 6127,
											"end": 6564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 811,
											"end": 877,
											"name": "PUSH",
											"source": 5,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 6233,
											"end": 6265,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6265,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6225,
											"end": 6229,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6225,
											"end": 6265,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6221,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 6221,
											"end": 6341,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6325,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "AA1D49A400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 6292,
											"end": 6326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6221,
											"end": 6341,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 6221,
											"end": 6341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 6384,
											"end": 6401,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6403,
											"end": 6407,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 6354,
											"end": 6408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6408,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 6354,
											"end": 6408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6184,
											"end": 6419,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6032,
											"end": 6570,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6032,
											"end": 6570,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6032,
											"end": 6570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5220,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 5007,
											"end": 5220,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5090,
											"end": 5096,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 5073,
											"end": 5096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5073,
											"end": 5096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5081,
											"end": 5085,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5073,
											"end": 5096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5096,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5069,
											"end": 5214,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 5069,
											"end": 5214,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "PUSH",
											"source": 2,
											"value": "E07C8DBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5069,
											"end": 5214,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 5069,
											"end": 5214,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9129,
											"end": 9159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9171,
											"end": 9183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 9186,
											"end": 9211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 9186,
											"end": 9213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9171,
											"end": 9213,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9171,
											"end": 9213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9256,
											"end": 9260,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9246,
											"end": 9260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9246,
											"end": 9260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9232,
											"end": 9270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9071,
											"end": 9276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1493,
											"end": 1500,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 811,
											"end": 877,
											"name": "PUSH",
											"source": 5,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1546,
											"end": 1565,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1565,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 1519,
											"end": 1566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1566,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 1519,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1512,
											"end": 1572,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1512,
											"end": 1572,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1441,
											"end": 1579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 2374,
											"end": 2391,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2355,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 2355,
											"end": 2392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2425,
											"end": 2442,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 5,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 2472,
											"end": 2473,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2458,
											"end": 2462,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2458,
											"end": 2469,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2458,
											"end": 2473,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 2518,
											"end": 2535,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2537,
											"end": 2541,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2489,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 2489,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 2573,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 2573,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2264,
											"end": 2608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8887,
											"end": 8894,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3213,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8913,
											"end": 8934,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8913,
											"end": 8934,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 8906,
											"end": 8934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8906,
											"end": 8934,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 8941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 1981,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2046,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2046,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2046,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1899,
											"end": 2062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1782,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1765,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1748,
											"end": 1782,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1834,
											"end": 1851,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 5,
											"value": "4C9C8CE300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1805,
											"end": 1852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1928,
											"end": 1945,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 811,
											"end": 877,
											"name": "PUSH",
											"source": 5,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1899,
											"end": 1918,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1899,
											"end": 1918,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 1872,
											"end": 1919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 1919,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 1872,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 1925,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1925,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 1925,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1671,
											"end": 1952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3999,
											"end": 4011,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4071,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4084,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4065,
											"end": 4084,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4085,
											"end": 4089,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 4065,
											"end": 4090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DELEGATECALL",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "tag",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4107,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 4134,
											"end": 4140,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4142,
											"end": 4149,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4161,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4107,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 4107,
											"end": 4162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4107,
											"end": 4162,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 4107,
											"end": 4162,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4100,
											"end": 4162,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4100,
											"end": 4162,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4100,
											"end": 4162,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4100,
											"end": 4162,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3916,
											"end": 4169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6235,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 6113,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6175,
											"end": 6176,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6163,
											"end": 6172,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6176,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 5,
											"value": "B398979F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6113,
											"end": 6235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4581,
											"end": 4593,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4610,
											"end": 4617,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 4641,
											"end": 4651,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 4633,
											"end": 4652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4878,
											"end": 4879,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4857,
											"end": 4867,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4857,
											"end": 4874,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4857,
											"end": 4879,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4905,
											"end": 4906,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4883,
											"end": 4889,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 4883,
											"end": 4906,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "tag",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4950,
											"end": 4956,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH",
											"source": 8,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 4933,
											"end": 4957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4992,
											"end": 5002,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4985,
											"end": 5002,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4985,
											"end": 5002,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4985,
											"end": 5002,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 4985,
											"end": 5002,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "tag",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4437,
											"end": 5019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5559,
											"end": 6046,
											"name": "tag",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 5559,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5710,
											"end": 5711,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5690,
											"end": 5700,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5690,
											"end": 5707,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5690,
											"end": 5711,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5887,
											"end": 5897,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5881,
											"end": 5898,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5943,
											"end": 5958,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5930,
											"end": 5940,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5926,
											"end": 5928,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5922,
											"end": 5941,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5915,
											"end": 5959,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 8,
											"value": "D6BDA27500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 958,
											"name": "tag",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 841,
											"end": 958,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 950,
											"end": 951,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 947,
											"end": 948,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 952,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 964,
											"end": 1081,
											"name": "tag",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 964,
											"end": 1081,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1073,
											"end": 1074,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1070,
											"end": 1071,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1075,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1087,
											"end": 1189,
											"name": "tag",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 1087,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1128,
											"end": 1134,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1179,
											"end": 1181,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1175,
											"end": 1182,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1170,
											"end": 1172,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1163,
											"end": 1168,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1159,
											"end": 1173,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1155,
											"end": 1183,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1145,
											"end": 1183,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1145,
											"end": 1183,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1087,
											"end": 1189,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1087,
											"end": 1189,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1087,
											"end": 1189,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1087,
											"end": 1189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1195,
											"end": 1375,
											"name": "tag",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 1195,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1243,
											"end": 1320,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1241,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1233,
											"end": 1321,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1340,
											"end": 1344,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 1337,
											"end": 1338,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1330,
											"end": 1345,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1368,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1354,
											"end": 1369,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1662,
											"name": "tag",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 1381,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1464,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 1486,
											"end": 1490,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1464,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 1464,
											"end": 1491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1464,
											"end": 1491,
											"name": "tag",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 1464,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1456,
											"end": 1462,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1452,
											"end": 1492,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1594,
											"end": 1600,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1582,
											"end": 1592,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1579,
											"end": 1601,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1558,
											"end": 1576,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1546,
											"end": 1556,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1543,
											"end": 1577,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1540,
											"end": 1602,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1625,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1625,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 1537,
											"end": 1625,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1605,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 1605,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 1605,
											"end": 1623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1605,
											"end": 1623,
											"name": "tag",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 1605,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1625,
											"name": "tag",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 1537,
											"end": 1625,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1641,
											"end": 1643,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1634,
											"end": 1656,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1424,
											"end": 1662,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1662,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1662,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1668,
											"end": 1797,
											"name": "tag",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 1668,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1702,
											"end": 1708,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 1729,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 1729,
											"end": 1749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1729,
											"end": 1749,
											"name": "tag",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 1729,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1719,
											"end": 1749,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1719,
											"end": 1749,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1758,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 1786,
											"end": 1790,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1778,
											"end": 1784,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1758,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 1758,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1758,
											"end": 1791,
											"name": "tag",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 1758,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1668,
											"end": 1797,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1668,
											"end": 1797,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1668,
											"end": 1797,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1668,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1803,
											"end": 2110,
											"name": "tag",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 1803,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1864,
											"end": 1868,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1954,
											"end": 1972,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1946,
											"end": 1952,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 1973,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1940,
											"end": 1996,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1940,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 1940,
											"end": 1996,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 1976,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 1976,
											"end": 1994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 1994,
											"name": "tag",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 1976,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1940,
											"end": 1996,
											"name": "tag",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 1940,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2014,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 2036,
											"end": 2042,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2014,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 2014,
											"end": 2043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2014,
											"end": 2043,
											"name": "tag",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 2014,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2006,
											"end": 2043,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2006,
											"end": 2043,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2098,
											"end": 2102,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2092,
											"end": 2096,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2103,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2080,
											"end": 2103,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2080,
											"end": 2103,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1803,
											"end": 2110,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1803,
											"end": 2110,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1803,
											"end": 2110,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1803,
											"end": 2110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2116,
											"end": 2264,
											"name": "tag",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 2116,
											"end": 2264,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2214,
											"end": 2220,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2209,
											"end": 2212,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2204,
											"end": 2207,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2191,
											"end": 2221,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 2255,
											"end": 2256,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2246,
											"end": 2252,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2241,
											"end": 2244,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2237,
											"end": 2253,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2230,
											"end": 2257,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2116,
											"end": 2264,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2116,
											"end": 2264,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2116,
											"end": 2264,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2116,
											"end": 2264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2270,
											"end": 2693,
											"name": "tag",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 2270,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2347,
											"end": 2352,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2372,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 2388,
											"end": 2436,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 2429,
											"end": 2435,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2388,
											"end": 2436,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 2388,
											"end": 2436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2388,
											"end": 2436,
											"name": "tag",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 2388,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2372,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 2372,
											"end": 2437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2372,
											"end": 2437,
											"name": "tag",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 2372,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2363,
											"end": 2437,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2363,
											"end": 2437,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2460,
											"end": 2466,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2453,
											"end": 2458,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2446,
											"end": 2467,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2498,
											"end": 2502,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2491,
											"end": 2496,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2487,
											"end": 2503,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2536,
											"end": 2539,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2527,
											"end": 2533,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2522,
											"end": 2525,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2518,
											"end": 2534,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2515,
											"end": 2540,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2512,
											"end": 2624,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2512,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 2512,
											"end": 2624,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2543,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 2543,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 2543,
											"end": 2622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2543,
											"end": 2622,
											"name": "tag",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 2543,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2512,
											"end": 2624,
											"name": "tag",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 2512,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2633,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 2680,
											"end": 2686,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2675,
											"end": 2678,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2670,
											"end": 2673,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2633,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 2633,
											"end": 2687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2633,
											"end": 2687,
											"name": "tag",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 2633,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2353,
											"end": 2693,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2270,
											"end": 2693,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2270,
											"end": 2693,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2270,
											"end": 2693,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2270,
											"end": 2693,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2270,
											"end": 2693,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2270,
											"end": 2693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2712,
											"end": 3050,
											"name": "tag",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 2712,
											"end": 3050,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2767,
											"end": 2772,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 2819,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2809,
											"end": 2813,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2801,
											"end": 2807,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2797,
											"end": 2814,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2793,
											"end": 2820,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2783,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 2783,
											"end": 2905,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2903,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 2824,
											"end": 2903,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 2824,
											"end": 2903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2903,
											"name": "tag",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 2824,
											"end": 2903,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2783,
											"end": 2905,
											"name": "tag",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 2783,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2941,
											"end": 2947,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2928,
											"end": 2948,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2966,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 3040,
											"end": 3043,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3032,
											"end": 3038,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3025,
											"end": 3029,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3017,
											"end": 3023,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3013,
											"end": 3030,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2966,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 2966,
											"end": 3044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2966,
											"end": 3044,
											"name": "tag",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 2966,
											"end": 3044,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2957,
											"end": 3044,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2957,
											"end": 3044,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2773,
											"end": 3050,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2712,
											"end": 3050,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2712,
											"end": 3050,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2712,
											"end": 3050,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2712,
											"end": 3050,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2712,
											"end": 3050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3056,
											"end": 3708,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3056,
											"end": 3708,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3139,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3141,
											"end": 3147,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3190,
											"end": 3192,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3178,
											"end": 3187,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3169,
											"end": 3176,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3165,
											"end": 3188,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3161,
											"end": 3193,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3158,
											"end": 3277,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3158,
											"end": 3277,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 3158,
											"end": 3277,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3196,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 3196,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 3196,
											"end": 3275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3196,
											"end": 3275,
											"name": "tag",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 3196,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3158,
											"end": 3277,
											"name": "tag",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 3158,
											"end": 3277,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3316,
											"end": 3317,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 3386,
											"end": 3393,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3377,
											"end": 3383,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3366,
											"end": 3375,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3362,
											"end": 3384,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3341,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 3341,
											"end": 3394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3341,
											"end": 3394,
											"name": "tag",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 3341,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3331,
											"end": 3394,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3331,
											"end": 3394,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3287,
											"end": 3404,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3473,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3460,
											"end": 3469,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3456,
											"end": 3474,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3443,
											"end": 3475,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3502,
											"end": 3520,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3494,
											"end": 3500,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3521,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3488,
											"end": 3605,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3488,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 3488,
											"end": 3605,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3524,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 3524,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 3524,
											"end": 3603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3524,
											"end": 3603,
											"name": "tag",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 3524,
											"end": 3603,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3488,
											"end": 3605,
											"name": "tag",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 3488,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3629,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 3683,
											"end": 3690,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3674,
											"end": 3680,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3663,
											"end": 3672,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3659,
											"end": 3681,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3629,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 3629,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3629,
											"end": 3691,
											"name": "tag",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 3629,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3619,
											"end": 3691,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3619,
											"end": 3691,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3414,
											"end": 3701,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3056,
											"end": 3708,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3056,
											"end": 3708,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3056,
											"end": 3708,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3056,
											"end": 3708,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3056,
											"end": 3708,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3056,
											"end": 3708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 3791,
											"name": "tag",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 3714,
											"end": 3791,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3751,
											"end": 3758,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3780,
											"end": 3785,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3769,
											"end": 3785,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3769,
											"end": 3785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 3791,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 3791,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 3791,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 3791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3797,
											"end": 3915,
											"name": "tag",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 3797,
											"end": 3915,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3884,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 3902,
											"end": 3907,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3884,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 3884,
											"end": 3908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3884,
											"end": 3908,
											"name": "tag",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 3884,
											"end": 3908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3879,
											"end": 3882,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3872,
											"end": 3909,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3797,
											"end": 3915,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3797,
											"end": 3915,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3797,
											"end": 3915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3921,
											"end": 4143,
											"name": "tag",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 3921,
											"end": 4143,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4014,
											"end": 4018,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4052,
											"end": 4054,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4041,
											"end": 4050,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4037,
											"end": 4055,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4029,
											"end": 4055,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4029,
											"end": 4055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4065,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 4133,
											"end": 4134,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4122,
											"end": 4131,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4118,
											"end": 4135,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4109,
											"end": 4115,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4065,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 4065,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4065,
											"end": 4136,
											"name": "tag",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 4065,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3921,
											"end": 4143,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3921,
											"end": 4143,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3921,
											"end": 4143,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3921,
											"end": 4143,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3921,
											"end": 4143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4149,
											"end": 4226,
											"name": "tag",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 4149,
											"end": 4226,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4186,
											"end": 4193,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4215,
											"end": 4220,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4220,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4220,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4149,
											"end": 4226,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4149,
											"end": 4226,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4149,
											"end": 4226,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4149,
											"end": 4226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4232,
											"end": 4354,
											"name": "tag",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 4232,
											"end": 4354,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4305,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 4323,
											"end": 4328,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4305,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 4305,
											"end": 4329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4305,
											"end": 4329,
											"name": "tag",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 4305,
											"end": 4329,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4298,
											"end": 4303,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4330,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4285,
											"end": 4348,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 4285,
											"end": 4348,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4344,
											"end": 4345,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4341,
											"end": 4342,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4334,
											"end": 4346,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4285,
											"end": 4348,
											"name": "tag",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 4285,
											"end": 4348,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4232,
											"end": 4354,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4232,
											"end": 4354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4360,
											"end": 4499,
											"name": "tag",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 4360,
											"end": 4499,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4406,
											"end": 4411,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4444,
											"end": 4450,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4431,
											"end": 4451,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4422,
											"end": 4451,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4422,
											"end": 4451,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4460,
											"end": 4493,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 4487,
											"end": 4492,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4460,
											"end": 4493,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 4460,
											"end": 4493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4460,
											"end": 4493,
											"name": "tag",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 4460,
											"end": 4493,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4360,
											"end": 4499,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4360,
											"end": 4499,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4360,
											"end": 4499,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4360,
											"end": 4499,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4360,
											"end": 4499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4505,
											"end": 4834,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 4505,
											"end": 4834,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4564,
											"end": 4570,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4613,
											"end": 4615,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4601,
											"end": 4610,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4592,
											"end": 4599,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4588,
											"end": 4611,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4584,
											"end": 4616,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4581,
											"end": 4700,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4581,
											"end": 4700,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 4581,
											"end": 4700,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4619,
											"end": 4698,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 4619,
											"end": 4698,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 4619,
											"end": 4698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4619,
											"end": 4698,
											"name": "tag",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 4619,
											"end": 4698,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4581,
											"end": 4700,
											"name": "tag",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 4581,
											"end": 4700,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4739,
											"end": 4740,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4764,
											"end": 4817,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 4809,
											"end": 4816,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4800,
											"end": 4806,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4789,
											"end": 4798,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4785,
											"end": 4807,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4764,
											"end": 4817,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 4764,
											"end": 4817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4764,
											"end": 4817,
											"name": "tag",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 4764,
											"end": 4817,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4754,
											"end": 4817,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4754,
											"end": 4817,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4710,
											"end": 4827,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4505,
											"end": 4834,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4505,
											"end": 4834,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4505,
											"end": 4834,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4505,
											"end": 4834,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4505,
											"end": 4834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4840,
											"end": 4958,
											"name": "tag",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 4840,
											"end": 4958,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4927,
											"end": 4951,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 4945,
											"end": 4950,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4927,
											"end": 4951,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 4927,
											"end": 4951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4927,
											"end": 4951,
											"name": "tag",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 4927,
											"end": 4951,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4922,
											"end": 4925,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4915,
											"end": 4952,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4840,
											"end": 4958,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4840,
											"end": 4958,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4840,
											"end": 4958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4964,
											"end": 5082,
											"name": "tag",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 4964,
											"end": 5082,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5051,
											"end": 5075,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 5069,
											"end": 5074,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5051,
											"end": 5075,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 5051,
											"end": 5075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5051,
											"end": 5075,
											"name": "tag",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 5051,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5046,
											"end": 5049,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5039,
											"end": 5076,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4964,
											"end": 5082,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4964,
											"end": 5082,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4964,
											"end": 5082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5088,
											"end": 5178,
											"name": "tag",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 5088,
											"end": 5178,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5122,
											"end": 5129,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5165,
											"end": 5170,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5158,
											"end": 5171,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5151,
											"end": 5172,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5140,
											"end": 5172,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5140,
											"end": 5172,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5088,
											"end": 5178,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5088,
											"end": 5178,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5088,
											"end": 5178,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5088,
											"end": 5178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5184,
											"end": 5293,
											"name": "tag",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 5184,
											"end": 5293,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5265,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 5280,
											"end": 5285,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5265,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 5265,
											"end": 5286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5265,
											"end": 5286,
											"name": "tag",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 5265,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5260,
											"end": 5263,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5253,
											"end": 5287,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5184,
											"end": 5293,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5184,
											"end": 5293,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5184,
											"end": 5293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5299,
											"end": 6506,
											"name": "tag",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 5299,
											"end": 6506,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5638,
											"end": 5642,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5676,
											"end": 5679,
											"name": "PUSH",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 5665,
											"end": 5674,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5661,
											"end": 5680,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5653,
											"end": 5680,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5653,
											"end": 5680,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5690,
											"end": 5761,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 5758,
											"end": 5759,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5747,
											"end": 5756,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5743,
											"end": 5760,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5734,
											"end": 5740,
											"name": "DUP14",
											"source": 13
										},
										{
											"begin": 5690,
											"end": 5761,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 5690,
											"end": 5761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5690,
											"end": 5761,
											"name": "tag",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 5690,
											"end": 5761,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5771,
											"end": 5843,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 5839,
											"end": 5841,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5828,
											"end": 5837,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5824,
											"end": 5842,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5815,
											"end": 5821,
											"name": "DUP13",
											"source": 13
										},
										{
											"begin": 5771,
											"end": 5843,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 5771,
											"end": 5843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5771,
											"end": 5843,
											"name": "tag",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 5771,
											"end": 5843,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5853,
											"end": 5925,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 5921,
											"end": 5923,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5910,
											"end": 5919,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5906,
											"end": 5924,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5897,
											"end": 5903,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 5853,
											"end": 5925,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 5853,
											"end": 5925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5853,
											"end": 5925,
											"name": "tag",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 5853,
											"end": 5925,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5935,
											"end": 6007,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 6003,
											"end": 6005,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5992,
											"end": 6001,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6006,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5979,
											"end": 5985,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 5935,
											"end": 6007,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 5935,
											"end": 6007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5935,
											"end": 6007,
											"name": "tag",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 5935,
											"end": 6007,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6017,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 6085,
											"end": 6088,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 6074,
											"end": 6083,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6070,
											"end": 6089,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6061,
											"end": 6067,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 6017,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 6017,
											"end": 6090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6017,
											"end": 6090,
											"name": "tag",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 6017,
											"end": 6090,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6100,
											"end": 6173,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 6168,
											"end": 6171,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 6157,
											"end": 6166,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6153,
											"end": 6172,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6144,
											"end": 6150,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6100,
											"end": 6173,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 6100,
											"end": 6173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6100,
											"end": 6173,
											"name": "tag",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 6100,
											"end": 6173,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6183,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 6245,
											"end": 6248,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 6234,
											"end": 6243,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6230,
											"end": 6249,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6221,
											"end": 6227,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6183,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 6183,
											"end": 6250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6183,
											"end": 6250,
											"name": "tag",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 6183,
											"end": 6250,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6260,
											"end": 6333,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 6328,
											"end": 6331,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 6317,
											"end": 6326,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6313,
											"end": 6332,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6304,
											"end": 6310,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6260,
											"end": 6333,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 6260,
											"end": 6333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6260,
											"end": 6333,
											"name": "tag",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 6260,
											"end": 6333,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6343,
											"end": 6416,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 6411,
											"end": 6414,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 6400,
											"end": 6409,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6396,
											"end": 6415,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6387,
											"end": 6393,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6343,
											"end": 6416,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 6343,
											"end": 6416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6343,
											"end": 6416,
											"name": "tag",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 6343,
											"end": 6416,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6426,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "PUSH",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 6483,
											"end": 6492,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6479,
											"end": 6498,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6470,
											"end": 6476,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6426,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 6426,
											"end": 6499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6426,
											"end": 6499,
											"name": "tag",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 6426,
											"end": 6499,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5299,
											"end": 6506,
											"name": "SWAP12",
											"source": 13
										},
										{
											"begin": 5299,
											"end": 6506,
											"name": "SWAP11",
											"source": 13
										},
										{
											"begin": 5299,
											"end": 6506,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5299,
											"end": 6506,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5299,
											"end": 6506,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5299,
											"end": 6506,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5299,
											"end": 6506,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5299,
											"end": 6506,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5299,
											"end": 6506,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5299,
											"end": 6506,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5299,
											"end": 6506,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5299,
											"end": 6506,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5299,
											"end": 6506,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5299,
											"end": 6506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6512,
											"end": 6841,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 6512,
											"end": 6841,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6571,
											"end": 6577,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6620,
											"end": 6622,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6608,
											"end": 6617,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6599,
											"end": 6606,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6595,
											"end": 6618,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6591,
											"end": 6623,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6588,
											"end": 6707,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6588,
											"end": 6707,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 6588,
											"end": 6707,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6626,
											"end": 6705,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 6626,
											"end": 6705,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 6626,
											"end": 6705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6626,
											"end": 6705,
											"name": "tag",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 6626,
											"end": 6705,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6588,
											"end": 6707,
											"name": "tag",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 6588,
											"end": 6707,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6746,
											"end": 6747,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6771,
											"end": 6824,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 6816,
											"end": 6823,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6807,
											"end": 6813,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6796,
											"end": 6805,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6792,
											"end": 6814,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6771,
											"end": 6824,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 6771,
											"end": 6824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6771,
											"end": 6824,
											"name": "tag",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 6771,
											"end": 6824,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6761,
											"end": 6824,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6761,
											"end": 6824,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6717,
											"end": 6834,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6512,
											"end": 6841,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6512,
											"end": 6841,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6512,
											"end": 6841,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6512,
											"end": 6841,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6512,
											"end": 6841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6847,
											"end": 6923,
											"name": "tag",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 6847,
											"end": 6923,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6883,
											"end": 6890,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6912,
											"end": 6917,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6901,
											"end": 6917,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6901,
											"end": 6917,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6847,
											"end": 6923,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6847,
											"end": 6923,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6847,
											"end": 6923,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6847,
											"end": 6923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6929,
											"end": 7044,
											"name": "tag",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 6929,
											"end": 7044,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7014,
											"end": 7037,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 7031,
											"end": 7036,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7014,
											"end": 7037,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 7014,
											"end": 7037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7014,
											"end": 7037,
											"name": "tag",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 7014,
											"end": 7037,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7009,
											"end": 7012,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7002,
											"end": 7038,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6929,
											"end": 7044,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6929,
											"end": 7044,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6929,
											"end": 7044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7050,
											"end": 7268,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 7050,
											"end": 7268,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7141,
											"end": 7145,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7179,
											"end": 7181,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7168,
											"end": 7177,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7164,
											"end": 7182,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7156,
											"end": 7182,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7156,
											"end": 7182,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7192,
											"end": 7261,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 7258,
											"end": 7259,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7247,
											"end": 7256,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7243,
											"end": 7260,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7234,
											"end": 7240,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7192,
											"end": 7261,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 7192,
											"end": 7261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7192,
											"end": 7261,
											"name": "tag",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 7192,
											"end": 7261,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7050,
											"end": 7268,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7050,
											"end": 7268,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7050,
											"end": 7268,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7050,
											"end": 7268,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7050,
											"end": 7268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7274,
											"end": 7373,
											"name": "tag",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 7274,
											"end": 7373,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7326,
											"end": 7332,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7360,
											"end": 7365,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7354,
											"end": 7366,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7344,
											"end": 7366,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7344,
											"end": 7366,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7274,
											"end": 7373,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7274,
											"end": 7373,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7274,
											"end": 7373,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7274,
											"end": 7373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7379,
											"end": 7548,
											"name": "tag",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 7379,
											"end": 7548,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7463,
											"end": 7474,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7497,
											"end": 7503,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7492,
											"end": 7495,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7485,
											"end": 7504,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7537,
											"end": 7541,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7532,
											"end": 7535,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7528,
											"end": 7542,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7513,
											"end": 7542,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7513,
											"end": 7542,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7379,
											"end": 7548,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7379,
											"end": 7548,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7379,
											"end": 7548,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7379,
											"end": 7548,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7379,
											"end": 7548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7554,
											"end": 7693,
											"name": "tag",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 7554,
											"end": 7693,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7643,
											"end": 7649,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7638,
											"end": 7641,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7633,
											"end": 7636,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7627,
											"end": 7650,
											"name": "MCOPY",
											"source": 13
										},
										{
											"begin": 7684,
											"end": 7685,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7675,
											"end": 7681,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7670,
											"end": 7673,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7666,
											"end": 7682,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7659,
											"end": 7686,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7554,
											"end": 7693,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7554,
											"end": 7693,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7554,
											"end": 7693,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7554,
											"end": 7693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7699,
											"end": 8076,
											"name": "tag",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 7699,
											"end": 8076,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7787,
											"end": 7790,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7815,
											"end": 7854,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 7848,
											"end": 7853,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7815,
											"end": 7854,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 7815,
											"end": 7854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7815,
											"end": 7854,
											"name": "tag",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 7815,
											"end": 7854,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7870,
											"end": 7941,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 7934,
											"end": 7940,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7929,
											"end": 7932,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7870,
											"end": 7941,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 7870,
											"end": 7941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7870,
											"end": 7941,
											"name": "tag",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 7870,
											"end": 7941,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7863,
											"end": 7941,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7863,
											"end": 7941,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7950,
											"end": 8015,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 8008,
											"end": 8014,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8003,
											"end": 8006,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7996,
											"end": 8000,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7989,
											"end": 7994,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7985,
											"end": 8001,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7950,
											"end": 8015,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 7950,
											"end": 8015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7950,
											"end": 8015,
											"name": "tag",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 7950,
											"end": 8015,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8040,
											"end": 8069,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 8062,
											"end": 8068,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8040,
											"end": 8069,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 8040,
											"end": 8069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8040,
											"end": 8069,
											"name": "tag",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 8040,
											"end": 8069,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8035,
											"end": 8038,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8031,
											"end": 8070,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8024,
											"end": 8070,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8024,
											"end": 8070,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7791,
											"end": 8076,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7699,
											"end": 8076,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7699,
											"end": 8076,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7699,
											"end": 8076,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7699,
											"end": 8076,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7699,
											"end": 8076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8082,
											"end": 8395,
											"name": "tag",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 8082,
											"end": 8395,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8195,
											"end": 8199,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8233,
											"end": 8235,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8222,
											"end": 8231,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8218,
											"end": 8236,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8282,
											"end": 8291,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8276,
											"end": 8280,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8272,
											"end": 8292,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8268,
											"end": 8269,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8257,
											"end": 8266,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8253,
											"end": 8270,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8246,
											"end": 8293,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8310,
											"end": 8388,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 8383,
											"end": 8387,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8374,
											"end": 8380,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8310,
											"end": 8388,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 8310,
											"end": 8388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8310,
											"end": 8388,
											"name": "tag",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 8310,
											"end": 8388,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8302,
											"end": 8388,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8302,
											"end": 8388,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8082,
											"end": 8395,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8082,
											"end": 8395,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8082,
											"end": 8395,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8082,
											"end": 8395,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8082,
											"end": 8395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8401,
											"end": 9020,
											"name": "tag",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 8401,
											"end": 9020,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8478,
											"end": 8484,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8486,
											"end": 8492,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8494,
											"end": 8500,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8543,
											"end": 8545,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 8531,
											"end": 8540,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8522,
											"end": 8529,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8518,
											"end": 8541,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8514,
											"end": 8546,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 8511,
											"end": 8630,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8511,
											"end": 8630,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 8511,
											"end": 8630,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8549,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 8549,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 8549,
											"end": 8628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8549,
											"end": 8628,
											"name": "tag",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 8549,
											"end": 8628,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8511,
											"end": 8630,
											"name": "tag",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 8511,
											"end": 8630,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8669,
											"end": 8670,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8694,
											"end": 8747,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 8739,
											"end": 8746,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8730,
											"end": 8736,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8719,
											"end": 8728,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 8715,
											"end": 8737,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8694,
											"end": 8747,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 8694,
											"end": 8747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8694,
											"end": 8747,
											"name": "tag",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 8694,
											"end": 8747,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8684,
											"end": 8747,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8684,
											"end": 8747,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8640,
											"end": 8757,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8796,
											"end": 8798,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8822,
											"end": 8875,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 8867,
											"end": 8874,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8858,
											"end": 8864,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8847,
											"end": 8856,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 8843,
											"end": 8865,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8822,
											"end": 8875,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 8822,
											"end": 8875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8822,
											"end": 8875,
											"name": "tag",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 8822,
											"end": 8875,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8812,
											"end": 8875,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8812,
											"end": 8875,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8767,
											"end": 8885,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8924,
											"end": 8926,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8950,
											"end": 9003,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 8995,
											"end": 9002,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8986,
											"end": 8992,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8975,
											"end": 8984,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 8971,
											"end": 8993,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8950,
											"end": 9003,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 8950,
											"end": 9003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8950,
											"end": 9003,
											"name": "tag",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 8950,
											"end": 9003,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8940,
											"end": 9003,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8940,
											"end": 9003,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8895,
											"end": 9013,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8401,
											"end": 9020,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8401,
											"end": 9020,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8401,
											"end": 9020,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8401,
											"end": 9020,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8401,
											"end": 9020,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8401,
											"end": 9020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9026,
											"end": 9791,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 9026,
											"end": 9791,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9112,
											"end": 9118,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9120,
											"end": 9126,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9128,
											"end": 9134,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9136,
											"end": 9142,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9185,
											"end": 9188,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 9173,
											"end": 9182,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9164,
											"end": 9171,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 9160,
											"end": 9183,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9156,
											"end": 9189,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 9153,
											"end": 9273,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9153,
											"end": 9273,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 9153,
											"end": 9273,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9192,
											"end": 9271,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 9192,
											"end": 9271,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 9192,
											"end": 9271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9192,
											"end": 9271,
											"name": "tag",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 9192,
											"end": 9271,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9153,
											"end": 9273,
											"name": "tag",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 9153,
											"end": 9273,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9312,
											"end": 9313,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9337,
											"end": 9390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 9382,
											"end": 9389,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 9373,
											"end": 9379,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9362,
											"end": 9371,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 9358,
											"end": 9380,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9337,
											"end": 9390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 9337,
											"end": 9390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9337,
											"end": 9390,
											"name": "tag",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 9337,
											"end": 9390,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9327,
											"end": 9390,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 9327,
											"end": 9390,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9283,
											"end": 9400,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9439,
											"end": 9441,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9465,
											"end": 9518,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 9510,
											"end": 9517,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 9501,
											"end": 9507,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9490,
											"end": 9499,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 9486,
											"end": 9508,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9465,
											"end": 9518,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 9465,
											"end": 9518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9465,
											"end": 9518,
											"name": "tag",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 9465,
											"end": 9518,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9455,
											"end": 9518,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9455,
											"end": 9518,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9410,
											"end": 9528,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9567,
											"end": 9569,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9593,
											"end": 9646,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 9638,
											"end": 9645,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 9629,
											"end": 9635,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9618,
											"end": 9627,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 9614,
											"end": 9636,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9593,
											"end": 9646,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 9593,
											"end": 9646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9593,
											"end": 9646,
											"name": "tag",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 9593,
											"end": 9646,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9583,
											"end": 9646,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9583,
											"end": 9646,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9538,
											"end": 9656,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9695,
											"end": 9697,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 9721,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 9766,
											"end": 9773,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 9757,
											"end": 9763,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9746,
											"end": 9755,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 9742,
											"end": 9764,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9721,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 9721,
											"end": 9774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9721,
											"end": 9774,
											"name": "tag",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 9721,
											"end": 9774,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9711,
											"end": 9774,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9711,
											"end": 9774,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9666,
											"end": 9784,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9026,
											"end": 9791,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9026,
											"end": 9791,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 9026,
											"end": 9791,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9026,
											"end": 9791,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 9026,
											"end": 9791,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9026,
											"end": 9791,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9026,
											"end": 9791,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9026,
											"end": 9791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9797,
											"end": 10019,
											"name": "tag",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 9797,
											"end": 10019,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9890,
											"end": 9894,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9928,
											"end": 9930,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9917,
											"end": 9926,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9913,
											"end": 9931,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9905,
											"end": 9931,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9905,
											"end": 9931,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9941,
											"end": 10012,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 10009,
											"end": 10010,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9998,
											"end": 10007,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9994,
											"end": 10011,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9985,
											"end": 9991,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9941,
											"end": 10012,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 9941,
											"end": 10012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9941,
											"end": 10012,
											"name": "tag",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 9941,
											"end": 10012,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9797,
											"end": 10019,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9797,
											"end": 10019,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9797,
											"end": 10019,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9797,
											"end": 10019,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9797,
											"end": 10019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10025,
											"end": 10247,
											"name": "tag",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 10025,
											"end": 10247,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10118,
											"end": 10122,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10156,
											"end": 10158,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10145,
											"end": 10154,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10141,
											"end": 10159,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10133,
											"end": 10159,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10133,
											"end": 10159,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10169,
											"end": 10240,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 10237,
											"end": 10238,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10226,
											"end": 10235,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10222,
											"end": 10239,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10213,
											"end": 10219,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10169,
											"end": 10240,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 10169,
											"end": 10240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10169,
											"end": 10240,
											"name": "tag",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 10169,
											"end": 10240,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10025,
											"end": 10247,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10025,
											"end": 10247,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10025,
											"end": 10247,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10025,
											"end": 10247,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10025,
											"end": 10247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10253,
											"end": 10338,
											"name": "tag",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 10253,
											"end": 10338,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10298,
											"end": 10305,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10327,
											"end": 10332,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10316,
											"end": 10332,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10316,
											"end": 10332,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10253,
											"end": 10338,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10253,
											"end": 10338,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10253,
											"end": 10338,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10253,
											"end": 10338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10344,
											"end": 10445,
											"name": "tag",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 10344,
											"end": 10445,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10380,
											"end": 10387,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10420,
											"end": 10438,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10413,
											"end": 10418,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10409,
											"end": 10439,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10398,
											"end": 10439,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10398,
											"end": 10439,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10344,
											"end": 10445,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10344,
											"end": 10445,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10344,
											"end": 10445,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10344,
											"end": 10445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10451,
											"end": 10511,
											"name": "tag",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 10451,
											"end": 10511,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10479,
											"end": 10482,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10500,
											"end": 10505,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10493,
											"end": 10505,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10493,
											"end": 10505,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10451,
											"end": 10511,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10451,
											"end": 10511,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10451,
											"end": 10511,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10451,
											"end": 10511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10517,
											"end": 10673,
											"name": "tag",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 10517,
											"end": 10673,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10574,
											"end": 10583,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10607,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 10624,
											"end": 10666,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 10659,
											"end": 10664,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 10633,
											"end": 10665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "tag",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10624,
											"end": 10666,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 10624,
											"end": 10666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10624,
											"end": 10666,
											"name": "tag",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 10624,
											"end": 10666,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10607,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 10607,
											"end": 10667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10607,
											"end": 10667,
											"name": "tag",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 10607,
											"end": 10667,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10594,
											"end": 10667,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10594,
											"end": 10667,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10517,
											"end": 10673,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10517,
											"end": 10673,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10517,
											"end": 10673,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10517,
											"end": 10673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10679,
											"end": 10824,
											"name": "tag",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 10679,
											"end": 10824,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10773,
											"end": 10817,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 10811,
											"end": 10816,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10773,
											"end": 10817,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 10773,
											"end": 10817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10773,
											"end": 10817,
											"name": "tag",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 10773,
											"end": 10817,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10768,
											"end": 10771,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10761,
											"end": 10818,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10679,
											"end": 10824,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10679,
											"end": 10824,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10679,
											"end": 10824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10830,
											"end": 11066,
											"name": "tag",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 10830,
											"end": 11066,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10930,
											"end": 10934,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10968,
											"end": 10970,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10957,
											"end": 10966,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10953,
											"end": 10971,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10945,
											"end": 10971,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10945,
											"end": 10971,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10981,
											"end": 11059,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 11056,
											"end": 11057,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11041,
											"end": 11058,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11032,
											"end": 11038,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10981,
											"end": 11059,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 10981,
											"end": 11059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10981,
											"end": 11059,
											"name": "tag",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 10981,
											"end": 11059,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10830,
											"end": 11066,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10830,
											"end": 11066,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10830,
											"end": 11066,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10830,
											"end": 11066,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10830,
											"end": 11066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11072,
											"end": 11177,
											"name": "tag",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 11072,
											"end": 11177,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11108,
											"end": 11115,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11148,
											"end": 11170,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11141,
											"end": 11146,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11137,
											"end": 11171,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11126,
											"end": 11171,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11126,
											"end": 11171,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11072,
											"end": 11177,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11072,
											"end": 11177,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11072,
											"end": 11177,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11072,
											"end": 11177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11183,
											"end": 11303,
											"name": "tag",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 11183,
											"end": 11303,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11255,
											"end": 11278,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 11272,
											"end": 11277,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11255,
											"end": 11278,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 11255,
											"end": 11278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11255,
											"end": 11278,
											"name": "tag",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 11255,
											"end": 11278,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11248,
											"end": 11253,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11245,
											"end": 11279,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 11235,
											"end": 11297,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 11235,
											"end": 11297,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11293,
											"end": 11294,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11290,
											"end": 11291,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11283,
											"end": 11295,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 11235,
											"end": 11297,
											"name": "tag",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 11235,
											"end": 11297,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11183,
											"end": 11303,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11183,
											"end": 11303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11309,
											"end": 11450,
											"name": "tag",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 11309,
											"end": 11450,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11365,
											"end": 11370,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11396,
											"end": 11402,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11390,
											"end": 11403,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 11381,
											"end": 11403,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11381,
											"end": 11403,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11412,
											"end": 11444,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 11438,
											"end": 11443,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11412,
											"end": 11444,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 11412,
											"end": 11444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11412,
											"end": 11444,
											"name": "tag",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 11412,
											"end": 11444,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11309,
											"end": 11450,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11309,
											"end": 11450,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11309,
											"end": 11450,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11309,
											"end": 11450,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11309,
											"end": 11450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11456,
											"end": 11576,
											"name": "tag",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 11456,
											"end": 11576,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11528,
											"end": 11551,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 11545,
											"end": 11550,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11528,
											"end": 11551,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 11528,
											"end": 11551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11528,
											"end": 11551,
											"name": "tag",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 11528,
											"end": 11551,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11521,
											"end": 11526,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11518,
											"end": 11552,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 11508,
											"end": 11570,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 11508,
											"end": 11570,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11566,
											"end": 11567,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11563,
											"end": 11564,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11556,
											"end": 11568,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 11508,
											"end": 11570,
											"name": "tag",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 11508,
											"end": 11570,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11456,
											"end": 11576,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11456,
											"end": 11576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11582,
											"end": 11723,
											"name": "tag",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 11582,
											"end": 11723,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11638,
											"end": 11643,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11669,
											"end": 11675,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11663,
											"end": 11676,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 11654,
											"end": 11676,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11654,
											"end": 11676,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11685,
											"end": 11717,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 11711,
											"end": 11716,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11685,
											"end": 11717,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 11685,
											"end": 11717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11685,
											"end": 11717,
											"name": "tag",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 11685,
											"end": 11717,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11582,
											"end": 11723,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11582,
											"end": 11723,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11582,
											"end": 11723,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11582,
											"end": 11723,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11582,
											"end": 11723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11729,
											"end": 11872,
											"name": "tag",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 11729,
											"end": 11872,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11786,
											"end": 11791,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11817,
											"end": 11823,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11811,
											"end": 11824,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 11802,
											"end": 11824,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11802,
											"end": 11824,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11833,
											"end": 11866,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 11860,
											"end": 11865,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11833,
											"end": 11866,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 11833,
											"end": 11866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11833,
											"end": 11866,
											"name": "tag",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 11833,
											"end": 11866,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11729,
											"end": 11872,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11729,
											"end": 11872,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11729,
											"end": 11872,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11729,
											"end": 11872,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11729,
											"end": 11872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11878,
											"end": 12849,
											"name": "tag",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 11878,
											"end": 12849,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11981,
											"end": 11987,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11989,
											"end": 11995,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11997,
											"end": 12003,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12005,
											"end": 12011,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12013,
											"end": 12019,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12062,
											"end": 12065,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 12050,
											"end": 12059,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12041,
											"end": 12048,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 12037,
											"end": 12060,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12033,
											"end": 12066,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 12030,
											"end": 12150,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12030,
											"end": 12150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 12030,
											"end": 12150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12069,
											"end": 12148,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 12069,
											"end": 12148,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 12069,
											"end": 12148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12069,
											"end": 12148,
											"name": "tag",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 12069,
											"end": 12148,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12030,
											"end": 12150,
											"name": "tag",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 12030,
											"end": 12150,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12189,
											"end": 12190,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12214,
											"end": 12277,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 12269,
											"end": 12276,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 12260,
											"end": 12266,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12249,
											"end": 12258,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 12245,
											"end": 12267,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12214,
											"end": 12277,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 12214,
											"end": 12277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12214,
											"end": 12277,
											"name": "tag",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 12214,
											"end": 12277,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12204,
											"end": 12277,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 12204,
											"end": 12277,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12160,
											"end": 12287,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12326,
											"end": 12328,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12352,
											"end": 12415,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 12407,
											"end": 12414,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 12398,
											"end": 12404,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12387,
											"end": 12396,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 12383,
											"end": 12405,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12352,
											"end": 12415,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 12352,
											"end": 12415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12352,
											"end": 12415,
											"name": "tag",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 12352,
											"end": 12415,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12342,
											"end": 12415,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 12342,
											"end": 12415,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12297,
											"end": 12425,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12464,
											"end": 12466,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12490,
											"end": 12554,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 12546,
											"end": 12553,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 12537,
											"end": 12543,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12526,
											"end": 12535,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 12522,
											"end": 12544,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12490,
											"end": 12554,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 12490,
											"end": 12554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12490,
											"end": 12554,
											"name": "tag",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 12490,
											"end": 12554,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12480,
											"end": 12554,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 12480,
											"end": 12554,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12435,
											"end": 12564,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12603,
											"end": 12605,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 12629,
											"end": 12693,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 12685,
											"end": 12692,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 12676,
											"end": 12682,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12665,
											"end": 12674,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 12661,
											"end": 12683,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12629,
											"end": 12693,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 12629,
											"end": 12693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12629,
											"end": 12693,
											"name": "tag",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 12629,
											"end": 12693,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12619,
											"end": 12693,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12619,
											"end": 12693,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12574,
											"end": 12703,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12742,
											"end": 12745,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 12769,
											"end": 12832,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 12824,
											"end": 12831,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 12815,
											"end": 12821,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12804,
											"end": 12813,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 12800,
											"end": 12822,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12769,
											"end": 12832,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 12769,
											"end": 12832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12769,
											"end": 12832,
											"name": "tag",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 12769,
											"end": 12832,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12759,
											"end": 12832,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12759,
											"end": 12832,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12713,
											"end": 12842,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11878,
											"end": 12849,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11878,
											"end": 12849,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 11878,
											"end": 12849,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11878,
											"end": 12849,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11878,
											"end": 12849,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 11878,
											"end": 12849,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11878,
											"end": 12849,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 11878,
											"end": 12849,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11878,
											"end": 12849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12855,
											"end": 13035,
											"name": "tag",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 12855,
											"end": 13035,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12903,
											"end": 12980,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12900,
											"end": 12901,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12893,
											"end": 12981,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13000,
											"end": 13004,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 12997,
											"end": 12998,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 12990,
											"end": 13005,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13024,
											"end": 13028,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 13021,
											"end": 13022,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13014,
											"end": 13029,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 13041,
											"end": 13232,
											"name": "tag",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 13041,
											"end": 13232,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13081,
											"end": 13084,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13100,
											"end": 13120,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 13118,
											"end": 13119,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13100,
											"end": 13120,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 13100,
											"end": 13120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13100,
											"end": 13120,
											"name": "tag",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 13100,
											"end": 13120,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13095,
											"end": 13120,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13095,
											"end": 13120,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13134,
											"end": 13154,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 13152,
											"end": 13153,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13134,
											"end": 13154,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 13134,
											"end": 13154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13134,
											"end": 13154,
											"name": "tag",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 13134,
											"end": 13154,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13129,
											"end": 13154,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13129,
											"end": 13154,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13177,
											"end": 13178,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13174,
											"end": 13175,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13170,
											"end": 13179,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13163,
											"end": 13179,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13163,
											"end": 13179,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13198,
											"end": 13201,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13195,
											"end": 13196,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13192,
											"end": 13202,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 13189,
											"end": 13225,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13189,
											"end": 13225,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 13189,
											"end": 13225,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13205,
											"end": 13223,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 13205,
											"end": 13223,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 13205,
											"end": 13223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13205,
											"end": 13223,
											"name": "tag",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 13205,
											"end": 13223,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13189,
											"end": 13225,
											"name": "tag",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 13189,
											"end": 13225,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13041,
											"end": 13232,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13041,
											"end": 13232,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13041,
											"end": 13232,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13041,
											"end": 13232,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13041,
											"end": 13232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13238,
											"end": 13405,
											"name": "tag",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 13238,
											"end": 13405,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13378,
											"end": 13397,
											"name": "PUSH",
											"source": 13,
											"value": "41756374696F6E2068617320656E646564000000000000000000000000000000"
										},
										{
											"begin": 13374,
											"end": 13375,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13366,
											"end": 13372,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13362,
											"end": 13376,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13355,
											"end": 13398,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13238,
											"end": 13405,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13238,
											"end": 13405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13411,
											"end": 13777,
											"name": "tag",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 13411,
											"end": 13777,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13553,
											"end": 13556,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13574,
											"end": 13641,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 13638,
											"end": 13640,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 13633,
											"end": 13636,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13574,
											"end": 13641,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 13574,
											"end": 13641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13574,
											"end": 13641,
											"name": "tag",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 13574,
											"end": 13641,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13567,
											"end": 13641,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13567,
											"end": 13641,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13650,
											"end": 13743,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 13739,
											"end": 13742,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13650,
											"end": 13743,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 13650,
											"end": 13743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13650,
											"end": 13743,
											"name": "tag",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 13650,
											"end": 13743,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13768,
											"end": 13770,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13763,
											"end": 13766,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13759,
											"end": 13771,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13752,
											"end": 13771,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13752,
											"end": 13771,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13411,
											"end": 13777,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13411,
											"end": 13777,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13411,
											"end": 13777,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13411,
											"end": 13777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13783,
											"end": 14202,
											"name": "tag",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 13783,
											"end": 14202,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13949,
											"end": 13953,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13987,
											"end": 13989,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13976,
											"end": 13985,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13972,
											"end": 13990,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13964,
											"end": 13990,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13964,
											"end": 13990,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14036,
											"end": 14045,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14030,
											"end": 14034,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14026,
											"end": 14046,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14022,
											"end": 14023,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14011,
											"end": 14020,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14007,
											"end": 14024,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14000,
											"end": 14047,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14064,
											"end": 14195,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 14190,
											"end": 14194,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14064,
											"end": 14195,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 14064,
											"end": 14195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14064,
											"end": 14195,
											"name": "tag",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 14064,
											"end": 14195,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14056,
											"end": 14195,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14056,
											"end": 14195,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13783,
											"end": 14202,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13783,
											"end": 14202,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13783,
											"end": 14202,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13783,
											"end": 14202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14208,
											"end": 14438,
											"name": "tag",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 14208,
											"end": 14438,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14348,
											"end": 14382,
											"name": "PUSH",
											"source": 13,
											"value": "426964206D75737420626520686967686572207468616E2063757272656E7420"
										},
										{
											"begin": 14344,
											"end": 14345,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14336,
											"end": 14342,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14332,
											"end": 14346,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14325,
											"end": 14383,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14417,
											"end": 14430,
											"name": "PUSH",
											"source": 13,
											"value": "6869676865737420626964000000000000000000000000000000000000000000"
										},
										{
											"begin": 14412,
											"end": 14414,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14404,
											"end": 14410,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14400,
											"end": 14415,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14393,
											"end": 14431,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14208,
											"end": 14438,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14208,
											"end": 14438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14444,
											"end": 14810,
											"name": "tag",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 14444,
											"end": 14810,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14586,
											"end": 14589,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14607,
											"end": 14674,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 14671,
											"end": 14673,
											"name": "PUSH",
											"source": 13,
											"value": "2B"
										},
										{
											"begin": 14666,
											"end": 14669,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14607,
											"end": 14674,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 14607,
											"end": 14674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14607,
											"end": 14674,
											"name": "tag",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 14607,
											"end": 14674,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14600,
											"end": 14674,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14600,
											"end": 14674,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14683,
											"end": 14776,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 14772,
											"end": 14775,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14683,
											"end": 14776,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 14683,
											"end": 14776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14683,
											"end": 14776,
											"name": "tag",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 14683,
											"end": 14776,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14801,
											"end": 14803,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14796,
											"end": 14799,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14792,
											"end": 14804,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14785,
											"end": 14804,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14785,
											"end": 14804,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14444,
											"end": 14810,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14444,
											"end": 14810,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14444,
											"end": 14810,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14444,
											"end": 14810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14816,
											"end": 15235,
											"name": "tag",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 14816,
											"end": 15235,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14982,
											"end": 14986,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15020,
											"end": 15022,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15009,
											"end": 15018,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15005,
											"end": 15023,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14997,
											"end": 15023,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14997,
											"end": 15023,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15069,
											"end": 15078,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15063,
											"end": 15067,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15059,
											"end": 15079,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 15055,
											"end": 15056,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15044,
											"end": 15053,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15040,
											"end": 15057,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15033,
											"end": 15080,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15097,
											"end": 15228,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 15223,
											"end": 15227,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15097,
											"end": 15228,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 15097,
											"end": 15228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15097,
											"end": 15228,
											"name": "tag",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 15097,
											"end": 15228,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15089,
											"end": 15228,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15089,
											"end": 15228,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14816,
											"end": 15235,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14816,
											"end": 15235,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14816,
											"end": 15235,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14816,
											"end": 15235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15241,
											"end": 15420,
											"name": "tag",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 15241,
											"end": 15420,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15381,
											"end": 15412,
											"name": "PUSH",
											"source": 13,
											"value": "4F6E6C792061646D696E2063616E206372656174652061756374696F6E000000"
										},
										{
											"begin": 15377,
											"end": 15378,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15369,
											"end": 15375,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15365,
											"end": 15379,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15358,
											"end": 15413,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15241,
											"end": 15420,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15241,
											"end": 15420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15426,
											"end": 15792,
											"name": "tag",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 15426,
											"end": 15792,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15568,
											"end": 15571,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15589,
											"end": 15656,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 15653,
											"end": 15655,
											"name": "PUSH",
											"source": 13,
											"value": "1D"
										},
										{
											"begin": 15648,
											"end": 15651,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15589,
											"end": 15656,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 15589,
											"end": 15656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15589,
											"end": 15656,
											"name": "tag",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 15589,
											"end": 15656,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15582,
											"end": 15656,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15582,
											"end": 15656,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15665,
											"end": 15758,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 15754,
											"end": 15757,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15665,
											"end": 15758,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 15665,
											"end": 15758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15665,
											"end": 15758,
											"name": "tag",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 15665,
											"end": 15758,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15783,
											"end": 15785,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15778,
											"end": 15781,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15774,
											"end": 15786,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15767,
											"end": 15786,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15767,
											"end": 15786,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15426,
											"end": 15792,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15426,
											"end": 15792,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15426,
											"end": 15792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15426,
											"end": 15792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15798,
											"end": 16217,
											"name": "tag",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 15798,
											"end": 16217,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15964,
											"end": 15968,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16002,
											"end": 16004,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15991,
											"end": 16000,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15987,
											"end": 16005,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15979,
											"end": 16005,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15979,
											"end": 16005,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16051,
											"end": 16060,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16045,
											"end": 16049,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16041,
											"end": 16061,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 16037,
											"end": 16038,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16026,
											"end": 16035,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16022,
											"end": 16039,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16015,
											"end": 16062,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16079,
											"end": 16210,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 16205,
											"end": 16209,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16079,
											"end": 16210,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 16079,
											"end": 16210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16079,
											"end": 16210,
											"name": "tag",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 16079,
											"end": 16210,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16071,
											"end": 16210,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16071,
											"end": 16210,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15798,
											"end": 16217,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15798,
											"end": 16217,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15798,
											"end": 16217,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15798,
											"end": 16217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16223,
											"end": 16405,
											"name": "tag",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 16223,
											"end": 16405,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16363,
											"end": 16397,
											"name": "PUSH",
											"source": 13,
											"value": "4475726174696F6E206D7573742062652067726561746572207468616E203130"
										},
										{
											"begin": 16359,
											"end": 16360,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16351,
											"end": 16357,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16347,
											"end": 16361,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16340,
											"end": 16398,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16223,
											"end": 16405,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16223,
											"end": 16405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16411,
											"end": 16777,
											"name": "tag",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 16411,
											"end": 16777,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16553,
											"end": 16556,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16574,
											"end": 16641,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 16638,
											"end": 16640,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16633,
											"end": 16636,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16574,
											"end": 16641,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 16574,
											"end": 16641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16574,
											"end": 16641,
											"name": "tag",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 16574,
											"end": 16641,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16567,
											"end": 16641,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16567,
											"end": 16641,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16650,
											"end": 16743,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 16739,
											"end": 16742,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16650,
											"end": 16743,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 16650,
											"end": 16743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16650,
											"end": 16743,
											"name": "tag",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 16650,
											"end": 16743,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16768,
											"end": 16770,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16763,
											"end": 16766,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16759,
											"end": 16771,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16752,
											"end": 16771,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16752,
											"end": 16771,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16411,
											"end": 16777,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16411,
											"end": 16777,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16411,
											"end": 16777,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16411,
											"end": 16777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16783,
											"end": 17202,
											"name": "tag",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 16783,
											"end": 17202,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16949,
											"end": 16953,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16987,
											"end": 16989,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16976,
											"end": 16985,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16972,
											"end": 16990,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16964,
											"end": 16990,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16964,
											"end": 16990,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17036,
											"end": 17045,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17030,
											"end": 17034,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17026,
											"end": 17046,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 17022,
											"end": 17023,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17011,
											"end": 17020,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17007,
											"end": 17024,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17000,
											"end": 17047,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17064,
											"end": 17195,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 17190,
											"end": 17194,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17064,
											"end": 17195,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 17064,
											"end": 17195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17064,
											"end": 17195,
											"name": "tag",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 17064,
											"end": 17195,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17056,
											"end": 17195,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17056,
											"end": 17195,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16783,
											"end": 17202,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16783,
											"end": 17202,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16783,
											"end": 17202,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16783,
											"end": 17202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17208,
											"end": 17429,
											"name": "tag",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 17208,
											"end": 17429,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17348,
											"end": 17382,
											"name": "PUSH",
											"source": 13,
											"value": "5374617274207072696365206D7573742062652067726561746572207468616E"
										},
										{
											"begin": 17344,
											"end": 17345,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17336,
											"end": 17342,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17332,
											"end": 17346,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17325,
											"end": 17383,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17417,
											"end": 17421,
											"name": "PUSH",
											"source": 13,
											"value": "2030000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17412,
											"end": 17414,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17404,
											"end": 17410,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17400,
											"end": 17415,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17393,
											"end": 17422,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17208,
											"end": 17429,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17208,
											"end": 17429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17435,
											"end": 17801,
											"name": "tag",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 17435,
											"end": 17801,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17577,
											"end": 17580,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17598,
											"end": 17665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 17662,
											"end": 17664,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 17657,
											"end": 17660,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17598,
											"end": 17665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 17598,
											"end": 17665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17598,
											"end": 17665,
											"name": "tag",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 17598,
											"end": 17665,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17591,
											"end": 17665,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17591,
											"end": 17665,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17674,
											"end": 17767,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 17763,
											"end": 17766,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17674,
											"end": 17767,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 17674,
											"end": 17767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17674,
											"end": 17767,
											"name": "tag",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 17674,
											"end": 17767,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17792,
											"end": 17794,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 17787,
											"end": 17790,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17783,
											"end": 17795,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17776,
											"end": 17795,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17776,
											"end": 17795,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17435,
											"end": 17801,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17435,
											"end": 17801,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17435,
											"end": 17801,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17435,
											"end": 17801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17807,
											"end": 18226,
											"name": "tag",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 17807,
											"end": 18226,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17973,
											"end": 17977,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18011,
											"end": 18013,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18000,
											"end": 18009,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17996,
											"end": 18014,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17988,
											"end": 18014,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17988,
											"end": 18014,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18060,
											"end": 18069,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18054,
											"end": 18058,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18050,
											"end": 18070,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 18046,
											"end": 18047,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18035,
											"end": 18044,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18031,
											"end": 18048,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18024,
											"end": 18071,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18088,
											"end": 18219,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 18214,
											"end": 18218,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18088,
											"end": 18219,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 18088,
											"end": 18219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18088,
											"end": 18219,
											"name": "tag",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 18088,
											"end": 18219,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18080,
											"end": 18219,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18080,
											"end": 18219,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17807,
											"end": 18226,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17807,
											"end": 18226,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17807,
											"end": 18226,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17807,
											"end": 18226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18232,
											"end": 18564,
											"name": "tag",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 18232,
											"end": 18564,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18353,
											"end": 18357,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18391,
											"end": 18393,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 18380,
											"end": 18389,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18376,
											"end": 18394,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18368,
											"end": 18394,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18368,
											"end": 18394,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18404,
											"end": 18475,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 18472,
											"end": 18473,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18461,
											"end": 18470,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18457,
											"end": 18474,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18448,
											"end": 18454,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 18404,
											"end": 18475,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 18404,
											"end": 18475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18404,
											"end": 18475,
											"name": "tag",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 18404,
											"end": 18475,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18485,
											"end": 18557,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 18553,
											"end": 18555,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18542,
											"end": 18551,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18538,
											"end": 18556,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18529,
											"end": 18535,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 18485,
											"end": 18557,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 18485,
											"end": 18557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18485,
											"end": 18557,
											"name": "tag",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 18485,
											"end": 18557,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18232,
											"end": 18564,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 18232,
											"end": 18564,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18232,
											"end": 18564,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18232,
											"end": 18564,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18232,
											"end": 18564,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18232,
											"end": 18564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18570,
											"end": 18803,
											"name": "tag",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 18570,
											"end": 18803,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18609,
											"end": 18612,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18632,
											"end": 18656,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 18650,
											"end": 18655,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18632,
											"end": 18656,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 18632,
											"end": 18656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18632,
											"end": 18656,
											"name": "tag",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 18632,
											"end": 18656,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18623,
											"end": 18656,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18623,
											"end": 18656,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18678,
											"end": 18744,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18671,
											"end": 18676,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18668,
											"end": 18745,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 18665,
											"end": 18768,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 18665,
											"end": 18768,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 18748,
											"end": 18766,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 18748,
											"end": 18766,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 18748,
											"end": 18766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18748,
											"end": 18766,
											"name": "tag",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 18748,
											"end": 18766,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18665,
											"end": 18768,
											"name": "tag",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 18665,
											"end": 18768,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18795,
											"end": 18796,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 18788,
											"end": 18793,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18784,
											"end": 18797,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18777,
											"end": 18797,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18777,
											"end": 18797,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18570,
											"end": 18803,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18570,
											"end": 18803,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18570,
											"end": 18803,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18570,
											"end": 18803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18809,
											"end": 19251,
											"name": "tag",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 18809,
											"end": 19251,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18958,
											"end": 18962,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18996,
											"end": 18998,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 18985,
											"end": 18994,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18981,
											"end": 18999,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18973,
											"end": 18999,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18973,
											"end": 18999,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19009,
											"end": 19080,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 19077,
											"end": 19078,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19066,
											"end": 19075,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19062,
											"end": 19079,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19053,
											"end": 19059,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 19009,
											"end": 19080,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 19009,
											"end": 19080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19009,
											"end": 19080,
											"name": "tag",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 19009,
											"end": 19080,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19090,
											"end": 19162,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 19158,
											"end": 19160,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19147,
											"end": 19156,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19143,
											"end": 19161,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19134,
											"end": 19140,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 19090,
											"end": 19162,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 19090,
											"end": 19162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19090,
											"end": 19162,
											"name": "tag",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 19090,
											"end": 19162,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19172,
											"end": 19244,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 19240,
											"end": 19242,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 19229,
											"end": 19238,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19225,
											"end": 19243,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19216,
											"end": 19222,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19172,
											"end": 19244,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 19172,
											"end": 19244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19172,
											"end": 19244,
											"name": "tag",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 19172,
											"end": 19244,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18809,
											"end": 19251,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 18809,
											"end": 19251,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 18809,
											"end": 19251,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18809,
											"end": 19251,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18809,
											"end": 19251,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18809,
											"end": 19251,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18809,
											"end": 19251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19257,
											"end": 19429,
											"name": "tag",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 19257,
											"end": 19429,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19397,
											"end": 19421,
											"name": "PUSH",
											"source": 13,
											"value": "4F6E6C792061646D696E2063616E207570677261646500000000000000000000"
										},
										{
											"begin": 19393,
											"end": 19394,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19385,
											"end": 19391,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19381,
											"end": 19395,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19374,
											"end": 19422,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19257,
											"end": 19429,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19257,
											"end": 19429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19435,
											"end": 19801,
											"name": "tag",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 19435,
											"end": 19801,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19577,
											"end": 19580,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19598,
											"end": 19665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 19662,
											"end": 19664,
											"name": "PUSH",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 19657,
											"end": 19660,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19598,
											"end": 19665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 19598,
											"end": 19665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19598,
											"end": 19665,
											"name": "tag",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 19598,
											"end": 19665,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19591,
											"end": 19665,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19591,
											"end": 19665,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19674,
											"end": 19767,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 19763,
											"end": 19766,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19674,
											"end": 19767,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 19674,
											"end": 19767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19674,
											"end": 19767,
											"name": "tag",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 19674,
											"end": 19767,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19792,
											"end": 19794,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19787,
											"end": 19790,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19783,
											"end": 19795,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19776,
											"end": 19795,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19776,
											"end": 19795,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19435,
											"end": 19801,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19435,
											"end": 19801,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19435,
											"end": 19801,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19435,
											"end": 19801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19807,
											"end": 20226,
											"name": "tag",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 19807,
											"end": 20226,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19973,
											"end": 19977,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20011,
											"end": 20013,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20000,
											"end": 20009,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19996,
											"end": 20014,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19988,
											"end": 20014,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19988,
											"end": 20014,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20060,
											"end": 20069,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20054,
											"end": 20058,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20050,
											"end": 20070,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 20046,
											"end": 20047,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20035,
											"end": 20044,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20031,
											"end": 20048,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20024,
											"end": 20071,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20088,
											"end": 20219,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 20214,
											"end": 20218,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20088,
											"end": 20219,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 20088,
											"end": 20219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20088,
											"end": 20219,
											"name": "tag",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 20088,
											"end": 20219,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20080,
											"end": 20219,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20080,
											"end": 20219,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19807,
											"end": 20226,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19807,
											"end": 20226,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19807,
											"end": 20226,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19807,
											"end": 20226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20232,
											"end": 20354,
											"name": "tag",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 20232,
											"end": 20354,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20305,
											"end": 20329,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 20323,
											"end": 20328,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20305,
											"end": 20329,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 20305,
											"end": 20329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20305,
											"end": 20329,
											"name": "tag",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 20305,
											"end": 20329,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20298,
											"end": 20303,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20295,
											"end": 20330,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 20285,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 20285,
											"end": 20348,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 20344,
											"end": 20345,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20341,
											"end": 20342,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20334,
											"end": 20346,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 20285,
											"end": 20348,
											"name": "tag",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 20285,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20232,
											"end": 20354,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20232,
											"end": 20354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20360,
											"end": 20503,
											"name": "tag",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 20360,
											"end": 20503,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20417,
											"end": 20422,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20448,
											"end": 20454,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20442,
											"end": 20455,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 20433,
											"end": 20455,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20433,
											"end": 20455,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20464,
											"end": 20497,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 20491,
											"end": 20496,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20464,
											"end": 20497,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 20464,
											"end": 20497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20464,
											"end": 20497,
											"name": "tag",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 20464,
											"end": 20497,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20360,
											"end": 20503,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 20360,
											"end": 20503,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20360,
											"end": 20503,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20360,
											"end": 20503,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20360,
											"end": 20503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20509,
											"end": 20860,
											"name": "tag",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 20509,
											"end": 20860,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20579,
											"end": 20585,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20628,
											"end": 20630,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20616,
											"end": 20625,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20607,
											"end": 20614,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 20603,
											"end": 20626,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 20599,
											"end": 20631,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 20596,
											"end": 20715,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 20596,
											"end": 20715,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 20596,
											"end": 20715,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 20634,
											"end": 20713,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 20634,
											"end": 20713,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 20634,
											"end": 20713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20634,
											"end": 20713,
											"name": "tag",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 20634,
											"end": 20713,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20596,
											"end": 20715,
											"name": "tag",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 20596,
											"end": 20715,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20754,
											"end": 20755,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20779,
											"end": 20843,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 20835,
											"end": 20842,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 20826,
											"end": 20832,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20815,
											"end": 20824,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 20811,
											"end": 20833,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20779,
											"end": 20843,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 20779,
											"end": 20843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20779,
											"end": 20843,
											"name": "tag",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 20779,
											"end": 20843,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20769,
											"end": 20843,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20769,
											"end": 20843,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20725,
											"end": 20853,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20509,
											"end": 20860,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 20509,
											"end": 20860,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20509,
											"end": 20860,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20509,
											"end": 20860,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20509,
											"end": 20860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20866,
											"end": 20964,
											"name": "tag",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 20866,
											"end": 20964,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20917,
											"end": 20923,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20951,
											"end": 20956,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20945,
											"end": 20957,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 20935,
											"end": 20957,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20935,
											"end": 20957,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20866,
											"end": 20964,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20866,
											"end": 20964,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20866,
											"end": 20964,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20866,
											"end": 20964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20970,
											"end": 21117,
											"name": "tag",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 20970,
											"end": 21117,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21071,
											"end": 21082,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21108,
											"end": 21111,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21093,
											"end": 21111,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21093,
											"end": 21111,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20970,
											"end": 21117,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 20970,
											"end": 21117,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20970,
											"end": 21117,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20970,
											"end": 21117,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20970,
											"end": 21117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21123,
											"end": 21509,
											"name": "tag",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 21123,
											"end": 21509,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21227,
											"end": 21230,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21255,
											"end": 21293,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 21287,
											"end": 21292,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21255,
											"end": 21293,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 21255,
											"end": 21293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21255,
											"end": 21293,
											"name": "tag",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 21255,
											"end": 21293,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21309,
											"end": 21397,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 21390,
											"end": 21396,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21385,
											"end": 21388,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 21309,
											"end": 21397,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 21309,
											"end": 21397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21309,
											"end": 21397,
											"name": "tag",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 21309,
											"end": 21397,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21302,
											"end": 21397,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 21302,
											"end": 21397,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21406,
											"end": 21471,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 21464,
											"end": 21470,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21459,
											"end": 21462,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 21452,
											"end": 21456,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21445,
											"end": 21450,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 21441,
											"end": 21457,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21406,
											"end": 21471,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 21406,
											"end": 21471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21406,
											"end": 21471,
											"name": "tag",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 21406,
											"end": 21471,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21496,
											"end": 21502,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 21491,
											"end": 21494,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 21487,
											"end": 21503,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21480,
											"end": 21503,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21480,
											"end": 21503,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21231,
											"end": 21509,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21123,
											"end": 21509,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21123,
											"end": 21509,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21123,
											"end": 21509,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21123,
											"end": 21509,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21123,
											"end": 21509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21515,
											"end": 21786,
											"name": "tag",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 21515,
											"end": 21786,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21645,
											"end": 21648,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21667,
											"end": 21760,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 21756,
											"end": 21759,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21747,
											"end": 21753,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 21667,
											"end": 21760,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 21667,
											"end": 21760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21667,
											"end": 21760,
											"name": "tag",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 21667,
											"end": 21760,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21660,
											"end": 21760,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21660,
											"end": 21760,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21777,
											"end": 21780,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21770,
											"end": 21780,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21770,
											"end": 21780,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21515,
											"end": 21786,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21515,
											"end": 21786,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21515,
											"end": 21786,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21515,
											"end": 21786,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21515,
											"end": 21786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/NftAuction.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"admin()": "f851a440",
							"auctions(uint256)": "571a26a0",
							"createAuction(uint256,uint256,address,uint256)": "b1cb48ef",
							"endAuction(uint256)": "b9a2de3a",
							"getLatestPrice()": "8e15f473",
							"initialize()": "8129fc1c",
							"nextAuctionId()": "fc528482",
							"placeBid(uint256,uint256,address)": "ad6561ec",
							"proxiableUUID()": "52d1902d",
							"setPriceFeed(address)": "724e78da",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"auctions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"ended\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"highestBidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"highestBid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"createAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_auctionId\",\"type\":\"uint256\"}],\"name\":\"endAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextAuctionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_auctionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"placeBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"name\":\"setPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NftAuction.sol\":\"NftAuction\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d39e11b1dc7b9b8ccdabbc9be442ab7cda4a81c748f57e316dcb1bcb4a28bf9\",\"dweb:/ipfs/QmaG6vz6W6iEUBsbHSBob5mdcitYxWjoygxREHpsJHfWrS\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/NftAuction.sol\":{\"keccak256\":\"0xd2e6466516bf19c2fc1275002ebb208712284e504bbe33a5b828d75d4e593d2b\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://41d41acf8f6ee5935e401206bc9272e88375234c139b9e276fde3a66271c9cd6\",\"dweb:/ipfs/QmPTRDpKfTUtJgPxjNr5pviutcJMdfdiBwxfX31UYAPbeS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1402,
								"contract": "contracts/NftAuction.sol:NftAuction",
								"label": "auctions",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_struct(Auction)1397_storage)"
							},
							{
								"astId": 1404,
								"contract": "contracts/NftAuction.sol:NftAuction",
								"label": "nextAuctionId",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1406,
								"contract": "contracts/NftAuction.sol:NftAuction",
								"label": "admin",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 1409,
								"contract": "contracts/NftAuction.sol:NftAuction",
								"label": "priceETHFeed",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(AggregatorV3Interface)45"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(AggregatorV3Interface)45": {
								"encoding": "inplace",
								"label": "contract AggregatorV3Interface",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_struct(Auction)1397_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct NftAuction.Auction)",
								"numberOfBytes": "32",
								"value": "t_struct(Auction)1397_storage"
							},
							"t_struct(Auction)1397_storage": {
								"encoding": "inplace",
								"label": "struct NftAuction.Auction",
								"members": [
									{
										"astId": 1378,
										"contract": "contracts/NftAuction.sol:NftAuction",
										"label": "nftContract",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1380,
										"contract": "contracts/NftAuction.sol:NftAuction",
										"label": "tokenId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1382,
										"contract": "contracts/NftAuction.sol:NftAuction",
										"label": "seller",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 1384,
										"contract": "contracts/NftAuction.sol:NftAuction",
										"label": "duration",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1386,
										"contract": "contracts/NftAuction.sol:NftAuction",
										"label": "startPrice",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1388,
										"contract": "contracts/NftAuction.sol:NftAuction",
										"label": "startTime",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1390,
										"contract": "contracts/NftAuction.sol:NftAuction",
										"label": "ended",
										"offset": 0,
										"slot": "6",
										"type": "t_bool"
									},
									{
										"astId": 1392,
										"contract": "contracts/NftAuction.sol:NftAuction",
										"label": "highestBidder",
										"offset": 1,
										"slot": "6",
										"type": "t_address"
									},
									{
										"astId": 1394,
										"contract": "contracts/NftAuction.sol:NftAuction",
										"label": "highestBid",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 1396,
										"contract": "contracts/NftAuction.sol:NftAuction",
										"label": "tokenAddress",
										"offset": 0,
										"slot": "8",
										"type": "t_address"
									}
								],
								"numberOfBytes": "288"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> contracts/NftAuction.sol:51:13:\n   |\n51 |             uint80 roundID,\n   |             ^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1568,
					"file": "contracts/NftAuction.sol",
					"start": 1554
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> contracts/NftAuction.sol:53:13:\n   |\n53 |             uint startedAt,\n   |             ^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1619,
					"file": "contracts/NftAuction.sol",
					"start": 1605
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> contracts/NftAuction.sol:54:13:\n   |\n54 |             uint timeStamp,\n   |             ^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1647,
					"file": "contracts/NftAuction.sol",
					"start": 1633
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> contracts/NftAuction.sol:55:13:\n   |\n55 |             uint80 answeredInRound\n   |             ^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1683,
					"file": "contracts/NftAuction.sol",
					"start": 1661
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/NftAuction.sol:93:9:\n   |\n93 |         uint256 _amount,\n   |         ^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2860,
					"file": "contracts/NftAuction.sol",
					"start": 2845
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/NftAuction.sol:94:9:\n   |\n94 |         address _tokenAddress\n   |         ^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2891,
					"file": "contracts/NftAuction.sol",
					"start": 2870
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/NftAuction.sol:134:9:\n    |\n134 |         address newImplementation\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 4238,
					"file": "contracts/NftAuction.sol",
					"start": 4213
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "120:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "155:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "163:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "189:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "189:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "188:7:0"
									},
									"scope": 45,
									"src": "146:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "209:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "220:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "246:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "246:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "245:15:0"
									},
									"scope": 45,
									"src": "200:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "274:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "281:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "307:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "306:9:0"
									},
									"scope": 45,
									"src": "265:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "329:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "354:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "347:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "347:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:25:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "397:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "390:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "390:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "413:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "406:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "406:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "429:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "421:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "421:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "448:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "440:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "466:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "459:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "459:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "389:93:0"
									},
									"scope": 45,
									"src": "320:163:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "496:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "511:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "556:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "549:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "549:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "572:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "565:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "588:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "580:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "607:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "599:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "599:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "625:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "618:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "618:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "548:93:0"
									},
									"scope": 45,
									"src": "487:155:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "110:534:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:613:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							313
						]
					},
					"id": 314,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 48,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 313,
							"linearizedBaseContracts": [
								313
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 56,
									"members": [
										{
											"constant": false,
											"id": 52,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 56,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 51,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 55,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 56,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 54,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 313,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 59,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 313,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 57,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 58,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 62,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 65,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 66,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 70,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 67,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "4092:1079:1",
										"statements": [
											{
												"assignments": [
													75
												],
												"declarations": [
													{
														"constant": false,
														"id": 75,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 152,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$56_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 74,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 73,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 56,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 56,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$56_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 78,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 76,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$56_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$56_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													80
												],
												"declarations": [
													{
														"constant": false,
														"id": 80,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 152,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 79,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 84,
												"initialValue": {
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 81,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$56_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 82,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 55,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													86
												],
												"declarations": [
													{
														"constant": false,
														"id": 86,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 152,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 85,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 89,
												"initialValue": {
													"expression": {
														"id": 87,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$56_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 52,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													91
												],
												"declarations": [
													{
														"constant": false,
														"id": 91,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4709:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 152,
														"src": "4704:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 90,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4704:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 97,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 94,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 92,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "4724:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 93,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4739:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4724:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 95,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "4744:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4724:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4704:54:1"
											},
											{
												"assignments": [
													99
												],
												"declarations": [
													{
														"constant": false,
														"id": 99,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4773:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 152,
														"src": "4768:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 98,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4768:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 112,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 102,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 100,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "4788:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4803:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4788:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 105,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4816:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$313",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$313",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4808:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 103,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4808:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4808:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4822:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4808:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4827:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4808:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4837:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4808:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4788:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4768:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4853:13:1",
														"subExpression": {
															"id": 113,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "4854:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4870:13:1",
														"subExpression": {
															"id": 115,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 99,
															"src": "4871:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4853:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 122,
												"nodeType": "IfStatement",
												"src": "4849:91:1",
												"trueBody": {
													"id": 121,
													"nodeType": "Block",
													"src": "4885:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 118,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 62,
																	"src": "4906:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4906:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 120,
															"nodeType": "RevertStatement",
															"src": "4899:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 123,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "4949:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$56_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 125,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4951:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 52,
														"src": "4949:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 126,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4949:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "4949:18:1"
											},
											{
												"condition": {
													"id": 129,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 80,
													"src": "4981:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 137,
												"nodeType": "IfStatement",
												"src": "4977:67:1",
												"trueBody": {
													"id": 136,
													"nodeType": "Block",
													"src": "4997:47:1",
													"statements": [
														{
															"expression": {
																"id": 134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 130,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 75,
																		"src": "5011:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$56_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 132,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5013:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 55,
																	"src": "5011:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5029:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5011:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 135,
															"nodeType": "ExpressionStatement",
															"src": "5011:22:1"
														}
													]
												}
											},
											{
												"id": 138,
												"nodeType": "PlaceholderStatement",
												"src": "5053:1:1"
											},
											{
												"condition": {
													"id": 139,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 80,
													"src": "5068:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 151,
												"nodeType": "IfStatement",
												"src": "5064:101:1",
												"trueBody": {
													"id": 150,
													"nodeType": "Block",
													"src": "5084:81:1",
													"statements": [
														{
															"expression": {
																"id": 144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 140,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 75,
																		"src": "5098:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$56_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 142,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5100:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 55,
																	"src": "5098:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5116:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5098:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 145,
															"nodeType": "ExpressionStatement",
															"src": "5098:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5152:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 146,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 70,
																	"src": "5140:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5140:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 149,
															"nodeType": "EmitStatement",
															"src": "5135:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 153,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1102:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "6289:392:1",
										"statements": [
											{
												"assignments": [
													160
												],
												"declarations": [
													{
														"constant": false,
														"id": 160,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6384:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 199,
														"src": "6355:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$56_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 159,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 158,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6355:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 56,
																"src": "6355:20:1"
															},
															"referencedDeclaration": 56,
															"src": "6355:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$56_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 163,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 161,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "6388:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$56_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6388:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$56_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6355:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 164,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "6429:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$56_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 165,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6431:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 55,
														"src": "6429:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 169,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 166,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 160,
																"src": "6448:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$56_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 167,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6450:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 52,
															"src": "6448:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 168,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "6466:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6448:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6429:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 175,
												"nodeType": "IfStatement",
												"src": "6425:105:1",
												"trueBody": {
													"id": 174,
													"nodeType": "Block",
													"src": "6475:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 171,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 62,
																	"src": "6496:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6496:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 173,
															"nodeType": "RevertStatement",
															"src": "6489:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 176,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "6539:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$56_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 178,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6541:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 52,
														"src": "6539:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 179,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "6556:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6539:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "6539:24:1"
											},
											{
												"expression": {
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 182,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "6573:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$56_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 184,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6575:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 55,
														"src": "6573:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 185,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6591:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6573:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "6573:22:1"
											},
											{
												"id": 188,
												"nodeType": "PlaceholderStatement",
												"src": "6605:1:1"
											},
											{
												"expression": {
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 189,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "6616:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$56_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 191,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6618:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 55,
														"src": "6616:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 192,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6634:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6616:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 194,
												"nodeType": "ExpressionStatement",
												"src": "6616:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 196,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "6666:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 195,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "6654:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6654:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 198,
												"nodeType": "EmitStatement",
												"src": "6649:25:1"
											}
										]
									},
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "5177:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 200,
									"name": "reinitializer",
									"nameLocation": "6259:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6280:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "6273:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 155,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6273:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6272:16:1"
									},
									"src": "6250:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "6919:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 203,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "6929:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6929:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 205,
												"nodeType": "ExpressionStatement",
												"src": "6929:20:1"
											},
											{
												"id": 206,
												"nodeType": "PlaceholderStatement",
												"src": "6959:1:1"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "6687:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 208,
									"name": "onlyInitializing",
									"nameLocation": "6900:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6916:2:1"
									},
									"src": "6891:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "7134:89:1",
										"statements": [
											{
												"condition": {
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7148:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 212,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "7149:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7149:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 219,
												"nodeType": "IfStatement",
												"src": "7144:73:1",
												"trueBody": {
													"id": 218,
													"nodeType": "Block",
													"src": "7168:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 215,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "7189:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7189:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 217,
															"nodeType": "RevertStatement",
															"src": "7182:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "6973:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7091:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7109:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7134:0:1"
									},
									"scope": 313,
									"src": "7082:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "7758:373:1",
										"statements": [
											{
												"assignments": [
													227
												],
												"declarations": [
													{
														"constant": false,
														"id": 227,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7853:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 266,
														"src": "7824:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$56_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 226,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 225,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7824:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 56,
																"src": "7824:20:1"
															},
															"referencedDeclaration": 56,
															"src": "7824:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$56_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 230,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 228,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "7857:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$56_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7857:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$56_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7824:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 231,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "7898:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$56_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7900:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 55,
													"src": "7898:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 237,
												"nodeType": "IfStatement",
												"src": "7894:76:1",
												"trueBody": {
													"id": 236,
													"nodeType": "Block",
													"src": "7915:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 233,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 62,
																	"src": "7936:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7936:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 235,
															"nodeType": "RevertStatement",
															"src": "7929:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 238,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 227,
															"src": "7983:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$56_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 239,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7985:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 52,
														"src": "7983:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8006:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 241,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8006:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 240,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8001:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8001:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 244,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8014:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8001:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7983:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 265,
												"nodeType": "IfStatement",
												"src": "7979:146:1",
												"trueBody": {
													"id": 264,
													"nodeType": "Block",
													"src": "8019:106:1",
													"statements": [
														{
															"expression": {
																"id": 254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 246,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 227,
																		"src": "8033:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$56_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 248,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8035:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 52,
																	"src": "8033:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 251,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8055:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 250,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8055:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 249,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8050:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8050:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8063:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8050:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8033:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 255,
															"nodeType": "ExpressionStatement",
															"src": "8033:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 259,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8102:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 258,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8102:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 257,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8097:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 260,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8097:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 261,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8110:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8097:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 256,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 70,
																	"src": "8085:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8085:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 263,
															"nodeType": "EmitStatement",
															"src": "8080:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "7229:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7718:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7738:2:1"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7758:0:1"
									},
									"scope": 313,
									"src": "7709:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "8306:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 273,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "8323:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$56_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8323:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$56_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 52,
													"src": "8323:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 272,
												"id": 276,
												"nodeType": "Return",
												"src": "8316:46:1"
											}
										]
									},
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "8137:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8250:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8272:2:1"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "8298:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 270,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8298:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8297:8:1"
									},
									"scope": 313,
									"src": "8241:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "8541:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 284,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "8558:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$56_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 285,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8558:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$56_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8585:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 55,
													"src": "8558:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 283,
												"id": 287,
												"nodeType": "Return",
												"src": "8551:47:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "8375:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8494:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8509:2:1"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "8535:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 281,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8535:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:6:1"
									},
									"scope": 313,
									"src": "8485:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "8896:45:1",
										"statements": [
											{
												"expression": {
													"id": 295,
													"name": "INITIALIZABLE_STORAGE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 59,
													"src": "8913:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 294,
												"id": 296,
												"nodeType": "Return",
												"src": "8906:28:1"
											}
										]
									},
									"documentation": {
										"id": 290,
										"nodeType": "StructuredDocumentation",
										"src": "8611:203:1",
										"text": " @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."
									},
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializableStorageSlot",
									"nameLocation": "8828:25:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8853:2:1"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "8887:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 292,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8886:9:1"
									},
									"scope": 313,
									"src": "8819:122:1",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "9161:115:1",
										"statements": [
											{
												"assignments": [
													306
												],
												"declarations": [
													{
														"constant": false,
														"id": 306,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "9179:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 311,
														"src": "9171:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 305,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9171:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 309,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 307,
														"name": "_initializableStorageSlot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "9186:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes32_$",
															"typeString": "function () pure returns (bytes32)"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9186:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9171:42:1"
											},
											{
												"AST": {
													"nativeSrc": "9232:38:1",
													"nodeType": "YulBlock",
													"src": "9232:38:1",
													"statements": [
														{
															"nativeSrc": "9246:14:1",
															"nodeType": "YulAssignment",
															"src": "9246:14:1",
															"value": {
																"name": "slot",
																"nativeSrc": "9256:4:1",
																"nodeType": "YulIdentifier",
																"src": "9256:4:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "9246:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9246:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 303,
														"isOffset": false,
														"isSlot": true,
														"src": "9246:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 306,
														"isOffset": false,
														"isSlot": false,
														"src": "9256:4:1",
														"valueSize": 1
													}
												],
												"id": 310,
												"nodeType": "InlineAssembly",
												"src": "9223:47:1"
											}
										]
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "8947:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "9080:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9104:2:1"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "9158:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "9129:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$56_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 302,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 301,
														"name": "InitializableStorage",
														"nameLocations": [
															"9129:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 56,
														"src": "9129:20:1"
													},
													"referencedDeclaration": 56,
													"src": "9129:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$56_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9128:32:1"
									},
									"scope": 313,
									"src": "9071:205:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 314,
							"src": "2349:6929:1",
							"usedErrors": [
								62,
								65
							],
							"usedEvents": [
								70
							]
						}
					],
					"src": "113:9166:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"ERC1967Utils": [
							820
						],
						"IERC1822Proxiable": [
							526
						],
						"Initializable": [
							313
						],
						"UUPSUpgradeable": [
							495
						]
					},
					"id": 496,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 315,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"id": 317,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 496,
							"sourceUnit": 527,
							"src": "141:88:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 316,
										"name": "IERC1822Proxiable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 526,
										"src": "149:17:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"id": 319,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 496,
							"sourceUnit": 821,
							"src": "230:84:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 318,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 820,
										"src": "238:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 321,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 496,
							"sourceUnit": 314,
							"src": "315:50:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 320,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 313,
										"src": "323:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 323,
										"name": "Initializable",
										"nameLocations": [
											"1023:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 313,
										"src": "1023:13:2"
									},
									"id": 324,
									"nodeType": "InheritanceSpecifier",
									"src": "1023:13:2"
								},
								{
									"baseName": {
										"id": 325,
										"name": "IERC1822Proxiable",
										"nameLocations": [
											"1038:17:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 526,
										"src": "1038:17:2"
									},
									"id": 326,
									"nodeType": "InheritanceSpecifier",
									"src": "1038:17:2"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 322,
								"nodeType": "StructuredDocumentation",
								"src": "367:618:2",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."
							},
							"fullyImplemented": false,
							"id": 495,
							"linearizedBaseContracts": [
								495,
								526,
								313
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "1004:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1062:61:2",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
									},
									"id": 333,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1154:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 495,
									"src": "1128:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 328,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1128:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 331,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1171:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$495",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$495",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 330,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1163:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 329,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1163:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 332,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1163:13:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 334,
										"nodeType": "StructuredDocumentation",
										"src": "1183:631:2",
										"text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
									},
									"functionSelector": "ad3cb1cc",
									"id": 337,
									"mutability": "constant",
									"name": "UPGRADE_INTERFACE_VERSION",
									"nameLocation": "1842:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 495,
									"src": "1819:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 335,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1819:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "352e302e30",
										"id": 336,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1870:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
											"typeString": "literal_string \"5.0.0\""
										},
										"value": "5.0.0"
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "1884:65:2",
										"text": " @dev The call is from an unauthorized context."
									},
									"errorSelector": "e07c8dba",
									"id": 340,
									"name": "UUPSUnauthorizedCallContext",
									"nameLocation": "1960:27:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:2:2"
									},
									"src": "1954:36:2"
								},
								{
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "1996:68:2",
										"text": " @dev The storage `slot` is unsupported as a UUID."
									},
									"errorSelector": "aa1d49a4",
									"id": 345,
									"name": "UUPSUnsupportedProxiableUUID",
									"nameLocation": "2075:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2112:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2104:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 342,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:14:2"
									},
									"src": "2069:49:2"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "2645:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 348,
														"name": "_checkProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "2655:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2655:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 350,
												"nodeType": "ExpressionStatement",
												"src": "2655:13:2"
											},
											{
												"id": 351,
												"nodeType": "PlaceholderStatement",
												"src": "2678:1:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "2124:495:2",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 353,
									"name": "onlyProxy",
									"nameLocation": "2633:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2642:2:2"
									},
									"src": "2624:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "2916:48:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 356,
														"name": "_checkNotDelegated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 443,
														"src": "2926:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2926:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "2926:20:2"
											},
											{
												"id": 359,
												"nodeType": "PlaceholderStatement",
												"src": "2956:1:2"
											}
										]
									},
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2692:195:2",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 361,
									"name": "notDelegated",
									"nameLocation": "2901:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2913:2:2"
									},
									"src": "2892:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "3030:7:2",
										"statements": []
									},
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 364,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 363,
												"name": "onlyInitializing",
												"nameLocations": [
													"3013:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 208,
												"src": "3013:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3013:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "2979:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3001:2:2"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3030:0:2"
									},
									"scope": 495,
									"src": "2970:67:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 372,
										"nodeType": "Block",
										"src": "3113:7:2",
										"statements": []
									},
									"id": 373,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 370,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 369,
												"name": "onlyInitializing",
												"nameLocations": [
													"3096:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 208,
												"src": "3096:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3096:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "3052:32:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3084:2:2"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3113:0:2"
									},
									"scope": 495,
									"src": "3043:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										525
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3786:56:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 381,
														"name": "ERC1967Utils",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "3803:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$820_$",
															"typeString": "type(library ERC1967Utils)"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3816:19:2",
													"memberName": "IMPLEMENTATION_SLOT",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 541,
													"src": "3803:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 380,
												"id": 383,
												"nodeType": "Return",
												"src": "3796:39:2"
											}
										]
									},
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "3125:578:2",
										"text": " @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 377,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 376,
												"name": "notDelegated",
												"nameLocations": [
													"3755:12:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 361,
												"src": "3755:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3755:12:2"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3717:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3730:2:2"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3777:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 378,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3777:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3776:9:2"
									},
									"scope": 495,
									"src": "3708:134:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 404,
										"nodeType": "Block",
										"src": "4266:109:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 396,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "4294:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 395,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "4276:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 398,
												"nodeType": "ExpressionStatement",
												"src": "4276:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 400,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "4344:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 401,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "4363:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 399,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "4322:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4322:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 403,
												"nodeType": "ExpressionStatement",
												"src": "4322:46:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3848:308:2",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 405,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 393,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 392,
												"name": "onlyProxy",
												"nameLocations": [
													"4256:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 353,
												"src": "4256:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4256:9:2"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "4170:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4195:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "4187:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4187:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4227:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "4214:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 389,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4214:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4186:46:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4266:0:2"
									},
									"scope": 495,
									"src": "4161:214:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "4623:267:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 414,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 411,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4658:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$495",
																		"typeString": "contract UUPSUpgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$495",
																		"typeString": "contract UUPSUpgradeable"
																	}
																],
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4650:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 409,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4650:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4650:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 413,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "4667:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4650:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 415,
																	"name": "ERC1967Utils",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "4728:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$820_$",
																		"typeString": "type(library ERC1967Utils)"
																	}
																},
																"id": 416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4741:17:2",
																"memberName": "getImplementation",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 572,
																"src": "4728:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4728:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 418,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "4764:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4728:42:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4650:120:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 425,
												"nodeType": "IfStatement",
												"src": "4633:251:2",
												"trueBody": {
													"id": 424,
													"nodeType": "Block",
													"src": "4823:61:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 421,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 340,
																	"src": "4844:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4844:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 423,
															"nodeType": "RevertStatement",
															"src": "4837:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 406,
										"nodeType": "StructuredDocumentation",
										"src": "4381:192:2",
										"text": " @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC-1967 compliant implementation pointing to self."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkProxy",
									"nameLocation": "4587:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4598:2:2"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4623:0:2"
									},
									"scope": 495,
									"src": "4578:312:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 442,
										"nodeType": "Block",
										"src": "5059:161:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 433,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5081:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$495",
																	"typeString": "contract UUPSUpgradeable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$495",
																	"typeString": "contract UUPSUpgradeable"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5073:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5073:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5073:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 435,
														"name": "__self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 333,
														"src": "5090:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5073:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 441,
												"nodeType": "IfStatement",
												"src": "5069:145:2",
												"trueBody": {
													"id": 440,
													"nodeType": "Block",
													"src": "5098:116:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 437,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 340,
																	"src": "5174:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5174:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 439,
															"nodeType": "RevertStatement",
															"src": "5167:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "4896:106:2",
										"text": " @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."
									},
									"id": 443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNotDelegated",
									"nameLocation": "5016:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5034:2:2"
									},
									"returnParameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5059:0:2"
									},
									"scope": 495,
									"src": "5007:213:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "5226:372:2",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"
									},
									"id": 449,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "5612:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "5638:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "5630:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5630:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5629:27:2"
									},
									"returnParameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5673:0:2"
									},
									"scope": 495,
									"src": "5603:71:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 493,
										"nodeType": "Block",
										"src": "6117:453:2",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 482,
															"nodeType": "Block",
															"src": "6207:212:2",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 465,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 463,
																			"src": "6225:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 466,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 820,
																				"src": "6233:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$820_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 467,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6246:19:2",
																			"memberName": "IMPLEMENTATION_SLOT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 541,
																			"src": "6233:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "6225:40:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 474,
																	"nodeType": "IfStatement",
																	"src": "6221:120:2",
																	"trueBody": {
																		"id": 473,
																		"nodeType": "Block",
																		"src": "6267:74:2",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"id": 470,
																							"name": "slot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 463,
																							"src": "6321:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 469,
																						"name": "UUPSUnsupportedProxiableUUID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 345,
																						"src": "6292:28:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																							"typeString": "function (bytes32) pure returns (error)"
																						}
																					},
																					"id": 471,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6292:34:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_error",
																						"typeString": "error"
																					}
																				},
																				"id": 472,
																				"nodeType": "RevertStatement",
																				"src": "6285:41:2"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 478,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 452,
																				"src": "6384:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 479,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 454,
																				"src": "6403:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"expression": {
																				"id": 475,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 820,
																				"src": "6354:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$820_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 477,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6367:16:2",
																			"memberName": "upgradeToAndCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 635,
																			"src": "6354:29:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																				"typeString": "function (address,bytes memory)"
																			}
																		},
																		"id": 480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6354:54:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 481,
																	"nodeType": "ExpressionStatement",
																	"src": "6354:54:2"
																}
															]
														},
														"errorName": "",
														"id": 483,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 464,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 463,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "6201:4:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 483,
																	"src": "6193:12:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 462,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6193:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6192:14:2"
														},
														"src": "6184:235:2"
													},
													{
														"block": {
															"id": 490,
															"nodeType": "Block",
															"src": "6426:138:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 487,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 452,
																				"src": "6535:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 484,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 820,
																				"src": "6493:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$820_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6506:28:2",
																			"memberName": "ERC1967InvalidImplementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 546,
																			"src": "6493:41:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																				"typeString": "function (address) pure returns (error)"
																			}
																		},
																		"id": 488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6493:60:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 489,
																	"nodeType": "RevertStatement",
																	"src": "6486:67:2"
																}
															]
														},
														"errorName": "",
														"id": 491,
														"nodeType": "TryCatchClause",
														"src": "6420:144:2"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 458,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "6149:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 457,
																"name": "IERC1822Proxiable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "6131:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$526_$",
																	"typeString": "type(contract IERC1822Proxiable)"
																}
															},
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6131:36:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1822Proxiable_$526",
																"typeString": "contract IERC1822Proxiable"
															}
														},
														"id": 460,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6168:13:2",
														"memberName": "proxiableUUID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 525,
														"src": "6131:50:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
															"typeString": "function () view external returns (bytes32)"
														}
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6131:52:2",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 492,
												"nodeType": "TryStatement",
												"src": "6127:437:2"
											}
										]
									},
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "5680:347:2",
										"text": " @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC-1967.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "6041:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6071:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "6063:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6063:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6103:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "6090:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6090:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6062:46:2"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6117:0:2"
									},
									"scope": 495,
									"src": "6032:538:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 496,
							"src": "986:5586:2",
							"usedErrors": [
								62,
								65,
								340,
								345,
								546,
								559,
								957,
								1220
							],
							"usedEvents": [
								70,
								503
							]
						}
					],
					"src": "115:6458:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
					"exportedSymbols": {
						"IERC1967": [
							516
						]
					},
					"id": 517,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 497,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1967",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 498,
								"nodeType": "StructuredDocumentation",
								"src": "133:101:3",
								"text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."
							},
							"fullyImplemented": true,
							"id": 516,
							"linearizedBaseContracts": [
								516
							],
							"name": "IERC1967",
							"nameLocation": "245:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "260:68:3",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 503,
									"name": "Upgraded",
									"nameLocation": "339:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "364:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "348:30:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "347:32:3"
									},
									"src": "333:47:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 504,
										"nodeType": "StructuredDocumentation",
										"src": "386:67:3",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 510,
									"name": "AdminChanged",
									"nameLocation": "464:12:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "485:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "477:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "508:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "500:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:41:3"
									},
									"src": "458:60:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "524:59:3",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 515,
									"name": "BeaconUpgraded",
									"nameLocation": "594:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "625:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "609:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "608:24:3"
									},
									"src": "588:45:3"
								}
							],
							"scope": 517,
							"src": "235:400:3",
							"usedErrors": [],
							"usedEvents": [
								503,
								510,
								515
							]
						}
					],
					"src": "107:529:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							526
						]
					},
					"id": 527,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 518,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 519,
								"nodeType": "StructuredDocumentation",
								"src": "139:204:4",
								"text": " @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 526,
							"linearizedBaseContracts": [
								526
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "354:17:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "378:438:4",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 525,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "830:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "843:2:4"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "869:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 522,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "869:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "868:9:4"
									},
									"scope": 526,
									"src": "821:57:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 527,
							"src": "344:536:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:768:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							1207
						],
						"ERC1967Utils": [
							820
						],
						"IBeacon": [
							830
						],
						"IERC1967": [
							516
						],
						"StorageSlot": [
							1353
						]
					},
					"id": 821,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 528,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 530,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 821,
							"sourceUnit": 831,
							"src": "140:46:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 529,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 830,
										"src": "148:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
							"file": "../../interfaces/IERC1967.sol",
							"id": 532,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 821,
							"sourceUnit": 517,
							"src": "187:55:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 531,
										"name": "IERC1967",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 516,
										"src": "195:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 534,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 821,
							"sourceUnit": 1208,
							"src": "243:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 533,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1207,
										"src": "251:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 536,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 821,
							"sourceUnit": 1354,
							"src": "292:56:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 535,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1353,
										"src": "300:11:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 537,
								"nodeType": "StructuredDocumentation",
								"src": "350:145:5",
								"text": " @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."
							},
							"fullyImplemented": true,
							"id": 820,
							"linearizedBaseContracts": [
								820
							],
							"name": "ERC1967Utils",
							"nameLocation": "504:12:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "523:170:5",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 541,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "789:19:5",
									"nodeType": "VariableDeclaration",
									"scope": 820,
									"src": "763:114:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 539,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "763:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 540,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "811:66:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 542,
										"nodeType": "StructuredDocumentation",
										"src": "884:69:5",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 546,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "964:28:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1001:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "993:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:24:5"
									},
									"src": "958:59:5"
								},
								{
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "1023:60:5",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 551,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1094:19:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1122:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "1114:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:15:5"
									},
									"src": "1088:41:5"
								},
								{
									"documentation": {
										"id": 552,
										"nodeType": "StructuredDocumentation",
										"src": "1135:61:5",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 556,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1207:20:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1236:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "1228:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:16:5"
									},
									"src": "1201:43:5"
								},
								{
									"documentation": {
										"id": 557,
										"nodeType": "StructuredDocumentation",
										"src": "1250:82:5",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 559,
									"name": "ERC1967NonPayable",
									"nameLocation": "1343:17:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1360:2:5"
									},
									"src": "1337:26:5"
								},
								{
									"body": {
										"id": 571,
										"nodeType": "Block",
										"src": "1502:77:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 567,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "1546:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 565,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1353,
																"src": "1519:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1353_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1531:14:5",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1264,
															"src": "1519:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1235_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1519:47:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1235_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1567:5:5",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1234,
													"src": "1519:53:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 564,
												"id": 570,
												"nodeType": "Return",
												"src": "1512:60:5"
											}
										]
									},
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "1369:67:5",
										"text": " @dev Returns the current implementation address."
									},
									"id": 572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1450:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1467:2:5"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "1493:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1492:9:5"
									},
									"scope": 820,
									"src": "1441:138:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "1734:218:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 578,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 575,
																"src": "1748:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1766:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1748:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 580,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1771:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1748:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 581,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1781:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1748:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 588,
												"nodeType": "IfStatement",
												"src": "1744:119:5",
												"trueBody": {
													"id": 587,
													"nodeType": "Block",
													"src": "1784:79:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 584,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 575,
																		"src": "1834:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 583,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "1805:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1805:47:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 586,
															"nodeType": "RevertStatement",
															"src": "1798:54:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 592,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 541,
																	"src": "1899:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 589,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1353,
																	"src": "1872:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1353_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1884:14:5",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1264,
																"src": "1872:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1235_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1872:47:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1235_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 594,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1920:5:5",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1234,
														"src": "1872:53:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 595,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "1928:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1872:73:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 597,
												"nodeType": "ExpressionStatement",
												"src": "1872:73:5"
											}
										]
									},
									"documentation": {
										"id": 573,
										"nodeType": "StructuredDocumentation",
										"src": "1585:81:5",
										"text": " @dev Stores a new address in the ERC-1967 implementation slot."
									},
									"id": 599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1680:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1707:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "1699:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1698:27:5"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1734:0:5"
									},
									"scope": 820,
									"src": "1671:281:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 634,
										"nodeType": "Block",
										"src": "2345:263:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 608,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "2374:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 607,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "2355:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2355:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 610,
												"nodeType": "ExpressionStatement",
												"src": "2355:37:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 614,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "2425:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 611,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "2407:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$516_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 613,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2416:8:5",
														"memberName": "Upgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 503,
														"src": "2407:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2407:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 616,
												"nodeType": "EmitStatement",
												"src": "2402:41:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 617,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "2458:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2463:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2458:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 619,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2472:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2458:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 632,
													"nodeType": "Block",
													"src": "2559:43:5",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 629,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 819,
																	"src": "2573:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2573:18:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 631,
															"nodeType": "ExpressionStatement",
															"src": "2573:18:5"
														}
													]
												},
												"id": 633,
												"nodeType": "IfStatement",
												"src": "2454:148:5",
												"trueBody": {
													"id": 628,
													"nodeType": "Block",
													"src": "2475:78:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 624,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 602,
																		"src": "2518:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 625,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 604,
																		"src": "2537:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 621,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1207,
																		"src": "2489:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1207_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2497:20:5",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1124,
																	"src": "2489:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2489:53:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 627,
															"nodeType": "ExpressionStatement",
															"src": "2489:53:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "1958:301:5",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2273:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2298:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "2290:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2330:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "2317:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 603,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2317:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2289:46:5"
									},
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2345:0:5"
									},
									"scope": 820,
									"src": "2264:344:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 636,
										"nodeType": "StructuredDocumentation",
										"src": "2614:145:5",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 639,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "2855:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 820,
									"src": "2829:105:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 637,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2829:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 638,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2868:66:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 651,
										"nodeType": "Block",
										"src": "3339:68:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 647,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 639,
																"src": "3383:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 645,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1353,
																"src": "3356:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1353_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3368:14:5",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1264,
															"src": "3356:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1235_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 648,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3356:38:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1235_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 649,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3395:5:5",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1234,
													"src": "3356:44:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 644,
												"id": 650,
												"nodeType": "Return",
												"src": "3349:51:5"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "2941:341:5",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 652,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3296:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3304:2:5"
									},
									"returnParameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "3330:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3330:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3329:9:5"
									},
									"scope": 820,
									"src": "3287:120:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 682,
										"nodeType": "Block",
										"src": "3535:172:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 658,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 655,
														"src": "3549:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3569:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3561:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 659,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3561:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 662,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3561:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3549:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 672,
												"nodeType": "IfStatement",
												"src": "3545:91:5",
												"trueBody": {
													"id": 671,
													"nodeType": "Block",
													"src": "3573:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 667,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3622:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3614:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 665,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3614:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 668,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3614:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 664,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "3594:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3594:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 670,
															"nodeType": "RevertStatement",
															"src": "3587:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 676,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 639,
																	"src": "3672:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 673,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1353,
																	"src": "3645:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1353_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3657:14:5",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1264,
																"src": "3645:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1235_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3645:38:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1235_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 678,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3684:5:5",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1234,
														"src": "3645:44:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 679,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 655,
														"src": "3692:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3645:55:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 681,
												"nodeType": "ExpressionStatement",
												"src": "3645:55:5"
											}
										]
									},
									"documentation": {
										"id": 653,
										"nodeType": "StructuredDocumentation",
										"src": "3413:72:5",
										"text": " @dev Stores a new address in the ERC-1967 admin slot."
									},
									"id": 683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "3499:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3517:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "3509:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:18:5"
									},
									"returnParameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3535:0:5"
									},
									"scope": 820,
									"src": "3490:217:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "3875:94:5",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 692,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 652,
																"src": "3912:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3912:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 694,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "3924:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 689,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "3890:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$516_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 691,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3899:12:5",
														"memberName": "AdminChanged",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 510,
														"src": "3890:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3890:43:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 696,
												"nodeType": "EmitStatement",
												"src": "3885:48:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 698,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "3953:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 697,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "3943:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3943:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "3943:19:5"
											}
										]
									},
									"documentation": {
										"id": 684,
										"nodeType": "StructuredDocumentation",
										"src": "3713:109:5",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "3836:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3856:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "3848:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3847:18:5"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3875:0:5"
									},
									"scope": 820,
									"src": "3827:142:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "3975:201:5",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 706,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4272:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 820,
									"src": "4246:106:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 704,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4246:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 705,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4286:66:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 718,
										"nodeType": "Block",
										"src": "4468:69:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 714,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 706,
																"src": "4512:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 712,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1353,
																"src": "4485:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1353_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4497:14:5",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1264,
															"src": "4485:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1235_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 715,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4485:39:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1235_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 716,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4525:5:5",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1234,
													"src": "4485:45:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 711,
												"id": 717,
												"nodeType": "Return",
												"src": "4478:52:5"
											}
										]
									},
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "4359:51:5",
										"text": " @dev Returns the current beacon."
									},
									"id": 719,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4424:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4433:2:5"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "4459:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4459:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4458:9:5"
									},
									"scope": 820,
									"src": "4415:122:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 764,
										"nodeType": "Block",
										"src": "4667:390:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 725,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 722,
																"src": "4681:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4691:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4681:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4696:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4681:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 728,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4706:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4681:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 735,
												"nodeType": "IfStatement",
												"src": "4677:95:5",
												"trueBody": {
													"id": 734,
													"nodeType": "Block",
													"src": "4709:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 731,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 722,
																		"src": "4751:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 730,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 556,
																	"src": "4730:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4730:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 733,
															"nodeType": "RevertStatement",
															"src": "4723:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 739,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 706,
																	"src": "4809:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 736,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1353,
																	"src": "4782:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1353_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 738,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4794:14:5",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1264,
																"src": "4782:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1235_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4782:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1235_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 741,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4822:5:5",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1234,
														"src": "4782:45:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 742,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "4830:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4782:57:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 744,
												"nodeType": "ExpressionStatement",
												"src": "4782:57:5"
											},
											{
												"assignments": [
													746
												],
												"declarations": [
													{
														"constant": false,
														"id": 746,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "4858:20:5",
														"nodeType": "VariableDeclaration",
														"scope": 764,
														"src": "4850:28:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 745,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4850:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 752,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 748,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 722,
																	"src": "4889:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 747,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 830,
																"src": "4881:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$830_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4881:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$830",
																"typeString": "contract IBeacon"
															}
														},
														"id": 750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4900:14:5",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 829,
														"src": "4881:33:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:66:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 753,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "4930:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4951:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4930:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 755,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4956:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4930:32:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 756,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4930:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 763,
												"nodeType": "IfStatement",
												"src": "4926:125:5",
												"trueBody": {
													"id": 762,
													"nodeType": "Block",
													"src": "4969:82:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 759,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 746,
																		"src": "5019:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 758,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "4990:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4990:50:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 761,
															"nodeType": "RevertStatement",
															"src": "4983:57:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 720,
										"nodeType": "StructuredDocumentation",
										"src": "4543:72:5",
										"text": " @dev Stores a new beacon in the ERC-1967 beacon slot."
									},
									"id": 765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "4629:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "4648:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "4640:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4640:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4639:19:5"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4667:0:5"
									},
									"scope": 820,
									"src": "4620:437:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 804,
										"nodeType": "Block",
										"src": "5661:263:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 774,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "5682:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 773,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "5671:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5671:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 776,
												"nodeType": "ExpressionStatement",
												"src": "5671:21:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 780,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "5731:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 777,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "5707:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$516_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5716:14:5",
														"memberName": "BeaconUpgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 515,
														"src": "5707:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5707:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 782,
												"nodeType": "EmitStatement",
												"src": "5702:39:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 783,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "5756:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 784,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5761:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5756:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 785,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5770:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5756:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 802,
													"nodeType": "Block",
													"src": "5875:43:5",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 799,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 819,
																	"src": "5889:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 800,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5889:18:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 801,
															"nodeType": "ExpressionStatement",
															"src": "5889:18:5"
														}
													]
												},
												"id": 803,
												"nodeType": "IfStatement",
												"src": "5752:166:5",
												"trueBody": {
													"id": 798,
													"nodeType": "Block",
													"src": "5773:96:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 791,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 768,
																						"src": "5824:9:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 790,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 830,
																					"src": "5816:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$830_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 792,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5816:18:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$830",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 793,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5835:14:5",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 829,
																			"src": "5816:33:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 794,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5816:35:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 795,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 770,
																		"src": "5853:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 787,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1207,
																		"src": "5787:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1207_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5795:20:5",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1124,
																	"src": "5787:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 796,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5787:71:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 797,
															"nodeType": "ExpressionStatement",
															"src": "5787:71:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 766,
										"nodeType": "StructuredDocumentation",
										"src": "5063:514:5",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "5591:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5622:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "5614:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5614:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5646:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "5633:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5633:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5613:38:5"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5661:0:5"
									},
									"scope": 820,
									"src": "5582:342:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "6149:86:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 809,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6163:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 810,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6167:5:5",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6163:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 811,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6175:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6163:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 817,
												"nodeType": "IfStatement",
												"src": "6159:70:5",
												"trueBody": {
													"id": 816,
													"nodeType": "Block",
													"src": "6178:51:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 813,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 559,
																	"src": "6199:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6199:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 815,
															"nodeType": "RevertStatement",
															"src": "6192:26:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 806,
										"nodeType": "StructuredDocumentation",
										"src": "5930:178:5",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6122:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6138:2:5"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6149:0:5"
									},
									"scope": 820,
									"src": "6113:122:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 821,
							"src": "496:5741:5",
							"usedErrors": [
								546,
								551,
								556,
								559
							],
							"usedEvents": []
						}
					],
					"src": "114:6124:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							830
						]
					},
					"id": 831,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 822,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 823,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:6",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 830,
							"linearizedBaseContracts": [
								830
							],
							"name": "IBeacon",
							"nameLocation": "224:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 824,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:6",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 829,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:6"
									},
									"returnParameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "460:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:6"
									},
									"scope": 830,
									"src": "411:58:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 831,
							"src": "214:257:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1365
						],
						"IERC721": [
							947
						]
					},
					"id": 948,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 832,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 834,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 948,
							"sourceUnit": 1366,
							"src": "134:62:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 833,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1365,
										"src": "142:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 836,
										"name": "IERC165",
										"nameLocations": [
											"288:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1365,
										"src": "288:7:7"
									},
									"id": 837,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:7"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 835,
								"nodeType": "StructuredDocumentation",
								"src": "198:68:7",
								"text": " @dev Required interface of an ERC-721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 947,
							"linearizedBaseContracts": [
								947,
								1365
							],
							"name": "IERC721",
							"nameLocation": "277:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "302:88:7",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 846,
									"name": "Transfer",
									"nameLocation": "401:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "426:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "410:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "448:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "432:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "432:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "468:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "452:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:67:7"
									},
									"src": "395:82:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 847,
										"nodeType": "StructuredDocumentation",
										"src": "483:94:7",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 855,
									"name": "Approval",
									"nameLocation": "588:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "613:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "597:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "636:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "620:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "662:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "646:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "596:74:7"
									},
									"src": "582:89:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 856,
										"nodeType": "StructuredDocumentation",
										"src": "677:117:7",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 864,
									"name": "ApprovalForAll",
									"nameLocation": "805:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "836:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "820:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "859:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "843:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "843:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 862,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "874:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "869:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "869:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:64:7"
									},
									"src": "799:85:7"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "890:76:7",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 872,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "980:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "998:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "990:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:15:7"
									},
									"returnParameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1036:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "1028:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:17:7"
									},
									"scope": 947,
									"src": "971:74:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 873,
										"nodeType": "StructuredDocumentation",
										"src": "1051:131:7",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 880,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1196:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1212:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "1204:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1204:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1203:17:7"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1252:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "1244:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1244:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:15:7"
									},
									"scope": 947,
									"src": "1187:72:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 881,
										"nodeType": "StructuredDocumentation",
										"src": "1265:565:7",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 892,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1844:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1869:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "1861:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 882,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1883:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "1875:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1875:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1895:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "1887:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1887:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1919:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "1904:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 888,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1904:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1860:64:7"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1933:0:7"
									},
									"scope": 947,
									"src": "1835:99:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 893,
										"nodeType": "StructuredDocumentation",
										"src": "1940:706:7",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2660:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2677:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2699:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2691:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2691:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2711:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2703:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:7"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2728:0:7"
									},
									"scope": 947,
									"src": "2651:78:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "2735:733:7",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 912,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3482:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3503:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "3495:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3495:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3517:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "3509:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3529:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "3521:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3521:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3494:43:7"
									},
									"returnParameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3546:0:7"
									},
									"scope": 947,
									"src": "3473:74:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 913,
										"nodeType": "StructuredDocumentation",
										"src": "3553:452:7",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 920,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4019:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4035:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "4027:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 914,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4027:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4047:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "4039:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4039:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4026:29:7"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4064:0:7"
									},
									"scope": 947,
									"src": "4010:55:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 921,
										"nodeType": "StructuredDocumentation",
										"src": "4071:315:7",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 928,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4400:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4426:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "4418:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4418:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4441:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "4436:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 924,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4436:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4417:33:7"
									},
									"returnParameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4459:0:7"
									},
									"scope": 947,
									"src": "4391:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 929,
										"nodeType": "StructuredDocumentation",
										"src": "4466:139:7",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 936,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4619:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4639:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "4631:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4631:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:17:7"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4679:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "4671:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4671:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4670:18:7"
									},
									"scope": 947,
									"src": "4610:79:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "4695:138:7",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 946,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4847:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4872:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "4864:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4864:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4887:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "4879:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4879:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4863:33:7"
									},
									"returnParameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "4920:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 943,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4920:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4919:6:7"
									},
									"scope": 947,
									"src": "4838:88:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 948,
							"src": "267:4661:7",
							"usedErrors": [],
							"usedEvents": [
								846,
								855,
								864
							]
						}
					],
					"src": "108:4821:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1207
						],
						"Errors": [
							1229
						]
					},
					"id": 1208,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 949,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 951,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1208,
							"sourceUnit": 1230,
							"src": "127:36:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 950,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1229,
										"src": "135:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 952,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:8",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1207,
							"linearizedBaseContracts": [
								1207
							],
							"name": "Address",
							"nameLocation": "241:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 953,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:8",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 957,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "358:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:8"
									},
									"src": "335:39:8"
								},
								{
									"body": {
										"id": 1004,
										"nodeType": "Block",
										"src": "1361:294:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 967,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1207",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1207",
																		"typeString": "library Address"
																	}
																],
																"id": 966,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 965,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 969,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:8",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 970,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "1399:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 984,
												"nodeType": "IfStatement",
												"src": "1371:125:8",
												"trueBody": {
													"id": 983,
													"nodeType": "Block",
													"src": "1407:89:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 977,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1207",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1207",
																						"typeString": "library Address"
																					}
																				],
																				"id": 976,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 975,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:8",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 980,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 962,
																		"src": "1478:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 972,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1229,
																		"src": "1428:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1229_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:8",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1217,
																	"src": "1428:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 981,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 982,
															"nodeType": "RevertStatement",
															"src": "1421:64:8"
														}
													]
												}
											},
											{
												"assignments": [
													986,
													988
												],
												"declarations": [
													{
														"constant": false,
														"id": 986,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1004,
														"src": "1507:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 985,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 988,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "1534:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1004,
														"src": "1521:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 987,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1521:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 995,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1578:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 989,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 960,
																"src": "1548:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1558:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1548:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 992,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 991,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 962,
																"src": "1570:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1548:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1548:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:75:8"
											},
											{
												"condition": {
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1595:8:8",
													"subExpression": {
														"id": 996,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "1596:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1003,
												"nodeType": "IfStatement",
												"src": "1591:58:8",
												"trueBody": {
													"id": 1002,
													"nodeType": "Block",
													"src": "1605:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 999,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 988,
																		"src": "1627:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 998,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1206,
																	"src": "1619:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1619:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1001,
															"nodeType": "ExpressionStatement",
															"src": "1619:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 958,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:8",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "1309:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "1336:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:8"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:8"
									},
									"scope": 1207,
									"src": "1290:365:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1021,
										"nodeType": "Block",
										"src": "2589:62:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1016,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "2628:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1017,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "2636:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2642:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1015,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "2606:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2606:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1014,
												"id": 1020,
												"nodeType": "Return",
												"src": "2599:45:8"
											}
										]
									},
									"documentation": {
										"id": 1006,
										"nodeType": "StructuredDocumentation",
										"src": "1661:834:8",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2509:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2530:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "2522:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2522:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2551:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "2538:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1009,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2538:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2521:35:8"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "2575:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1012,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2575:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:14:8"
									},
									"scope": 1207,
									"src": "2500:151:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1071,
										"nodeType": "Block",
										"src": "3088:294:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1036,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3110:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1207",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1207",
																		"typeString": "library Address"
																	}
																],
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3102:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1034,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3102:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3102:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1038,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3116:7:8",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3102:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1039,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "3126:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3102:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1053,
												"nodeType": "IfStatement",
												"src": "3098:123:8",
												"trueBody": {
													"id": 1052,
													"nodeType": "Block",
													"src": "3133:88:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1046,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3189:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1207",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1207",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1045,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3181:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1044,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3181:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1047,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3181:13:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1048,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3195:7:8",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3181:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1049,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1029,
																		"src": "3204:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1041,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1229,
																		"src": "3154:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1229_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3161:19:8",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1217,
																	"src": "3154:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3154:56:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1051,
															"nodeType": "RevertStatement",
															"src": "3147:63:8"
														}
													]
												}
											},
											{
												"assignments": [
													1055,
													1057
												],
												"declarations": [
													{
														"constant": false,
														"id": 1055,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3236:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1071,
														"src": "3231:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1054,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3231:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1057,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3258:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1071,
														"src": "3245:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1056,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3245:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1064,
												"initialValue": {
													"arguments": [
														{
															"id": 1062,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "3298:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1058,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1025,
																"src": "3272:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3279:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3272:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1061,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1060,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1029,
																"src": "3291:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3272:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3272:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3230:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1066,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1025,
															"src": "3347:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1067,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "3355:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1068,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "3364:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1065,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "3320:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3320:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1033,
												"id": 1070,
												"nodeType": "Return",
												"src": "3313:62:8"
											}
										]
									},
									"documentation": {
										"id": 1023,
										"nodeType": "StructuredDocumentation",
										"src": "2657:313:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2984:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3014:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "3006:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1024,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3006:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3035:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "3022:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1026,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3022:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3049:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "3041:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3041:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3005:50:8"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "3074:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1031,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3074:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3073:14:8"
									},
									"scope": 1207,
									"src": "2975:407:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1097,
										"nodeType": "Block",
										"src": "3621:154:8",
										"statements": [
											{
												"assignments": [
													1083,
													1085
												],
												"declarations": [
													{
														"constant": false,
														"id": 1083,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3637:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1097,
														"src": "3632:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1082,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3632:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1085,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3659:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1097,
														"src": "3646:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1084,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3646:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1090,
												"initialValue": {
													"arguments": [
														{
															"id": 1088,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "3691:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1086,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "3673:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1087,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3680:10:8",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3673:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3673:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3631:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1092,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "3740:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1093,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "3748:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1094,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "3757:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1091,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "3713:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3713:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1081,
												"id": 1096,
												"nodeType": "Return",
												"src": "3706:62:8"
											}
										]
									},
									"documentation": {
										"id": 1073,
										"nodeType": "StructuredDocumentation",
										"src": "3388:128:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1098,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3530:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3557:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "3549:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3549:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3578:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "3565:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1076,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3565:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3548:35:8"
									},
									"returnParameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "3607:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1079,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3607:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3606:14:8"
									},
									"scope": 1207,
									"src": "3521:254:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1123,
										"nodeType": "Block",
										"src": "4013:156:8",
										"statements": [
											{
												"assignments": [
													1109,
													1111
												],
												"declarations": [
													{
														"constant": false,
														"id": 1109,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4029:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1123,
														"src": "4024:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1108,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4024:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1111,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4051:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1123,
														"src": "4038:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1110,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4038:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1116,
												"initialValue": {
													"arguments": [
														{
															"id": 1114,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "4085:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1112,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "4065:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4072:12:8",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4065:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4065:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4023:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1118,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "4134:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1119,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "4142:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1120,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "4151:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1117,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "4107:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4107:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1107,
												"id": 1122,
												"nodeType": "Return",
												"src": "4100:62:8"
											}
										]
									},
									"documentation": {
										"id": 1099,
										"nodeType": "StructuredDocumentation",
										"src": "3781:130:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3925:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3954:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "3946:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3946:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3975:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "3962:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1102,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3962:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3945:35:8"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "3999:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1105,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3999:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3998:14:8"
									},
									"scope": 1207,
									"src": "3916:253:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1163,
										"nodeType": "Block",
										"src": "4595:424:8",
										"statements": [
											{
												"condition": {
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4609:8:8",
													"subExpression": {
														"id": 1136,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "4610:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1161,
													"nodeType": "Block",
													"src": "4669:344:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1143,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1131,
																			"src": "4857:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1144,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4868:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4857:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1145,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4878:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4857:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1147,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1127,
																				"src": "4883:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1148,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4890:4:8",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4883:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4895:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4883:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4905:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4883:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4857:49:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1158,
															"nodeType": "IfStatement",
															"src": "4853:119:8",
															"trueBody": {
																"id": 1157,
																"nodeType": "Block",
																"src": "4908:64:8",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1154,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1127,
																					"src": "4950:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1153,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 957,
																				"src": "4933:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1155,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4933:24:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1156,
																		"nodeType": "RevertStatement",
																		"src": "4926:31:8"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1159,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1131,
																"src": "4992:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1135,
															"id": 1160,
															"nodeType": "Return",
															"src": "4985:17:8"
														}
													]
												},
												"id": 1162,
												"nodeType": "IfStatement",
												"src": "4605:408:8",
												"trueBody": {
													"id": 1142,
													"nodeType": "Block",
													"src": "4619:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1139,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1131,
																		"src": "4641:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1138,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1206,
																	"src": "4633:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4633:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1141,
															"nodeType": "ExpressionStatement",
															"src": "4633:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1125,
										"nodeType": "StructuredDocumentation",
										"src": "4175:257:8",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 1164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4446:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4490:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "4482:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4482:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4511:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "4506:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1128,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4506:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4541:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "4528:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1130,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4528:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4472:85:8"
									},
									"returnParameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "4581:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1133,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4581:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4580:14:8"
									},
									"scope": 1207,
									"src": "4437:582:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1185,
										"nodeType": "Block",
										"src": "5323:122:8",
										"statements": [
											{
												"condition": {
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5337:8:8",
													"subExpression": {
														"id": 1174,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1167,
														"src": "5338:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1183,
													"nodeType": "Block",
													"src": "5397:42:8",
													"statements": [
														{
															"expression": {
																"id": 1181,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1169,
																"src": "5418:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1173,
															"id": 1182,
															"nodeType": "Return",
															"src": "5411:17:8"
														}
													]
												},
												"id": 1184,
												"nodeType": "IfStatement",
												"src": "5333:106:8",
												"trueBody": {
													"id": 1180,
													"nodeType": "Block",
													"src": "5347:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1177,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1169,
																		"src": "5369:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1176,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1206,
																	"src": "5361:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5361:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1179,
															"nodeType": "ExpressionStatement",
															"src": "5361:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1165,
										"nodeType": "StructuredDocumentation",
										"src": "5025:191:8",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 1186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5230:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5252:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "5247:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1166,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5247:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5274:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "5261:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1168,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5261:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5246:39:8"
									},
									"returnParameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "5309:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1171,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5309:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5308:14:8"
									},
									"scope": 1207,
									"src": "5221:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1205,
										"nodeType": "Block",
										"src": "5614:432:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1192,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "5690:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5701:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5690:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1194,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5710:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5690:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1203,
													"nodeType": "Block",
													"src": "5989:51:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1198,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1229,
																		"src": "6010:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1229_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6017:10:8",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1220,
																	"src": "6010:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6010:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1202,
															"nodeType": "RevertStatement",
															"src": "6003:26:8"
														}
													]
												},
												"id": 1204,
												"nodeType": "IfStatement",
												"src": "5686:354:8",
												"trueBody": {
													"id": 1197,
													"nodeType": "Block",
													"src": "5713:270:8",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5840:133:8",
																"nodeType": "YulBlock",
																"src": "5840:133:8",
																"statements": [
																	{
																		"nativeSrc": "5858:40:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5858:40:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5887:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "5887:10:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5881:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5881:5:8"
																			},
																			"nativeSrc": "5881:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5881:17:8"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5862:15:8",
																				"nodeType": "YulTypedName",
																				"src": "5862:15:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5926:2:8",
																							"nodeType": "YulLiteral",
																							"src": "5926:2:8",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5930:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "5930:10:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5922:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "5922:3:8"
																					},
																					"nativeSrc": "5922:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5922:19:8"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5943:15:8",
																					"nodeType": "YulIdentifier",
																					"src": "5943:15:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5915:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5915:6:8"
																			},
																			"nativeSrc": "5915:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5915:44:8"
																		},
																		"nativeSrc": "5915:44:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5915:44:8"
																	}
																]
															},
															"evmVersion": "prague",
															"externalReferences": [
																{
																	"declaration": 1189,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5887:10:8",
																	"valueSize": 1
																},
																{
																	"declaration": 1189,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5930:10:8",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 1196,
															"nodeType": "InlineAssembly",
															"src": "5815:158:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1187,
										"nodeType": "StructuredDocumentation",
										"src": "5451:103:8",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 1206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5568:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5589:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "5576:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1188,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5576:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5575:25:8"
									},
									"returnParameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5614:0:8"
									},
									"scope": 1207,
									"src": "5559:487:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1208,
							"src": "233:5815:8",
							"usedErrors": [
								957
							],
							"usedEvents": []
						}
					],
					"src": "101:5948:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							1229
						]
					},
					"id": 1230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1209,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1210,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:9",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1229,
							"linearizedBaseContracts": [
								1229
							],
							"name": "Errors",
							"nameLocation": "419:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1211,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:9",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 1217,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "557:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "574:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:9"
									},
									"src": "531:59:9"
								},
								{
									"documentation": {
										"id": 1218,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:9",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 1220,
									"name": "FailedCall",
									"nameLocation": "696:10:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:9"
									},
									"src": "690:19:9"
								},
								{
									"documentation": {
										"id": 1221,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:9",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 1223,
									"name": "FailedDeployment",
									"nameLocation": "772:16:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:9"
									},
									"src": "766:25:9"
								},
								{
									"documentation": {
										"id": 1224,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:9",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 1228,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "884:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:9"
									},
									"src": "860:33:9"
								}
							],
							"scope": 1230,
							"src": "411:484:9",
							"usedErrors": [
								1217,
								1220,
								1223,
								1228
							],
							"usedEvents": []
						}
					],
					"src": "100:796:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1353
						]
					},
					"id": 1354,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1232,
								"nodeType": "StructuredDocumentation",
								"src": "219:1187:10",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."
							},
							"fullyImplemented": true,
							"id": 1353,
							"linearizedBaseContracts": [
								1353
							],
							"name": "StorageSlot",
							"nameLocation": "1415:11:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1235,
									"members": [
										{
											"constant": false,
											"id": 1234,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1235,
											"src": "1462:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1233,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1440:11:10",
									"nodeType": "StructDefinition",
									"scope": 1353,
									"src": "1433:49:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1238,
									"members": [
										{
											"constant": false,
											"id": 1237,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1522:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1238,
											"src": "1517:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1236,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1517:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1495:11:10",
									"nodeType": "StructDefinition",
									"scope": 1353,
									"src": "1488:46:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1241,
									"members": [
										{
											"constant": false,
											"id": 1240,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1577:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1241,
											"src": "1569:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1239,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1569:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1547:11:10",
									"nodeType": "StructDefinition",
									"scope": 1353,
									"src": "1540:49:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1244,
									"members": [
										{
											"constant": false,
											"id": 1243,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1632:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1244,
											"src": "1624:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1242,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1624:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1602:11:10",
									"nodeType": "StructDefinition",
									"scope": 1353,
									"src": "1595:49:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Int256Slot",
									"id": 1247,
									"members": [
										{
											"constant": false,
											"id": 1246,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1685:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1247,
											"src": "1678:12:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"typeName": {
												"id": 1245,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Int256Slot",
									"nameLocation": "1657:10:10",
									"nodeType": "StructDefinition",
									"scope": 1353,
									"src": "1650:47:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1250,
									"members": [
										{
											"constant": false,
											"id": 1249,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1738:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1250,
											"src": "1731:12:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1248,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1731:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1710:10:10",
									"nodeType": "StructDefinition",
									"scope": 1353,
									"src": "1703:47:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1253,
									"members": [
										{
											"constant": false,
											"id": 1252,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1789:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1253,
											"src": "1783:11:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1251,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1783:5:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1763:9:10",
									"nodeType": "StructDefinition",
									"scope": 1353,
									"src": "1756:45:10",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1263,
										"nodeType": "Block",
										"src": "1983:79:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2018:38:10",
													"nodeType": "YulBlock",
													"src": "2018:38:10",
													"statements": [
														{
															"nativeSrc": "2032:14:10",
															"nodeType": "YulAssignment",
															"src": "2032:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "2042:4:10",
																"nodeType": "YulIdentifier",
																"src": "2042:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2032:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1260,
														"isOffset": false,
														"isSlot": true,
														"src": "2032:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1256,
														"isOffset": false,
														"isSlot": false,
														"src": "2042:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1262,
												"nodeType": "InlineAssembly",
												"src": "1993:63:10"
											}
										]
									},
									"documentation": {
										"id": 1254,
										"nodeType": "StructuredDocumentation",
										"src": "1807:87:10",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1908:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1931:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "1923:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1255,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1922:14:10"
									},
									"returnParameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1980:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "1960:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1235_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1259,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1258,
														"name": "AddressSlot",
														"nameLocations": [
															"1960:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1235,
														"src": "1960:11:10"
													},
													"referencedDeclaration": 1235,
													"src": "1960:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1235_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:23:10"
									},
									"scope": 1353,
									"src": "1899:163:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1274,
										"nodeType": "Block",
										"src": "2243:79:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2278:38:10",
													"nodeType": "YulBlock",
													"src": "2278:38:10",
													"statements": [
														{
															"nativeSrc": "2292:14:10",
															"nodeType": "YulAssignment",
															"src": "2292:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "2302:4:10",
																"nodeType": "YulIdentifier",
																"src": "2302:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2292:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2292:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1271,
														"isOffset": false,
														"isSlot": true,
														"src": "2292:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1267,
														"isOffset": false,
														"isSlot": false,
														"src": "2302:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1273,
												"nodeType": "InlineAssembly",
												"src": "2253:63:10"
											}
										]
									},
									"documentation": {
										"id": 1265,
										"nodeType": "StructuredDocumentation",
										"src": "2068:86:10",
										"text": " @dev Returns a `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2168:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2191:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "2183:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1266,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:14:10"
									},
									"returnParameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2240:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "2220:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1238_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1270,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1269,
														"name": "BooleanSlot",
														"nameLocations": [
															"2220:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1238,
														"src": "2220:11:10"
													},
													"referencedDeclaration": 1238,
													"src": "2220:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1238_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2219:23:10"
									},
									"scope": 1353,
									"src": "2159:163:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1285,
										"nodeType": "Block",
										"src": "2503:79:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2538:38:10",
													"nodeType": "YulBlock",
													"src": "2538:38:10",
													"statements": [
														{
															"nativeSrc": "2552:14:10",
															"nodeType": "YulAssignment",
															"src": "2552:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "2562:4:10",
																"nodeType": "YulIdentifier",
																"src": "2562:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2552:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2552:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1282,
														"isOffset": false,
														"isSlot": true,
														"src": "2552:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1278,
														"isOffset": false,
														"isSlot": false,
														"src": "2562:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1284,
												"nodeType": "InlineAssembly",
												"src": "2513:63:10"
											}
										]
									},
									"documentation": {
										"id": 1276,
										"nodeType": "StructuredDocumentation",
										"src": "2328:86:10",
										"text": " @dev Returns a `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2428:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2451:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "2443:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1277,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2442:14:10"
									},
									"returnParameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2500:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "2480:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1241_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1281,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1280,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2480:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1241,
														"src": "2480:11:10"
													},
													"referencedDeclaration": 1241,
													"src": "2480:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1241_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:23:10"
									},
									"scope": 1353,
									"src": "2419:163:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1296,
										"nodeType": "Block",
										"src": "2763:79:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2798:38:10",
													"nodeType": "YulBlock",
													"src": "2798:38:10",
													"statements": [
														{
															"nativeSrc": "2812:14:10",
															"nodeType": "YulAssignment",
															"src": "2812:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "2822:4:10",
																"nodeType": "YulIdentifier",
																"src": "2822:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2812:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2812:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1293,
														"isOffset": false,
														"isSlot": true,
														"src": "2812:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1289,
														"isOffset": false,
														"isSlot": false,
														"src": "2822:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1295,
												"nodeType": "InlineAssembly",
												"src": "2773:63:10"
											}
										]
									},
									"documentation": {
										"id": 1287,
										"nodeType": "StructuredDocumentation",
										"src": "2588:86:10",
										"text": " @dev Returns a `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2688:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2711:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "2703:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1288,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:14:10"
									},
									"returnParameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2760:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "2740:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1244_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1292,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1291,
														"name": "Uint256Slot",
														"nameLocations": [
															"2740:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1244,
														"src": "2740:11:10"
													},
													"referencedDeclaration": 1244,
													"src": "2740:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1244_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:23:10"
									},
									"scope": 1353,
									"src": "2679:163:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1307,
										"nodeType": "Block",
										"src": "3020:79:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3055:38:10",
													"nodeType": "YulBlock",
													"src": "3055:38:10",
													"statements": [
														{
															"nativeSrc": "3069:14:10",
															"nodeType": "YulAssignment",
															"src": "3069:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "3079:4:10",
																"nodeType": "YulIdentifier",
																"src": "3079:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3069:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3069:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1304,
														"isOffset": false,
														"isSlot": true,
														"src": "3069:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1300,
														"isOffset": false,
														"isSlot": false,
														"src": "3079:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1306,
												"nodeType": "InlineAssembly",
												"src": "3030:63:10"
											}
										]
									},
									"documentation": {
										"id": 1298,
										"nodeType": "StructuredDocumentation",
										"src": "2848:85:10",
										"text": " @dev Returns a `Int256Slot` with member `value` located at `slot`."
									},
									"id": 1308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInt256Slot",
									"nameLocation": "2947:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2969:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "2961:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1299,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2961:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2960:14:10"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3017:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "2998:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Int256Slot_$1247_storage_ptr",
													"typeString": "struct StorageSlot.Int256Slot"
												},
												"typeName": {
													"id": 1303,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1302,
														"name": "Int256Slot",
														"nameLocations": [
															"2998:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1247,
														"src": "2998:10:10"
													},
													"referencedDeclaration": 1247,
													"src": "2998:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Int256Slot_$1247_storage_ptr",
														"typeString": "struct StorageSlot.Int256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:22:10"
									},
									"scope": 1353,
									"src": "2938:161:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1318,
										"nodeType": "Block",
										"src": "3277:79:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3312:38:10",
													"nodeType": "YulBlock",
													"src": "3312:38:10",
													"statements": [
														{
															"nativeSrc": "3326:14:10",
															"nodeType": "YulAssignment",
															"src": "3326:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "3336:4:10",
																"nodeType": "YulIdentifier",
																"src": "3336:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3326:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3326:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1315,
														"isOffset": false,
														"isSlot": true,
														"src": "3326:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1311,
														"isOffset": false,
														"isSlot": false,
														"src": "3336:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1317,
												"nodeType": "InlineAssembly",
												"src": "3287:63:10"
											}
										]
									},
									"documentation": {
										"id": 1309,
										"nodeType": "StructuredDocumentation",
										"src": "3105:85:10",
										"text": " @dev Returns a `StringSlot` with member `value` located at `slot`."
									},
									"id": 1319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3204:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3226:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "3218:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3218:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3217:14:10"
									},
									"returnParameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3274:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "3255:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1250_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1314,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1313,
														"name": "StringSlot",
														"nameLocations": [
															"3255:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1250,
														"src": "3255:10:10"
													},
													"referencedDeclaration": 1250,
													"src": "3255:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1250_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:22:10"
									},
									"scope": 1353,
									"src": "3195:161:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1329,
										"nodeType": "Block",
										"src": "3558:85:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3593:44:10",
													"nodeType": "YulBlock",
													"src": "3593:44:10",
													"statements": [
														{
															"nativeSrc": "3607:20:10",
															"nodeType": "YulAssignment",
															"src": "3607:20:10",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3617:10:10",
																"nodeType": "YulIdentifier",
																"src": "3617:10:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3607:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3607:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1326,
														"isOffset": false,
														"isSlot": true,
														"src": "3607:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1322,
														"isOffset": false,
														"isSlot": true,
														"src": "3617:10:10",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1328,
												"nodeType": "InlineAssembly",
												"src": "3568:69:10"
											}
										]
									},
									"documentation": {
										"id": 1320,
										"nodeType": "StructuredDocumentation",
										"src": "3362:101:10",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3477:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3506:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "3491:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3491:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3490:22:10"
									},
									"returnParameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3555:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "3536:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1250_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1325,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1324,
														"name": "StringSlot",
														"nameLocations": [
															"3536:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1250,
														"src": "3536:10:10"
													},
													"referencedDeclaration": 1250,
													"src": "3536:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1250_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:22:10"
									},
									"scope": 1353,
									"src": "3468:175:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1340,
										"nodeType": "Block",
										"src": "3818:79:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3853:38:10",
													"nodeType": "YulBlock",
													"src": "3853:38:10",
													"statements": [
														{
															"nativeSrc": "3867:14:10",
															"nodeType": "YulAssignment",
															"src": "3867:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "3877:4:10",
																"nodeType": "YulIdentifier",
																"src": "3877:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3867:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3867:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1337,
														"isOffset": false,
														"isSlot": true,
														"src": "3867:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1333,
														"isOffset": false,
														"isSlot": false,
														"src": "3877:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1339,
												"nodeType": "InlineAssembly",
												"src": "3828:63:10"
											}
										]
									},
									"documentation": {
										"id": 1331,
										"nodeType": "StructuredDocumentation",
										"src": "3649:84:10",
										"text": " @dev Returns a `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3747:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3768:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "3760:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1332,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:14:10"
									},
									"returnParameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3815:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "3797:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1253_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1336,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1335,
														"name": "BytesSlot",
														"nameLocations": [
															"3797:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1253,
														"src": "3797:9:10"
													},
													"referencedDeclaration": 1253,
													"src": "3797:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1253_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:21:10"
									},
									"scope": 1353,
									"src": "3738:159:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1351,
										"nodeType": "Block",
										"src": "4094:85:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4129:44:10",
													"nodeType": "YulBlock",
													"src": "4129:44:10",
													"statements": [
														{
															"nativeSrc": "4143:20:10",
															"nodeType": "YulAssignment",
															"src": "4143:20:10",
															"value": {
																"name": "store.slot",
																"nativeSrc": "4153:10:10",
																"nodeType": "YulIdentifier",
																"src": "4153:10:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4143:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4143:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1348,
														"isOffset": false,
														"isSlot": true,
														"src": "4143:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1344,
														"isOffset": false,
														"isSlot": true,
														"src": "4153:10:10",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1350,
												"nodeType": "InlineAssembly",
												"src": "4104:69:10"
											}
										]
									},
									"documentation": {
										"id": 1342,
										"nodeType": "StructuredDocumentation",
										"src": "3903:99:10",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "4016:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4043:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "4029:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1343,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4029:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4028:21:10"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4091:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "4073:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1253_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1347,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1346,
														"name": "BytesSlot",
														"nameLocations": [
															"4073:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1253,
														"src": "4073:9:10"
													},
													"referencedDeclaration": 1253,
													"src": "4073:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1253_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4072:21:10"
									},
									"scope": 1353,
									"src": "4007:172:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1354,
							"src": "1407:2774:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3989:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1365
						]
					},
					"id": 1366,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1355,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1356,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:11",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1365,
							"linearizedBaseContracts": [
								1365
							],
							"name": "IERC165",
							"nameLocation": "432:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1357,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1364,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "818:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1358,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:11"
									},
									"returnParameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "861:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1361,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:11"
									},
									"scope": 1365,
									"src": "791:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1366,
							"src": "422:447:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:11"
				},
				"id": 11
			},
			"contracts/NftAuction.sol": {
				"ast": {
					"absolutePath": "contracts/NftAuction.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						],
						"ERC1967Utils": [
							820
						],
						"IERC165": [
							1365
						],
						"IERC1822Proxiable": [
							526
						],
						"IERC721": [
							947
						],
						"Initializable": [
							313
						],
						"NftAuction": [
							1686
						],
						"UUPSUpgradeable": [
							495
						]
					},
					"id": 1687,
					"license": "SEE LICENSE IN LICENSE",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1367,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "51:23:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 1368,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1687,
							"sourceUnit": 314,
							"src": "76:75:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 1369,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1687,
							"sourceUnit": 496,
							"src": "152:77:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 1370,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1687,
							"sourceUnit": 948,
							"src": "230:58:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
							"id": 1372,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1687,
							"sourceUnit": 46,
							"src": "289:112:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1371,
										"name": "AggregatorV3Interface",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 45,
										"src": "297:21:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1373,
										"name": "Initializable",
										"nameLocations": [
											"426:13:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 313,
										"src": "426:13:12"
									},
									"id": 1374,
									"nodeType": "InheritanceSpecifier",
									"src": "426:13:12"
								},
								{
									"baseName": {
										"id": 1375,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"441:15:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 495,
										"src": "441:15:12"
									},
									"id": 1376,
									"nodeType": "InheritanceSpecifier",
									"src": "441:15:12"
								}
							],
							"canonicalName": "NftAuction",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1686,
							"linearizedBaseContracts": [
								1686,
								495,
								526,
								313
							],
							"name": "NftAuction",
							"nameLocation": "412:10:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "NftAuction.Auction",
									"id": 1397,
									"members": [
										{
											"constant": false,
											"id": 1378,
											"mutability": "mutable",
											"name": "nftContract",
											"nameLocation": "523:11:12",
											"nodeType": "VariableDeclaration",
											"scope": 1397,
											"src": "515:19:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1377,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "515:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1380,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "570:7:12",
											"nodeType": "VariableDeclaration",
											"scope": 1397,
											"src": "562:15:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1379,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "562:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1382,
											"mutability": "mutable",
											"name": "seller",
											"nameLocation": "613:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 1397,
											"src": "605:14:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1381,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "605:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1384,
											"mutability": "mutable",
											"name": "duration",
											"nameLocation": "661:8:12",
											"nodeType": "VariableDeclaration",
											"scope": 1397,
											"src": "653:16:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1383,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "653:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1386,
											"mutability": "mutable",
											"name": "startPrice",
											"nameLocation": "708:10:12",
											"nodeType": "VariableDeclaration",
											"scope": 1397,
											"src": "700:18:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1385,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "700:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1388,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "760:9:12",
											"nodeType": "VariableDeclaration",
											"scope": 1397,
											"src": "752:17:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1387,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "752:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1390,
											"mutability": "mutable",
											"name": "ended",
											"nameLocation": "808:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 1397,
											"src": "803:10:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1389,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "803:4:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1392,
											"mutability": "mutable",
											"name": "highestBidder",
											"nameLocation": "858:13:12",
											"nodeType": "VariableDeclaration",
											"scope": 1397,
											"src": "850:21:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1391,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "850:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1394,
											"mutability": "mutable",
											"name": "highestBid",
											"nameLocation": "910:10:12",
											"nodeType": "VariableDeclaration",
											"scope": 1397,
											"src": "902:18:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1393,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "902:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1396,
											"mutability": "mutable",
											"name": "tokenAddress",
											"nameLocation": "1030:12:12",
											"nodeType": "VariableDeclaration",
											"scope": 1397,
											"src": "1022:20:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1395,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1022:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Auction",
									"nameLocation": "470:7:12",
									"nodeType": "StructDefinition",
									"scope": 1686,
									"src": "463:586:12",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "571a26a0",
									"id": 1402,
									"mutability": "mutable",
									"name": "auctions",
									"nameLocation": "1103:8:12",
									"nodeType": "VariableDeclaration",
									"scope": 1686,
									"src": "1068:43:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Auction_$1397_storage_$",
										"typeString": "mapping(uint256 => struct NftAuction.Auction)"
									},
									"typeName": {
										"id": 1401,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1398,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1068:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Auction_$1397_storage_$",
											"typeString": "mapping(uint256 => struct NftAuction.Auction)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1400,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1399,
												"name": "Auction",
												"nameLocations": [
													"1087:7:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1397,
												"src": "1087:7:12"
											},
											"referencedDeclaration": 1397,
											"src": "1087:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Auction_$1397_storage_ptr",
												"typeString": "struct NftAuction.Auction"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc528482",
									"id": 1404,
									"mutability": "mutable",
									"name": "nextAuctionId",
									"nameLocation": "1157:13:12",
									"nodeType": "VariableDeclaration",
									"scope": 1686,
									"src": "1142:28:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1403,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1142:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f851a440",
									"id": 1406,
									"mutability": "mutable",
									"name": "admin",
									"nameLocation": "1214:5:12",
									"nodeType": "VariableDeclaration",
									"scope": 1686,
									"src": "1199:20:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1405,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1199:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1409,
									"mutability": "mutable",
									"name": "priceETHFeed",
									"nameLocation": "1257:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 1686,
									"src": "1226:43:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 1408,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1407,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"1226:21:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 45,
											"src": "1226:21:12"
										},
										"referencedDeclaration": 45,
										"src": "1226:21:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1419,
										"nodeType": "Block",
										"src": "1317:35:12",
										"statements": [
											{
												"expression": {
													"id": 1417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1414,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1406,
														"src": "1327:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1415,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1335:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1339:6:12",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1335:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1327:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1418,
												"nodeType": "ExpressionStatement",
												"src": "1327:18:12"
											}
										]
									},
									"functionSelector": "8129fc1c",
									"id": 1420,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1412,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1411,
												"name": "initializer",
												"nameLocations": [
													"1305:11:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 153,
												"src": "1305:11:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1305:11:12"
										}
									],
									"name": "initialize",
									"nameLocation": "1285:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1295:2:12"
									},
									"returnParameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1317:0:12"
									},
									"scope": 1686,
									"src": "1276:76:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1431,
										"nodeType": "Block",
										"src": "1407:65:12",
										"statements": [
											{
												"expression": {
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1425,
														"name": "priceETHFeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1409,
														"src": "1417:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1427,
																"name": "_priceFeed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1422,
																"src": "1454:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1426,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "1432:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 1428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1432:33:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "1417:48:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 1430,
												"nodeType": "ExpressionStatement",
												"src": "1417:48:12"
											}
										]
									},
									"functionSelector": "724e78da",
									"id": 1432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setPriceFeed",
									"nameLocation": "1367:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "_priceFeed",
												"nameLocation": "1388:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "1380:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1380:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1379:20:12"
									},
									"returnParameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1407:0:12"
									},
									"scope": 1686,
									"src": "1358:114:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1453,
										"nodeType": "Block",
										"src": "1530:262:12",
										"statements": [
											{
												"assignments": [
													1438,
													1440,
													1442,
													1444,
													1446
												],
												"declarations": [
													{
														"constant": false,
														"id": 1438,
														"mutability": "mutable",
														"name": "roundID",
														"nameLocation": "1561:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 1453,
														"src": "1554:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint80",
															"typeString": "uint80"
														},
														"typeName": {
															"id": 1437,
															"name": "uint80",
															"nodeType": "ElementaryTypeName",
															"src": "1554:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint80",
																"typeString": "uint80"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1440,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "1586:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 1453,
														"src": "1582:9:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1439,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "1582:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1442,
														"mutability": "mutable",
														"name": "startedAt",
														"nameLocation": "1610:9:12",
														"nodeType": "VariableDeclaration",
														"scope": 1453,
														"src": "1605:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1441,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1605:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1444,
														"mutability": "mutable",
														"name": "timeStamp",
														"nameLocation": "1638:9:12",
														"nodeType": "VariableDeclaration",
														"scope": 1453,
														"src": "1633:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1443,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1633:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1446,
														"mutability": "mutable",
														"name": "answeredInRound",
														"nameLocation": "1668:15:12",
														"nodeType": "VariableDeclaration",
														"scope": 1453,
														"src": "1661:22:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint80",
															"typeString": "uint80"
														},
														"typeName": {
															"id": 1445,
															"name": "uint80",
															"nodeType": "ElementaryTypeName",
															"src": "1661:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint80",
																"typeString": "uint80"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1450,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1447,
															"name": "priceETHFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1409,
															"src": "1696:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 1448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1709:15:12",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "1696:28:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1696:30:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1540:186:12"
											},
											{
												"expression": {
													"id": 1451,
													"name": "price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1440,
													"src": "1780:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1436,
												"id": 1452,
												"nodeType": "Return",
												"src": "1773:12:12"
											}
										]
									},
									"functionSelector": "8e15f473",
									"id": 1454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLatestPrice",
									"nameLocation": "1487:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1501:2:12"
									},
									"returnParameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "1525:3:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1434,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "1525:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1524:5:12"
									},
									"scope": 1686,
									"src": "1478:314:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1526,
										"nodeType": "Block",
										"src": "1964:820:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1466,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1982:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1986:6:12",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1982:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1468,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1406,
																"src": "1996:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1982:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792061646d696e2063616e206372656174652061756374696f6e",
															"id": 1470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2003:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aba2686a9124fe8a0b5635d6eaed974ab6b8e192a55b06032cc6a3e6c1b368e9",
																"typeString": "literal_string \"Only admin can create auction\""
															},
															"value": "Only admin can create auction"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aba2686a9124fe8a0b5635d6eaed974ab6b8e192a55b06032cc6a3e6c1b368e9",
																"typeString": "literal_string \"Only admin can create auction\""
															}
														],
														"id": 1465,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1974:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1974:61:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1472,
												"nodeType": "ExpressionStatement",
												"src": "1974:61:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1474,
																"name": "_duration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1456,
																"src": "2053:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "3130",
																"id": 1475,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2066:2:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"src": "2053:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4475726174696f6e206d7573742062652067726561746572207468616e203130",
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2070:34:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_425b128ccdf9545481342dcbb6c6ea54c7b1d635720003c70f0b288c94c4874f",
																"typeString": "literal_string \"Duration must be greater than 10\""
															},
															"value": "Duration must be greater than 10"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_425b128ccdf9545481342dcbb6c6ea54c7b1d635720003c70f0b288c94c4874f",
																"typeString": "literal_string \"Duration must be greater than 10\""
															}
														],
														"id": 1473,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2045:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2045:60:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1479,
												"nodeType": "ExpressionStatement",
												"src": "2045:60:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1481,
																"name": "_startPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1458,
																"src": "2123:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2137:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2123:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374617274207072696365206d7573742062652067726561746572207468616e2030",
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2140:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb",
																"typeString": "literal_string \"Start price must be greater than 0\""
															},
															"value": "Start price must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb",
																"typeString": "literal_string \"Start price must be greater than 0\""
															}
														],
														"id": 1480,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2115:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2115:62:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1486,
												"nodeType": "ExpressionStatement",
												"src": "2115:62:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1493,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2255:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NftAuction_$1686",
																		"typeString": "contract NftAuction"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NftAuction_$1686",
																		"typeString": "contract NftAuction"
																	}
																],
																"id": 1492,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2247:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1491,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2247:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2247:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1495,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1462,
															"src": "2262:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1488,
																	"name": "_nftAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1460,
																	"src": "2226:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1487,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 947,
																"src": "2218:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$947_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 1489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2218:20:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$947",
																"typeString": "contract IERC721"
															}
														},
														"id": 1490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2239:7:12",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 920,
														"src": "2218:28:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2218:52:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1497,
												"nodeType": "ExpressionStatement",
												"src": "2218:52:12"
											},
											{
												"expression": {
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1498,
															"name": "auctions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1402,
															"src": "2367:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Auction_$1397_storage_$",
																"typeString": "mapping(uint256 => struct NftAuction.Auction storage ref)"
															}
														},
														"id": 1500,
														"indexExpression": {
															"id": 1499,
															"name": "nextAuctionId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "2376:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2367:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Auction_$1397_storage",
															"typeString": "struct NftAuction.Auction storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1502,
																"name": "_nftAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1460,
																"src": "2428:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1503,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1462,
																"src": "2462:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 1504,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2491:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2495:6:12",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2491:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1506,
																"name": "_duration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1456,
																"src": "2525:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1507,
																"name": "_startPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1458,
																"src": "2560:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "66616c7365",
																"id": 1508,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2592:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2634:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2626:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1509,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2626:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1512,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2626:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"hexValue": "30",
																"id": 1513,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2662:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"expression": {
																	"id": 1514,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2688:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1515,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2694:9:12",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2688:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2739:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2731:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1516,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2731:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2731:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1501,
															"name": "Auction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1397,
															"src": "2393:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Auction_$1397_storage_ptr_$",
																"typeString": "type(struct NftAuction.Auction storage pointer)"
															}
														},
														"id": 1520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"2415:11:12",
															"2453:7:12",
															"2483:6:12",
															"2515:8:12",
															"2548:10:12",
															"2585:5:12",
															"2611:13:12",
															"2650:10:12",
															"2677:9:12",
															"2717:12:12"
														],
														"names": [
															"nftContract",
															"tokenId",
															"seller",
															"duration",
															"startPrice",
															"ended",
															"highestBidder",
															"highestBid",
															"startTime",
															"tokenAddress"
														],
														"nodeType": "FunctionCall",
														"src": "2393:359:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Auction_$1397_memory_ptr",
															"typeString": "struct NftAuction.Auction memory"
														}
													},
													"src": "2367:385:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Auction_$1397_storage",
														"typeString": "struct NftAuction.Auction storage ref"
													}
												},
												"id": 1522,
												"nodeType": "ExpressionStatement",
												"src": "2367:385:12"
											},
											{
												"expression": {
													"id": 1524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "2762:15:12",
													"subExpression": {
														"id": 1523,
														"name": "nextAuctionId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1404,
														"src": "2762:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1525,
												"nodeType": "ExpressionStatement",
												"src": "2762:15:12"
											}
										]
									},
									"functionSelector": "b1cb48ef",
									"id": 1527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createAuction",
									"nameLocation": "1827:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "_duration",
												"nameLocation": "1858:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "1850:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1850:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "_startPrice",
												"nameLocation": "1885:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "1877:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1877:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "_nftAddress",
												"nameLocation": "1914:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "1906:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1906:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1943:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "1935:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1935:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1840:116:12"
									},
									"returnParameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1964:0:12"
									},
									"scope": 1686,
									"src": "1818:966:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1611,
										"nodeType": "Block",
										"src": "2913:671:12",
										"statements": [
											{
												"assignments": [
													1538
												],
												"declarations": [
													{
														"constant": false,
														"id": 1538,
														"mutability": "mutable",
														"name": "auction",
														"nameLocation": "2939:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 1611,
														"src": "2923:23:12",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Auction_$1397_storage_ptr",
															"typeString": "struct NftAuction.Auction"
														},
														"typeName": {
															"id": 1537,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1536,
																"name": "Auction",
																"nameLocations": [
																	"2923:7:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1397,
																"src": "2923:7:12"
															},
															"referencedDeclaration": 1397,
															"src": "2923:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Auction_$1397_storage_ptr",
																"typeString": "struct NftAuction.Auction"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1542,
												"initialValue": {
													"baseExpression": {
														"id": 1539,
														"name": "auctions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1402,
														"src": "2949:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Auction_$1397_storage_$",
															"typeString": "mapping(uint256 => struct NftAuction.Auction storage ref)"
														}
													},
													"id": 1541,
													"indexExpression": {
														"id": 1540,
														"name": "_auctionId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1529,
														"src": "2958:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2949:20:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Auction_$1397_storage",
														"typeString": "struct NftAuction.Auction storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2923:46:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1544,
																			"name": "auctions",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1402,
																			"src": "3000:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Auction_$1397_storage_$",
																				"typeString": "mapping(uint256 => struct NftAuction.Auction storage ref)"
																			}
																		},
																		"id": 1546,
																		"indexExpression": {
																			"id": 1545,
																			"name": "_auctionId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1529,
																			"src": "3009:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3000:20:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Auction_$1397_storage",
																			"typeString": "struct NftAuction.Auction storage ref"
																		}
																	},
																	"id": 1547,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3021:5:12",
																	"memberName": "ended",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1390,
																	"src": "3000:26:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "66616c7365",
																	"id": 1548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3030:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3000:35:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1550,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "3055:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3061:9:12",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "3055:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1556,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1552,
																					"name": "auction",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1538,
																					"src": "3074:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Auction_$1397_storage_ptr",
																						"typeString": "struct NftAuction.Auction storage pointer"
																					}
																				},
																				"id": 1553,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3082:9:12",
																				"memberName": "startTime",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1388,
																				"src": "3074:17:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"expression": {
																					"id": 1554,
																					"name": "auction",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1538,
																					"src": "3094:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Auction_$1397_storage_ptr",
																						"typeString": "struct NftAuction.Auction storage pointer"
																					}
																				},
																				"id": 1555,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3102:8:12",
																				"memberName": "duration",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1384,
																				"src": "3094:16:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3074:36:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1557,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3073:38:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3055:56:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3000:111:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41756374696f6e2068617320656e646564",
															"id": 1560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3125:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5",
																"typeString": "literal_string \"Auction has ended\""
															},
															"value": "Auction has ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5",
																"typeString": "literal_string \"Auction has ended\""
															}
														],
														"id": 1543,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2979:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2979:175:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1562,
												"nodeType": "ExpressionStatement",
												"src": "2979:175:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1564,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3185:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3189:5:12",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "3185:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"id": 1566,
																		"name": "auction",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1538,
																		"src": "3197:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Auction_$1397_storage_ptr",
																			"typeString": "struct NftAuction.Auction storage pointer"
																		}
																	},
																	"id": 1567,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3205:10:12",
																	"memberName": "highestBid",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1394,
																	"src": "3197:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3185:30:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1569,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3219:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3223:5:12",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "3219:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"id": 1571,
																		"name": "auction",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1538,
																		"src": "3231:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Auction_$1397_storage_ptr",
																			"typeString": "struct NftAuction.Auction storage pointer"
																		}
																	},
																	"id": 1572,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3239:10:12",
																	"memberName": "startPrice",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1386,
																	"src": "3231:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3219:30:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3185:64:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426964206d75737420626520686967686572207468616e2063757272656e74206869676865737420626964",
															"id": 1575,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3263:45:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9",
																"typeString": "literal_string \"Bid must be higher than current highest bid\""
															},
															"value": "Bid must be higher than current highest bid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9",
																"typeString": "literal_string \"Bid must be higher than current highest bid\""
															}
														],
														"id": 1563,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3164:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3164:154:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1577,
												"nodeType": "ExpressionStatement",
												"src": "3164:154:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1578,
															"name": "auction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1538,
															"src": "3373:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Auction_$1397_storage_ptr",
																"typeString": "struct NftAuction.Auction storage pointer"
															}
														},
														"id": 1579,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3381:13:12",
														"memberName": "highestBidder",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1392,
														"src": "3373:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3406:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3398:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1580,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3398:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 1583,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3398:10:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3373:35:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1596,
												"nodeType": "IfStatement",
												"src": "3369:125:12",
												"trueBody": {
													"id": 1595,
													"nodeType": "Block",
													"src": "3410:84:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1591,
																			"name": "auction",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1538,
																			"src": "3464:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Auction_$1397_storage_ptr",
																				"typeString": "struct NftAuction.Auction storage pointer"
																			}
																		},
																		"id": 1592,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3472:10:12",
																		"memberName": "highestBid",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1394,
																		"src": "3464:18:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1587,
																					"name": "auction",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1538,
																					"src": "3432:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Auction_$1397_storage_ptr",
																						"typeString": "struct NftAuction.Auction storage pointer"
																					}
																				},
																				"id": 1588,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3440:13:12",
																				"memberName": "highestBidder",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1392,
																				"src": "3432:21:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1586,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3424:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 1585,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3424:8:12",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3424:30:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 1590,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3455:8:12",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "3424:39:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3424:59:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1594,
															"nodeType": "ExpressionStatement",
															"src": "3424:59:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1597,
															"name": "auction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1538,
															"src": "3503:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Auction_$1397_storage_ptr",
																"typeString": "struct NftAuction.Auction storage pointer"
															}
														},
														"id": 1599,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3511:13:12",
														"memberName": "highestBidder",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1392,
														"src": "3503:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1600,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3527:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1601,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3531:6:12",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3527:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3503:34:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1603,
												"nodeType": "ExpressionStatement",
												"src": "3503:34:12"
											},
											{
												"expression": {
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1604,
															"name": "auction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1538,
															"src": "3547:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Auction_$1397_storage_ptr",
																"typeString": "struct NftAuction.Auction storage pointer"
															}
														},
														"id": 1606,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3555:10:12",
														"memberName": "highestBid",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1394,
														"src": "3547:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1607,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3568:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1608,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3572:5:12",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "3568:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3547:30:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1610,
												"nodeType": "ExpressionStatement",
												"src": "3547:30:12"
											}
										]
									},
									"functionSelector": "ad6561ec",
									"id": 1612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "placeBid",
									"nameLocation": "2799:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "_auctionId",
												"nameLocation": "2825:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "2817:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2817:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2853:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "2845:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2845:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "2878:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "2870:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2870:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2807:90:12"
									},
									"returnParameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2913:0:12"
									},
									"scope": 1686,
									"src": "2790:794:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1665,
										"nodeType": "Block",
										"src": "3657:444:12",
										"statements": [
											{
												"assignments": [
													1619
												],
												"declarations": [
													{
														"constant": false,
														"id": 1619,
														"mutability": "mutable",
														"name": "auction",
														"nameLocation": "3683:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 1665,
														"src": "3667:23:12",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Auction_$1397_storage_ptr",
															"typeString": "struct NftAuction.Auction"
														},
														"typeName": {
															"id": 1618,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1617,
																"name": "Auction",
																"nameLocations": [
																	"3667:7:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1397,
																"src": "3667:7:12"
															},
															"referencedDeclaration": 1397,
															"src": "3667:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Auction_$1397_storage_ptr",
																"typeString": "struct NftAuction.Auction"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1623,
												"initialValue": {
													"baseExpression": {
														"id": 1620,
														"name": "auctions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1402,
														"src": "3693:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Auction_$1397_storage_$",
															"typeString": "mapping(uint256 => struct NftAuction.Auction storage ref)"
														}
													},
													"id": 1622,
													"indexExpression": {
														"id": 1621,
														"name": "_auctionId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1614,
														"src": "3702:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3693:20:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Auction_$1397_storage",
														"typeString": "struct NftAuction.Auction storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3667:46:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1625,
																	"name": "auction",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1619,
																	"src": "3731:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Auction_$1397_storage_ptr",
																		"typeString": "struct NftAuction.Auction storage pointer"
																	}
																},
																"id": 1626,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3739:5:12",
																"memberName": "ended",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1390,
																"src": "3731:13:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 1627,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3748:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "3731:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41756374696f6e2068617320656e646564",
															"id": 1629,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3755:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5",
																"typeString": "literal_string \"Auction has ended\""
															},
															"value": "Auction has ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5",
																"typeString": "literal_string \"Auction has ended\""
															}
														],
														"id": 1624,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3723:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3723:52:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1631,
												"nodeType": "ExpressionStatement",
												"src": "3723:52:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1637,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1406,
															"src": "3879:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1638,
																"name": "auction",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1619,
																"src": "3898:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Auction_$1397_storage_ptr",
																	"typeString": "struct NftAuction.Auction storage pointer"
																}
															},
															"id": 1639,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3906:13:12",
															"memberName": "highestBidder",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1392,
															"src": "3898:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1640,
																"name": "auction",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1619,
																"src": "3933:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Auction_$1397_storage_ptr",
																	"typeString": "struct NftAuction.Auction storage pointer"
																}
															},
															"id": 1641,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3941:7:12",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1380,
															"src": "3933:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1633,
																		"name": "auction",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1619,
																		"src": "3832:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Auction_$1397_storage_ptr",
																			"typeString": "struct NftAuction.Auction storage pointer"
																		}
																	},
																	"id": 1634,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3840:11:12",
																	"memberName": "nftContract",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1378,
																	"src": "3832:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1632,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 947,
																"src": "3824:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$947_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 1635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3824:28:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$947",
																"typeString": "contract IERC721"
															}
														},
														"id": 1636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3853:12:12",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 912,
														"src": "3824:41:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 1642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3824:134:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1643,
												"nodeType": "ExpressionStatement",
												"src": "3824:134:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1654,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4050:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_NftAuction_$1686",
																			"typeString": "contract NftAuction"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_NftAuction_$1686",
																			"typeString": "contract NftAuction"
																		}
																	],
																	"id": 1653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4042:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1652,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4042:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4042:13:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4056:7:12",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "4042:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1648,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4026:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_NftAuction_$1686",
																				"typeString": "contract NftAuction"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_NftAuction_$1686",
																				"typeString": "contract NftAuction"
																			}
																		],
																		"id": 1647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4018:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1646,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4018:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4018:13:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1645,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4010:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1644,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4010:8:12",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4010:22:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1651,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4033:8:12",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "4010:31:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4010:54:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1658,
												"nodeType": "ExpressionStatement",
												"src": "4010:54:12"
											},
											{
												"expression": {
													"id": 1663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1659,
															"name": "auction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1619,
															"src": "4074:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Auction_$1397_storage_ptr",
																"typeString": "struct NftAuction.Auction storage pointer"
															}
														},
														"id": 1661,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4082:5:12",
														"memberName": "ended",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1390,
														"src": "4074:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1662,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4090:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4074:20:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1664,
												"nodeType": "ExpressionStatement",
												"src": "4074:20:12"
											}
										]
									},
									"functionSelector": "b9a2de3a",
									"id": 1666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "endAuction",
									"nameLocation": "3619:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "_auctionId",
												"nameLocation": "3638:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "3630:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3630:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3629:20:12"
									},
									"returnParameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3657:0:12"
									},
									"scope": 1686,
									"src": "3610:491:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1669,
										"nodeType": "Block",
										"src": "4134:37:12",
										"statements": []
									},
									"id": 1670,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4114:2:12"
									},
									"returnParameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4134:0:12"
									},
									"scope": 1686,
									"src": "4107:64:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										449
									],
									"body": {
										"id": 1684,
										"nodeType": "Block",
										"src": "4268:71:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1677,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4286:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4290:6:12",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4286:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1679,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1406,
																"src": "4300:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4286:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792061646d696e2063616e2075706772616465",
															"id": 1681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4307:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ec4db7c12adfeafed8f2b8a0ed8eb5e16dffad32197807f360486a7cc4cdb582",
																"typeString": "literal_string \"Only admin can upgrade\""
															},
															"value": "Only admin can upgrade"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ec4db7c12adfeafed8f2b8a0ed8eb5e16dffad32197807f360486a7cc4cdb582",
																"typeString": "literal_string \"Only admin can upgrade\""
															}
														],
														"id": 1676,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4278:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4278:54:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1683,
												"nodeType": "ExpressionStatement",
												"src": "4278:54:12"
											}
										]
									},
									"id": 1685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "4186:17:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1674,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4259:8:12"
									},
									"parameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4221:17:12",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "4213:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4213:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4203:41:12"
									},
									"returnParameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4268:0:12"
									},
									"scope": 1686,
									"src": "4177:162:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1687,
							"src": "403:3938:12",
							"usedErrors": [
								62,
								65,
								340,
								345,
								546,
								559,
								957,
								1220
							],
							"usedEvents": [
								70,
								503
							]
						}
					],
					"src": "51:4291:12"
				},
				"id": 12
			}
		}
	}
}